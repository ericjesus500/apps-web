<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#e44f26">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Eventos en HTML - HTML en español - Lenguaje HTML</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Si queremos disparar una función Javascript cuando ocurra un determinado evento desde HTML, sólo hay que usar el atributo adecuado.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Eventos en HTML - HTML en español">
  <meta property="og:image" content="https://lenguajehtml.com/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Si queremos disparar una función Javascript cuando ocurra un determinado evento desde HTML, sólo hay que usar el atributo adecuado.">
  <meta property="og:url" content="https://lenguajehtml.com/html/interactivas/eventos-html/">
  <meta property="twitter:url" content="https://lenguajehtml.com/html/interactivas/eventos-html/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Eventos en HTML - HTML en español">
  <meta property="twitter:description" content="Si queremos disparar una función Javascript cuando ocurra un determinado evento desde HTML, sólo hay que usar el atributo adecuado.">
  <meta property="twitter:image" content="https://lenguajehtml.com/large-summary.jpg">

  </head>

<body class="html" style="--logo-color: #e44f26"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="/">
  <svg><use href="../../../assets/logos.svg#html"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeHTML.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/html.jpg')">
    <h1><a href="index.htm">Eventos en HTML</a></h1><h2 class="typewriter">Conectar una acción de usuario con Javascript</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../etiqueta-html-dialog/index.htm">La etiqueta &lt;dialog&gt;</a>
    <a class="current" href="index.htm">Eventos en HTML</a>
    <a href="../atributo-contenteditable/index.htm">El atributo contenteditable</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>En Javascript hay un concepto llamado <strong>evento</strong> que se utiliza para referirse al instante justo en el que ocurre un determinado suceso. Por ejemplo, existe un evento llamado <code>click</code> que se dispara <strong>cuando un usuario hace clic sobre un elemento HTML</strong>.</p>
<p>Nosotros podemos utilizar estos eventos para comunicar al navegador que, cuando ocurra un evento determinado, realice una acción Javascript. De esta forma, podemos preparar nuestra página para que actúe según las acciones del usuario (<em>u otros eventos más complejos</em>).</p>
<h3 id="eventos" tabindex="-1"><a class="header-anchor" href="#eventos">Eventos</a></h3>
<p>Existen muchísimos tipos de eventos en Javascript. Vamos a comenzar con eventos <code>click</code>, que son los más sencillos de entender. Lo primero es elegir la etiqueta en la que queremos que ocurra el evento. Una vez elegida, colocaremos un atributo en dicha etiqueta para detectar si se produce el evento.</p>
<h4 id="eventos-en-línea" tabindex="-1"><a class="header-anchor" href="#eventos-en-línea">Eventos en línea</a></h4>
<p>Por ejemplo, si queremos detectar el evento <code>click</code>, lo prefijamos con un <code>on</code> y lo añadimos como atributo en la etiqueta HTML:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gandalf.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gandalf<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'¡Has hecho clic!'</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span></code></pre>
<p>En este sencillo ejemplo, hemos especificado una imagen que es la que estará «escuchando» el evento <code>click</code>. Si el usuario pulsa sobre ese elemento, el navegador disparará el evento y ejecutará el código Javascript al que hace referencia ese atributo. En este caso, es un código en línea, pero podría ser ejecutar una función u algo similar.</p>
<blockquote>
<p>Si quieres saber más sobre los eventos HTML, echa un vistazo a <a href="https://lenguajejs.com/javascript/eventos/eventos-html/">eventos HTML</a>.</p>
</blockquote>
<h4 id="eventos-desde-javascript" tabindex="-1"><a class="header-anchor" href="#eventos-desde-javascript">Eventos desde Javascript</a></h4>
<p>En algunas situaciones, utilizar eventos desde HTML no es lo más apropiado, ya que estás mezclando código Javascript dentro del HTML, y eso hace que sea difícil de mantener y organizar. Por esta razón, lo habitual suele ser darle un nombre al elemento mediante un <code>id</code> o <code>class</code>, y luego realizar la tarea o funcionalidad desde Javascript:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gandalf-image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gandalf.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gandalf<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> gandalfImage <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".gandalf-image"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  gandalfImage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"¡Has hecho click!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>Observa que en este caso, el fragmento de código Javascript de la etiqueta <code>&lt;script&gt;</code> la podemos extraer a un fichero externo y enlazarlo mediante el atributo <code>src</code> de la etiqueta <code>&lt;script&gt;</code>. De esta forma tendríamos separado el código y sería más fácil de mantener de cara al futuro.</p>
<blockquote>
<p>Si quieres saber más sobre este enfoque, echa un vistazo a <a href="https://lenguajejs.com/javascript/eventos/addeventlistener/">el método addEventListener()</a>.</p>
</blockquote>
<h3 id="detalles-del-evento" tabindex="-1"><a class="header-anchor" href="#detalles-del-evento">Detalles del evento</a></h3>
<p>En los eventos, puede que queramos obtener información más específica, como por ejemplo, el número de veces que hizo clic el usuario sobre la imagen, si fue un solo clic, si fue doble clic, etc... Estos datos específicos, podemos encontrarlo en un objeto que tenemos disponible en los eventos.</p>
<p>Imaginemos el siguiente código HTML:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gandalf-image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gandalf.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gandalf<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Has hecho clic a Gandalf <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> veces.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>En este caso, en lugar del <code>alert()</code> usado antes, vamos a ejecutar una función javascript con un código diferente. Observa que también hemos añadido un párrafo de texto que contiene una frase y un fragmento <code>&lt;span&gt;</code> con <code>id=&quot;number&quot;</code> que contendrá el número de veces que se ha pulsado sobre la imagen. Inicialmente se encuentra establecido a <code>0</code>.</p>
<p>Por otro lado, la función pasa por parámetro una variable especial <code>event</code>, que es la que nos va a dar la información sobre el evento ocurrido, y que posteriormente utilizaremos para extraer dicha información:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> gandalfImage <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".gandalf-image"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> number <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#num"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

gandalfImage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  number<span class="token punctuation">.</span>textContent <span class="token operator">=</span> event<span class="token punctuation">.</span>detail<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Este código busca la etiqueta HTML que tiene un <code>id=&quot;number&quot;</code>, y mediante <code>.textContent</code> modificamos su contenido. El nuevo contenido es <code>event.detail</code> que no es más que un dato que se encuentra en el evento <code>click</code> que se ha disparado. En este caso concreto, ese dato devuelve el <strong>número de veces seguidas</strong> que el usuario pulsó sobre la imagen.</p>
<p>Veamos finalmente lo que ocurriría con este ejemplo. Lo que aparece a la derecha es cuando el usuario pulsa el botón del ratón (<em>LButtonDown</em>) y cuando lo suelta (<em>LButtonUp</em>):</p>
<p><video src="gandalf-onclick.mp4" loop="" autoplay=""></video></p>
<h3 id="tipos-de-eventos" tabindex="-1"><a class="header-anchor" href="#tipos-de-eventos">Tipos de eventos</a></h3>
<p>Existen muchos eventos, prácticamente uno para cada acción que pueda ocurrir en un documento HTML. A continuación, muestro <strong>algunos</strong> grupos de eventos muy utilizados frecuentemente de la gran cantidad de eventos existentes en Javascript.</p>
<h4 id="eventos-de-documento" tabindex="-1"><a class="header-anchor" href="#eventos-de-documento">Eventos de documento</a></h4>
<p>Es posible poner a escuchar ciertos eventos sobre el documento HTML completo, estableciendo el atributo del evento en la etiqueta <code>&lt;body&gt;</code>:</p>
<table>
<thead>
<tr>
<th>Tipo de evento</th>
<th>Atributo HTML</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td>UIEvent</td>
<td>onLoad</td>
<td>La página (el documento HTML) ha terminado de cargarse.</td>
</tr>
<tr>
<td>UIEvent</td>
<td>onUnload</td>
<td>La página (el documento HTML) va a cerrarse.</td>
</tr>
<tr>
<td>UIEvent</td>
<td>onScroll</td>
<td>El usuario ha hecho scroll sobre la página (el documento HTML).</td>
</tr>
</tbody>
</table>
<h3 id="eventos-de-carga-de-recursos" tabindex="-1"><a class="header-anchor" href="#eventos-de-carga-de-recursos">Eventos de carga de recursos</a></h3>
<p>Sobre las etiquetas que cargan un archivo externo, como podrían ser <code>&lt;img&gt;</code> o <code>&lt;script&gt;</code>, e incluso <code>&lt;style&gt;</code> con estilos CSS en línea. Los archivos multimedia <code>&lt;audio&gt;</code> y <code>&lt;video&gt;</code> tienen sus propios eventos específicos, ya que tienen un proceso de carga especial:</p>
<table>
<thead>
<tr>
<th>Tipo de evento</th>
<th>Atributo HTML</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td>UIEvent</td>
<td>onLoad</td>
<td>El recurso ha terminado de cargarse en la página.</td>
</tr>
<tr>
<td>UIEvent</td>
<td>onUnload</td>
<td>El recurso ha sido eliminado de la página.</td>
</tr>
<tr>
<td>UIEvent</td>
<td>onAbort</td>
<td>El recurso ha sido cancelado y no ha terminado su carga.</td>
</tr>
<tr>
<td>UIEvent</td>
<td>onError</td>
<td>El recurso ha dado un error y no ha terminado su carga.</td>
</tr>
<tr>
<td>UIEvent</td>
<td>onSelect</td>
<td>El usuario ha seleccionado un texto de un campo de datos.</td>
</tr>
</tbody>
</table>
<h4 id="eventos-de-foco-en-elementos" tabindex="-1"><a class="header-anchor" href="#eventos-de-foco-en-elementos">Eventos de foco en elementos</a></h4>
<p>Sobre etiquetas <code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code>, <code>&lt;select&gt;</code>, <code>&lt;a&gt;</code> o cualquier otra etiqueta que pueda ser seleccionable por el usuario pulsando la tecla <kbd>TAB</kbd>, existen una serie de eventos para controlar cuando gana o pierde el foco un elemento:</p>
<table>
<thead>
<tr>
<th>Tipo de evento</th>
<th>Atributo HTML</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td>FocusEvent</td>
<td>onBlur</td>
<td>El elemento ha perdido el foco (foco de salida).</td>
</tr>
<tr>
<td>FocusEvent</td>
<td>onFocusout</td>
<td>El elemento ha perdido el foco (y permite bubble).</td>
</tr>
<tr>
<td>FocusEvent</td>
<td>onFocus</td>
<td>El elemento ha ganado el foco (foco de entrada).</td>
</tr>
<tr>
<td>FocusEvent</td>
<td>onFocusin</td>
<td>El elemento ha ganado el foco (y permite bubble).</td>
</tr>
</tbody>
</table>
<h4 id="eventos-de-ratón" tabindex="-1"><a class="header-anchor" href="#eventos-de-ratón">Eventos de ratón</a></h4>
<p>Los eventos de ratón se utilizan para detectar todas aquellas acciones que el usuario realiza mediante el ratón con algún elemento de la página, como podría ser mover el ratón por encima de ellos, hacer clic, mover la rueda del ratón, etc...</p>
<table>
<thead>
<tr>
<th>Tipo de evento</th>
<th>Atributo HTML</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td>MouseEvent</td>
<td>onClick</td>
<td>El usuario ha pulsado (<em>y soltado</em>) el elemento.</td>
</tr>
<tr>
<td>MouseEvent</td>
<td>onDblclick</td>
<td>El usuario ha hecho doble clic en el elemento.</td>
</tr>
<tr>
<td>MouseEvent</td>
<td>onMousedown</td>
<td>El usuario ha pulsado (<em>aún sin haber soltado</em>) el elemento.</td>
</tr>
<tr>
<td>MouseEvent</td>
<td>onMouseup</td>
<td>El usuario ha soltado el botón pulsado en un elemento.</td>
</tr>
<tr>
<td>MouseEvent</td>
<td>onMousemove</td>
<td>El usuario ha movido el ratón.</td>
</tr>
<tr>
<td>MouseEvent</td>
<td>onMouseenter</td>
<td>El usuario ha movido el ratón dentro de un elemento.</td>
</tr>
<tr>
<td>MouseEvent</td>
<td>onMouseleave</td>
<td>El usuario ha movido el ratón fuera de un elemento.</td>
</tr>
<tr>
<td>MouseEvent</td>
<td>onMouseout</td>
<td>El usuario ha movido el ratón fuera de un elemento (bubbles).</td>
</tr>
<tr>
<td>MouseEvent</td>
<td>onMouseover</td>
<td>El usuario ha movido el ratón dentro de un elemento (bubbles).</td>
</tr>
<tr>
<td>WheelEvent</td>
<td>onWheel</td>
<td>El usuario ha movido la rueda del ratón.</td>
</tr>
</tbody>
</table>
<h4 id="eventos-de-entrada-de-datos" tabindex="-1"><a class="header-anchor" href="#eventos-de-entrada-de-datos">Eventos de entrada de datos</a></h4>
<p>Sobre elementos <code>&lt;input&gt;</code> o elementos HTML con el atributo <strong>contentEditable</strong>, y por lo tanto, elementos HTML que son editables por el usuario:</p>
<table>
<thead>
<tr>
<th>Tipo de evento</th>
<th>Atributo HTML</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td>InputEvent</td>
<td>onBeforeInput</td>
<td>Un elemento <code>&lt;input&gt;</code> o con atributo contentEditable a punto de cambiar.</td>
</tr>
<tr>
<td>InputEvent</td>
<td>onInput</td>
<td>Un elemento <code>&lt;input&gt;</code> o con atributo contentEditable ha cambiado.</td>
</tr>
</tbody>
</table>
<h4 id="eventos-multimedia" tabindex="-1"><a class="header-anchor" href="#eventos-multimedia">Eventos multimedia</a></h4>
<p>Sobre elementos multimedia como <code>&lt;audio&gt;</code> o <code>&lt;video&gt;</code>, donde se carga un recurso (<em>MP4, WebM, MP3, OGG...</em>) externo:</p>
<table>
<thead>
<tr>
<th>Tipo de evento</th>
<th>Atributo HTML</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td>MediaEvent</td>
<td>onEmptied</td>
<td>El audio o video se ha vacíado (recargar elemento).</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onLoadedMetadata</td>
<td>Se han precargado los metadatos del audio o video (duración, subs...)</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onLoadedData</td>
<td>Se ha precargado el comienzo del audio o video.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onCanPlay</td>
<td>El audio o video se ha precargado lo suficiente para reproducir.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onCanPlayThrough</td>
<td>El audio o video se ha precargado completamente.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onPlay</td>
<td>El audio o video comienza a reproducirse (tras haber sido pausado).</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onPlaying</td>
<td>El audio o video comienza a reproducirse.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onPause</td>
<td>El audio o video ha sido pausado.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onTimeUpdate</td>
<td>El audio o video ha avanzado en su reproducción.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onEnded</td>
<td>El audio o video ha completado su reproducción.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onWaiting</td>
<td>El audio o video está esperando a que el buffer se complete.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onDurationChange</td>
<td>El audio o video ha cambiado su duración total (metadatos).</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onRateChange</td>
<td>El audio o video ha cambiado su velocidad de reproducción.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onVolumeChange</td>
<td>El audio o video ha cambiado su volumen de reproducción.</td>
</tr>
<tr>
<td>ProgressEvent</td>
<td>onProgress</td>
<td>El audio o video se está descargando.</td>
</tr>
<tr>
<td>ProgressEvent</td>
<td>onLoadStart</td>
<td>El audio o video ha comenzado a descargarse.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onSuspend</td>
<td>La precarga del audio o video ha sido suspendida (ok o pause).</td>
</tr>
<tr>
<td>UIEvent</td>
<td>onAbort</td>
<td>La precarga del audio o video ha sido abortada o reiniciada.</td>
</tr>
<tr>
<td>UIEvent</td>
<td>onError</td>
<td>Ha ocurrido un error.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onStalled</td>
<td>El navegador intenta precargar el audio o video, pero se ha estancado.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onSeeking</td>
<td>El navegador comenzó a buscar un momento concreto del audio/video.</td>
</tr>
<tr>
<td>MediaEvent</td>
<td>onSeeked</td>
<td>El navegador terminó de buscar un momento concreto del audio/video.</td>
</tr>
<tr>
<td>UIEvent</td>
<td>onResize</td>
<td>El video ha sido redimensionado.</td>
</tr>
</tbody>
</table>
<p>Todos estos eventos (<em>y muchos otros no incluídos en esta sección</em>) se pueden llamar desde Javascript para realizar personalizaciones más específicas, pero en ese caso ya hay que recurrir a Javascript y realizar tareas y metodologías de programación más específicas.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../etiqueta-html-dialog/index.htm" title="La etiqueta &lt;dialog&gt;">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>La etiqueta &lt;dialog&gt;</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../atributo-contenteditable/index.htm" title="El atributo contenteditable">
  <div>
    <span>El atributo contenteditable</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/RW5erp81FMY" title="Consejos y buenas prácticas (I): HEAD">
  <img loading="lazy" src="../../../vi/RW5erp81FMY/mqdefault.jpg" alt="Consejos y buenas prácticas (I): HEAD">
</a><a href="https://youtu.be/SVomAFpMw30" title="Consejos y buenas prácticas (II): HTML + WebFonts">
  <img loading="lazy" src="../../../vi/SVomAFpMw30/mqdefault.jpg" alt="Consejos y buenas prácticas (II): HTML + WebFonts">
</a><a href="https://youtu.be/cQIlwKSAyAc" title="Crear packs de iconos con sprites SVG">
  <img loading="lazy" src="../../../vi/cQIlwKSAyAc/mqdefault.jpg" alt="Crear packs de iconos con sprites SVG">
</a><a href="https://youtu.be/lDPJQyXow_g" title="Consejos y buenas prácticas (VII): SEO">
  <img loading="lazy" src="../../../vi/lDPJQyXow_g/mqdefault.jpg" alt="Consejos y buenas prácticas (VII): SEO">
</a><a href="https://youtu.be/LAHR5gl07ks" title="Consejos y buenas prácticas (V): Accesibilidad">
  <img loading="lazy" src="../../../vi/LAHR5gl07ks/mqdefault.jpg" alt="Consejos y buenas prácticas (V): Accesibilidad">
</a><a href="https://youtu.be/7oPdEM0VXOs" title="Consejos y buenas prácticas (VI): Performance">
  <img loading="lazy" src="../../../vi/7oPdEM0VXOs/mqdefault.jpg" alt="Consejos y buenas prácticas (VI): Performance">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-5', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
