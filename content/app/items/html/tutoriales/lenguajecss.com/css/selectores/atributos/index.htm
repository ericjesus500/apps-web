<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Selectores de atributos - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Mediante los atributos CSS se permite aplicar estilos a elementos HTML dependiendo del contenido de sus atributos HTML.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Selectores de atributos - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/selectores/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Mediante los atributos CSS se permite aplicar estilos a elementos HTML dependiendo del contenido de sus atributos HTML.">
  <meta property="og:url" content="https://lenguajecss.com/css/selectores/atributos/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/selectores/atributos/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Selectores de atributos - CSS en español">
  <meta property="twitter:description" content="Mediante los atributos CSS se permite aplicar estilos a elementos HTML dependiendo del contenido de sus atributos HTML.">
  <meta property="twitter:image" content="https://lenguajecss.com/css/selectores/large-summary.jpg">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Selectores de atributos</a></h1><h2 class="typewriter">Formas de seleccionar elementos según sus atributos</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../selectores-basicos/index.htm">Selectores básicos</a>
    <a class="current" href="index.htm">Selectores de atributos</a>
    <a href="../combinadores/index.htm">Combinadores</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Una característica muy interesante de CSS, pero poco utilizada, es la posibilidad de aplicar estilos dependiendo de la existencia o contenido de ciertos <strong>atributos en los elementos HTML</strong>.</p>
<h3 id="qué-son-los-atributos-css" tabindex="-1"><a class="header-anchor" href="#qué-son-los-atributos-css">¿Qué son los atributos CSS?</a></h3>
<p>Hasta ahora, hemos visto una forma rápida y extendida de hacer esto para atributos muy conocidos como <code>id</code> o <code>class</code>, a través de <code>#nombre</code> o <code>.nombre</code>, respectivamente. Sin embargo, podríamos querer hacer esto, pero no para los atributos <code>class</code> o <code>id</code>, sino para otros atributos diferentes:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Botón activo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>Botón desactivado<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre>
<p>En algunos casos puede que no tengamos clases ni id establecidas, y nos interese dar estilo por otros atributos. En el ejemplo anterior, no existen atributos <code>class</code> ni <code>id</code>, pero si existe un atributo <code>disabled</code>. Con los <strong>atributos CSS</strong> podríamos seleccionar los elementos que contienen un atributo específico.</p>
<p><img src="sintaxis-atributos.png" alt="Sintaxis: Atributos" width="1017" height="283" loading="lazy"></p>
<p>En CSS, estos <strong>atributos</strong> se indican rodeando de corchetes <code>[]</code> al atributo en cuestión. Veamos un ejemplo:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Botón activo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>Botón desactivado<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">button</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>            <span class="token comment">/* Selecciona todos los botones */</span>
  <span class="token selector">button[disabled]</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>  <span class="token comment">/* Botón con atributo disabled */</span>
  <span class="token selector">[disabled]</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>        <span class="token comment">/* Cualquier elemento con atributo disabled */</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>Observa que en el primer caso, seleccionamos todos los elementos que sean <code>&lt;button&gt;</code>. En el segundo caso, seleccionamos todos los botones que sean <code>&lt;button&gt;</code> pero que además tengan el atributo <code>disabled</code>. En la última opción, al no indicar el elemento <code>button</code>, estamos seleccionando todos los elementos html que tengan el atributo <code>disabled</code>, independientemente de que sean <code>&lt;button&gt;</code>, <code>&lt;input&gt;</code> o cualquier otro elemento.</p>
<h3 id="atributos-css" tabindex="-1"><a class="header-anchor" href="#atributos-css">Atributos CSS</a></h3>
<p>Sin embargo, no todo es tan sencillo como el ejemplo anterior. Hay varias formas de utilizar los <strong>atributos CSS</strong>, algunas muy potentes y flexibles, basadas en un concepto llamado expresiones regulares en los que están inspirados (<em>aunque no son estrictamente expresiones regulares</em>):</p>
<table>
<thead>
<tr>
<th>Atributo</th>
<th>¿Cuándo se aplica el estilo al elemento?</th>
</tr>
</thead>
<tbody>
<tr>
<td colspan="2"><strong>Básicos</strong></td>
</tr>
<tr>
<td><code>[href]</code></td>
<td>Si tiene un atributo <code>href</code>.</td>
</tr>
<tr>
<td><code>[href=&quot;#top&quot;]</code></td>
<td>Si tiene un atributo <code>href</code> y su valor es <code>#top</code>.</td>
</tr>
<tr>
<td><code>[class~=&quot;manzdev&quot;]</code></td>
<td>Si tiene un atributo <code>class</code> con una lista de valores y uno de ellos es <code>manzdev</code>.</td>
</tr>
<tr>
<td><code>[lang|=&quot;es&quot;]</code></td>
<td>Si tiene un atributo <code>lang</code> con una lista de valores, donde uno empieza por <code>es-</code>.</td>
</tr>
<tr>
<td colspan="2"><strong>Avanzados</strong></td>
</tr>
<tr>
<td><code>[href^=&quot;https://&quot;]</code></td>
<td>Si tiene un atributo <code>href</code> y su valor comienza por <code>https://</code>.</td>
</tr>
<tr>
<td><code>[href$=&quot;.pdf&quot;]</code></td>
<td>Si tiene un atributo <code>href</code> y su valor termina por <code>.pdf</code> (un enlace a un PDF).</td>
</tr>
<tr>
<td><code>[href*=&quot;manzdev&quot;]</code></td>
<td>Si tiene un atributo <code>href</code> y su valor contiene <code>manzdev</code>.</td>
</tr>
</tbody>
</table>
<p>Veamos cada uno de ellos por separado para entenderlos bien.</p>
<h4 id="atributo-existente" tabindex="-1"><a class="header-anchor" href="#atributo-existente">Atributo existente</a></h4>
<p>Para empezar, y como hemos mencionado antes, podemos utilizar el atributo <code>[disabled]</code> para seleccionar todas las etiquetas HTML que contengan un atributo <code>disabled</code>, utilizado para desactivar el elemento. Estos elementos, aparecerían con fondo gris:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">[disabled]</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>El atributo <code>disabled</code> es sólo un ejemplo, podríamos utilizar cualquier otro atributo que queramos. Si el elemento no tiene el atributo mencionado, no se le aplican los estilos.</p>
<h4 id="atributo-con-valor-exacto" tabindex="-1"><a class="header-anchor" href="#atributo-con-valor-exacto">Atributo con valor exacto</a></h4>
<p>La potencia de los <strong>atributos CSS</strong> es que podemos indicar el valor exacto que deben tener para que sean seleccionados. Para ello, simplemente utilizamos el símbolo <code>=</code> y escribimos el texto entre comillas dobles:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">a[rel="nofollow"]</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Este ejemplo selecciona los enlaces <code>&lt;a&gt;</code> que tienen un atributo <code>rel</code> establecido a <code>nofollow</code>. Esta es una característica que le indica a Google (<em>u otros robots o crawlers</em>) que ese enlace <strong>no se debería tener en cuenta</strong> para seguirlo, algo que puede ser realmente útil para desincentivar SPAM en comentarios, por ejemplo.</p>
<h4 id="atributo-con-lista-de-palabras" tabindex="-1"><a class="header-anchor" href="#atributo-con-lista-de-palabras">Atributo con lista de palabras</a></h4>
<p>Imagina que un elemento HTML tiene un atributo (<em>en este ejemplo concreto el atributo <code>data-mood</code></em>) con una lista de palabras separadas por espacio. En nuestro código CSS, mediante el mecanismo de <strong>Atributos CSS</strong> y el símbolo <code>~=</code>, puedes seleccionar los elementos que contengan la palabra indicada en su lista de palabras separadas por espacio.</p>
<p>Veamos un ejemplo:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-mood</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>happy sad<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Uno<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
<span class="token selector">[data-mood~="happy"]</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>En este caso, el elemento <code>&lt;div&gt;</code> se seleccionará porque la palabra <code>happy</code> está dentro de la lista de palabras separadas por espacio del atributo <code>data-mood</code>.</p>
<h4 id="atributo-con-lista-compuesta" tabindex="-1"><a class="header-anchor" href="#atributo-con-lista-compuesta">Atributo con lista compuesta</a></h4>
<p>Por otro lado, podemos utilizar el símbolo <code>|=</code> para seleccionar elementos HTML que tengan un atributo con una lista de palabras compuestas separadas por un guión. Indicando un valor, le diremos al navegador que seleccione el elemento si contiene una palabra donde su prefijo sea el valor indicado.</p>
<p>Veamos un ejemplo donde se verá claramente:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>es-MX en-EN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>English<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
<span class="token selector">[lang|="es"]</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>En este caso, el <code>&lt;div&gt;</code> será seleccionado porque contiene una palabra compuesta que comienza por <code>es-</code>, es decir, concretamente la palabra compuesta <code>es-MX</code>.</p>
<h4 id="comienzo-de-un-atributo" tabindex="-1"><a class="header-anchor" href="#comienzo-de-un-atributo">Comienzo de un atributo</a></h4>
<p>Una de las características más potentes de los <strong>atributos CSS</strong> proviene de las llamadas expresiones regulares de Javascript. Aunque realmente, no son expresiones regulares, los <strong>atributos CSS</strong> permiten seleccionar elementos HTML dependiendo de si empiezan (<em>o acaban</em>) por el valor indicado.</p>
<p>Veamos un ejemplo, donde en el primer bloque, cualquier enlace con un atributo <code>href</code> aplica un código CSS donde se añade el texto del enlace. Esto podría ser útil para mostrar en el CSS para imprimir una página:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">a[href]::after</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">": "</span> <span class="token function">attr</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">a[href^="http://"]::after</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">" (Página no segura): "</span> <span class="token function">attr</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>En este ejemplo, los enlaces <code>&lt;a&gt;</code> a páginas <code>http://</code> (<em>inseguras</em>) se prefijarán con el texto <code>(Página no segura):</code> antes del enlace. Esto es posible gracias a utilizar los símbolos <code>^=</code> a la hora de indicar el valor del atributo, en el cuál se especifica el texto por el que debe empezar.</p>
<h4 id="final-de-un-atributo" tabindex="-1"><a class="header-anchor" href="#final-de-un-atributo">Final de un atributo</a></h4>
<p>De la misma forma, es posible seleccionar elementos HTML dependiendo del texto con el que que acaban. Para ello, utilizaremos los símbolos <code>$=</code>, con los que indicaremos el texto en que debe acabar el valor del atributo.</p>
<p>Observa el siguiente ejemplo, donde en su primer bloque CSS, mostramos una imagen con una cadena, <code>icon_url.png</code>, antes de cualquier enlace <code>&lt;a&gt;</code> con el atributo <code>href</code>:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">a[href]::before</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"icon_url.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>
  <span class="token property">padding-right</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">a[href$=".pdf"]::before</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"icon_pdf.png"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Además de esto, y aplicando herencia, en el segundo bloque CSS se sobrescribe la propiedad <code>content</code> anterior en los enlaces donde el atributo <code>href</code> acaba en <code>.pdf</code>. Si es así, mostramos el icono <code>icon_pdf.png</code>, donde se visualizará un icono de un archivo PDF.</p>
<h4 id="atributo-contiene-texto" tabindex="-1"><a class="header-anchor" href="#atributo-contiene-texto">Atributo contiene texto</a></h4>
<p>Por último, también podemos indicar un fragmento de texto que debe estar contenido en el valor de un <strong>atributo CSS</strong>, pero que no es necesariamente el texto íntegro. El fragmento de código CSS debería ser el siguiente:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">a[href*="manz"]</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>En este fragmento de código se indica que para seleccionar un enlace <code>&lt;a&gt;</code>, el enlace al que apunta debe contener de alguna forma el texto <code>manz</code>. En la siguiente tabla se pueden ver varios ejemplos de enlaces, y cuáles se seleccionarían en cada caso:</p>
<table>
<thead>
<tr>
<th>Etiqueta</th>
<th>Valor del atributo href</th>
<th>¿Seleccionado?</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;a&gt;</code></td>
<td>https://<strong>manz</strong>.dev/</td>
<td>✅</td>
</tr>
<tr>
<td><code>&lt;a&gt;</code></td>
<td>https://<strong>manz</strong>.dev/streams</td>
<td>✅</td>
</tr>
<tr>
<td><code>&lt;a&gt;</code></td>
<td>https://www.google.com/</td>
<td>❌ No incluye <code>manz</code></td>
</tr>
<tr>
<td><code>&lt;a&gt;</code></td>
<td>https://www.google.com/search?q=<strong>manzdev</strong></td>
<td>✅</td>
</tr>
<tr>
<td><code>&lt;a&gt;</code></td>
<td><strong>manz</strong></td>
<td>✅</td>
</tr>
<tr>
<td><code>&lt;link&gt;</code></td>
<td>https://manz.dev/index.css</td>
<td>❌ No es un enlace <code>&lt;a&gt;</code></td>
</tr>
</tbody>
</table>
<p>Observa que en el último caso, aún incluyendo la palabra <strong>manz</strong> no se seleccionaría, ya que el atributo <code>href</code> que lo contiene es una etiqueta <code>&lt;link&gt;</code> y no de una etiqueta <code>&lt;a&gt;</code> como se pide en el fragmento de código anterior.</p>
<h3 id="mayúsculas-y-minúsculas" tabindex="-1"><a class="header-anchor" href="#mayúsculas-y-minúsculas">Mayúsculas y minúsculas</a></h3>
<p>Algo importante que cabe destacar, es que estos fragmentos de código para seleccionar <strong>atributos CSS</strong> son <strong>sensibles a mayúsculas y minúsculas</strong> (<em>case sensitive</em>), o lo que es lo mismo, sólo tendrían en cuenta uno de los dos casos:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">a[href$=".pdf"]</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>En el caso del ejemplo anterior, sólo se seleccionarían los enlaces que tengan un fichero <code>.pdf</code> donde la extensión esté en minúsculas. Si tenemos un enlace a un fichero <code>.PDF</code> no se incluiría en esa selección. Para evitar esto, podemos añadir una <code>i</code> antes del cierre <code>]</code> del atributo. De esta forma, no será sensible a mayúsculas y minúsculas:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">a[href$=".pdf" i]</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>De esta forma no habría problema, ya que esa <code>i</code> hace referencia a «case <strong>i</strong>nsensitive». No tendría en cuenta si son mayúsculas o minúsculas, sino que las tratas a todas como iguales.</p>
<p><caniuse-support title="Case-insensitive CSS attribute selectors" feature="css-case-insensitive" edge="79/y" firefox="47/y" chrome="49/y" safari="9/y" opera="36/y" ios_saf="9.0-9.2/y" and_chr="116/y" and_ff="116/y">
</caniuse-support></p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../selectores-basicos/index.htm" title="Selectores básicos">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Selectores básicos</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../combinadores/index.htm" title="Combinadores">
  <div>
    <span>Combinadores</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/mNTj6KfYeXc" title="Cómo crear GRADIENTES CÓNICOS en CSS">
  <img loading="lazy" src="../../../vi/mNTj6KfYeXc/mqdefault.jpg" alt="Cómo crear GRADIENTES CÓNICOS en CSS">
</a><a href="https://youtu.be/8Jh2K3tq5n0" title="Tutorial para aprender Animaciones CSS">
  <img loading="lazy" src="../../../vi/8Jh2K3tq5n0/mqdefault.jpg" alt="Tutorial para aprender Animaciones CSS">
</a><a href="https://youtu.be/wIGAyJGx2kc" title="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
  <img loading="lazy" src="../../../vi/wIGAyJGx2kc/mqdefault.jpg" alt="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
</a><a href="https://youtu.be/hiRIjRf2QD8" title="FUNCIONES de TIEMPO en CSS: ¡Controla el ritmo de tus animaciones!">
  <img loading="lazy" src="../../../vi/hiRIjRf2QD8/mqdefault.jpg" alt="FUNCIONES de TIEMPO en CSS: ¡Controla el ritmo de tus animaciones!">
</a><a href="https://youtu.be/toA0uqeuHXQ" title="¿Qué es el CSS NESTING? ¿Cómo funciona?">
  <img loading="lazy" src="../../../vi/toA0uqeuHXQ/mqdefault.jpg" alt="¿Qué es el CSS NESTING? ¿Cómo funciona?">
</a><a href="https://youtu.be/bMiXLfOnuUA" title="ECSStatic: Librería CSS-in-JS">
  <img loading="lazy" src="../../../vi/bMiXLfOnuUA/mqdefault.jpg" alt="ECSStatic: Librería CSS-in-JS">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
