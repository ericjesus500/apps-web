<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Pseudoclases de estructura - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="CSS permite utilizar pseudoclases avanzadas para seleccionar elementos dependiendo de su estructura o posición, llegando a contabilizarlos.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Pseudoclases de estructura - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/selectores/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="CSS permite utilizar pseudoclases avanzadas para seleccionar elementos dependiendo de su estructura o posición, llegando a contabilizarlos.">
  <meta property="og:url" content="https://lenguajecss.com/css/selectores/pseudoclases-estructura/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/selectores/pseudoclases-estructura/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Pseudoclases de estructura - CSS en español">
  <meta property="twitter:description" content="CSS permite utilizar pseudoclases avanzadas para seleccionar elementos dependiendo de su estructura o posición, llegando a contabilizarlos.">
  <meta property="twitter:image" content="https://lenguajecss.com/css/selectores/large-summary.jpg">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Pseudoclases de estructura</a></h1><h2 class="typewriter">Formas de seleccionar elementos por su estructura</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../pseudoclases/index.htm">Pseudoclases</a>
    <a class="current" href="index.htm">Pseudoclases de estructura</a>
    <a href="../pseudoclases-formularios/index.htm">Pseudoclases de formularios</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Existe una amplia gama de <strong>pseudoclases</strong> que permiten seleccionar elementos de un documento HTML según su <strong>posición y/o estructura</strong> en el documento. Vamos a dividirlas en varias categorías y analizarlas detalladamente.</p>
<h3 id="elementos-raíz" tabindex="-1"><a class="header-anchor" href="#elementos-raíz">Elementos raíz</a></h3>
<p>Existen algunas pseudoclases con la que podemos hacer referencia al <strong>elemento padre raíz</strong> del documento donde estamos trabajando. En el caso de estar trabajando en un documento HTML, el elemento raíz es <code>&lt;html&gt;</code>, mientras que en el caso de estar trabajando en un componente, el elemento raíz es el propio componente. Las pseudoclases que podemos usar en cada caso son las siguientes:</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:root</code></td>
<td>Aplica estilo al elemento raíz (padre) del documento HTML.</td>
</tr>
<tr>
<td><code>:host</code></td>
<td>Hace referencia al elemento raíz (padre) de un componente con Shadow DOM. <a href="https://lenguajejs.com/webcomponents/nativos/css-webcomponents/">Ver tema de WebComponents</a>.</td>
</tr>
</tbody>
</table>
<h4 id="pseudoclase-root" tabindex="-1"><a class="header-anchor" href="#pseudoclase-root">Pseudoclase <code>:root</code></a></h4>
<p>La pseudoclase <code>:root</code> hace referencia al elemento raíz del documento HTML, o lo que es lo mismo, la etiqueta <code>&lt;html&gt;</code>. Sin embargo, en muchas ocasiones veremos que en lugar de utilizar directamente la etiqueta, se utiliza la pseudoclase <code>:root</code>. Al ser una pseudoclase, tiene una especificidad CSS más alta (0,1,0) que el elemento <code>html</code>, el cuál, al ser una etiqueta HTML, tiene una especificidad más baja (0,0,1):</p>
<pre class="language-css"><code class="language-css"><span class="token selector">:root</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">html</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>En ambos casos, estamos dando un color de fondo al elemento <code>&lt;html&gt;</code>, sin embargo, si especificamos ambos, la pseudoclase <code>:root</code> sale vencedora, y sobreescribe el color de fondo indicado en <code>html</code>.</p>
<blockquote>
<p>Aunque no es estrictamente necesario, generalmente, la pseudoclase <code>:root</code> suele utilizarse para establecer <a href="../../cascada-css/css-custom-properties/index.htm">variables CSS</a> «globales» que afectan a todo el documento HTML.</p>
</blockquote>
<h3 id="primer-y-último-hijo" tabindex="-1"><a class="header-anchor" href="#primer-y-último-hijo">Primer y último hijo</a></h3>
<p>A continuación muestro un pequeño resumen de estas pseudoclases:</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:first-child</code></td>
<td>Primer elemento hijo (de cualquier tipo).</td>
</tr>
<tr>
<td><code>:last-child</code></td>
<td>Último elemento hijo (de cualquier tipo).</td>
</tr>
</tbody>
</table>
<p>Para ello, volveremos a utilizar una estructura en forma de árbol para ver cómodamente la ubicación de cada uno de los elementos.</p>
<h4 id="pseudoclase-first-child" tabindex="-1"><a class="header-anchor" href="#pseudoclase-first-child">Pseudoclase <code>:first-child</code></a></h4>
<p>Con la pseudoclase <code>:first-child</code> podemos seleccionar el primer elemento (<em>o primeros elementos</em>) de un grupo de elementos al mismo nivel. De esta forma, si indicamos <code>.container :first-child</code> buscará todos los primeros elementos que encuentre:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>elements<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>elements<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>En este ejemplo, se seleccionarían 3 elementos:</p>
<ul>
<li>El primer <code>&lt;div&gt;</code> con clase <code>.elements</code>.</li>
<li>El primer <code>&lt;div&gt;</code> con clase <code>.element</code> dentro del primer <code>.elements</code>.</li>
<li>El primer <code>&lt;div&gt;</code> con clase <code>.element</code> dentro del segundo <code>.elements</code>.</li>
</ul>
<h4 id="pseudoclase-last-child" tabindex="-1"><a class="header-anchor" href="#pseudoclase-last-child">Pseudoclase <code>:last-child</code></a></h4>
<p>De la misma forma, con la pseudoclase <code>:last-child</code> podemos seleccionar el último elemento (<em>o últimos elementos</em>). Funciona exactamente igual que <code>:first-child</code> pero haciendo referencia al último elemento en lugar del primero.</p>
<pre class="language-css"><code class="language-css"><span class="token selector">strong:first-child</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> cyan<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">strong:last-child</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Veamos esto con un gráfico en forma de árbol que hará que el ejemplo sea más visual:</p>
<p><img src="first-last-child.png" alt="Primero o último elemento" width="1074" height="594" loading="lazy"></p>
<p>Observa que en este caso estamos seleccionando sólo los elementos <code>&lt;strong&gt;</code> porque así se lo hemos dicho en el selector del código CSS, donde prefijamos con <code>strong</code> justo antes de <code>:first-child</code> o <code>:last-child</code>. Por lo tanto, solo debe seleccionar el elemento y aplicarle los estilos si además de ser el primero (<em>o último</em>) es un elemento <code>&lt;strong&gt;</code>.</p>
<h3 id="hijos-específicos" tabindex="-1"><a class="header-anchor" href="#hijos-específicos">Hijos específicos</a></h3>
<p>Sin embargo, con las pseudoclases anteriores sólo podemos seleccionar los primeros y últimos elementos, y podríamos necesitar un elemento específico, como el tercero o el quinto, por ejemplo. Para ello, podemos utilizar pseudoclases funcionales como <code>:nth-child()</code> o <code>:nth-last-child()</code>.</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:nth-child(n)</code></td>
<td>Elemento hijo número <code>n</code> (de cualquier tipo).</td>
</tr>
<tr>
<td><code>:nth-last-child(n)</code></td>
<td>Elemento hijo número <code>n</code> empezando desde el final (de cualquier tipo).</td>
</tr>
</tbody>
</table>
<h4 id="pseudoclase-nth-child" tabindex="-1"><a class="header-anchor" href="#pseudoclase-nth-child">Pseudoclase <code>:nth-child()</code></a></h4>
<p>La pseudoclase <code>:nth-child(A)</code> permite especificar el elemento hijo deseado, simplemente estableciendo su número en el parámetro <code>A</code>. No obstante, hay que tener en cuenta que el parámetro <code>A</code> no es sólo un número, sino que es posible escribir ciertas expresiones:</p>
<table>
<thead>
<tr>
<th>Selector</th>
<th>Equivalente a...</th>
<th>Significado</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>strong:nth-child(1)</code></td>
<td><code>strong:first-child {}</code></td>
<td>Primer elemento hijo, que además es un <code>&lt;strong&gt;</code></td>
</tr>
<tr>
<td><code>strong:nth-child(2)</code></td>
<td></td>
<td>Segundo elemento hijo, que además es un <code>&lt;strong&gt;</code></td>
</tr>
<tr>
<td><code>strong:nth-child(3)</code></td>
<td></td>
<td>Tercer elemento hijo, que además es un <code>&lt;strong&gt;</code></td>
</tr>
<tr>
<td><code>strong:nth-child(n)</code></td>
<td><code>strong</code></td>
<td>Todos los elementos hijos que son <code>&lt;strong&gt;</code></td>
</tr>
<tr>
<td><code>strong:nth-child(2n)</code></td>
<td></td>
<td>Todos los elementos hijos pares <code>&lt;strong&gt;</code></td>
</tr>
<tr>
<td><code>strong:nth-child(2n-1)</code></td>
<td></td>
<td>Todos los elementos hijos impares <code>&lt;strong&gt;</code></td>
</tr>
</tbody>
</table>
<blockquote>
<p>A continuación puedes comprobar los valores de la tabla anterior de un modo más visual y práctico, estableciendo en el campo de texto valores como <code>n</code>, <code>n+2</code>, <code>2n</code>, <code>2n-1</code> (<em>o similares</em>) y observando los resultados.</p>
</blockquote>
<script src="NthTest.cdn.js" type="module"></script>
<p><nth-test></nth-test></p>
<h4 id="pseudoclase-nth-last-child" tabindex="-1"><a class="header-anchor" href="#pseudoclase-nth-last-child">Pseudoclase <code>:nth-last-child()</code></a></h4>
<p>La pseudoclase funcional <code>:nth-last-child(A)</code> funciona de forma muy similar a la anterior, permitiendo también indicarle un parámetro <code>A</code> donde específicar una expresión o número para indicar el hijo concreto.</p>
<p>La diferencia respecto a la anterior, es que comenzamos a contar desde el final, de modo que `</p>
<p>Veamos además un ejemplo gráfico:</p>
<p><img src="nth-child.png" alt="Hijo número N" width="1074" height="594" loading="lazy"></p>
<p>Como se aprecia en el ejemplo, en el caso <code>:nth-child(2)</code> se puede ver como el segundo elemento lo ocupa un elemento <code>span</code>, por lo que sólo se selecciona el elemento <code>strong</code> del segundo caso, donde si existe.</p>
<h4 id="pseudoclase-nth-childa-of-b" tabindex="-1"><a class="header-anchor" href="#pseudoclase-nth-childa-of-b">Pseudoclase <code>:nth-child(A of B)</code></a></h4>
<p>Tanto la pseudoclase <code>:nth-child()</code> como la pseudoclase <code>:nth-last-child()</code> tienen una nueva sintaxis que permiten hacer búsquedas mucho más específicas. Para ello, en los paréntesis podemos indicar la sintaxis <code>A of B</code>, donde <code>A</code> es un número como en los ejemplos anteriores, pero <code>B</code> es un selector CSS adicional para deliminar más aún los elementos.</p>
<p>Veamos algún ejemplo:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box special<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box special<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box special<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
<span class="token selector">.parent :nth-child(2 of .special)</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>Observa que en el ejemplo anterior, estamos seleccionando con <code>.parent :nth-child()</code> los hijos del elemento <code>.parent</code>. De esos elementos, hacemos una nueva selección con <code>2 of .special</code>, con la que nos quedamos con el segundo elemento de los elementos con clase <code>.special</code>.</p>
<p><caniuse-support title="selector list argument of :nth-child and :nth-last-child CSS pseudo-classes" feature="css-nth-child-of" edge="111/y" firefox="113/y" chrome="111/y" safari="9/y" opera="98/y" ios_saf="9.0-9.2/y" and_chr="116/y" and_ff="116/y">
</caniuse-support></p>
<h3 id="hijos-del-mismo-tipo" tabindex="-1"><a class="header-anchor" href="#hijos-del-mismo-tipo">Hijos (del mismo tipo)</a></h3>
<p>En los casos anteriores, seleccionamos elementos independientemente de que tipo de elemento sea. Simplemente, hacemos caso a la posición donde está ubicado. Y en algún caso, si no coincide la posición con el tipo de elemento especificado en el selector, simplemente no lo selecciona.</p>
<p>Una forma de actuar, quizás, más predecible para nosotros, es que queramos hacer referencia sólo a elementos del mismo tipo, ignorando el resto. Para ello, utilizaremos los selectores siguientes, análogos a los que ya hemos visto, pero haciendo referencia sólo a elementos del mismo tipo:</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:first-of-type</code></td>
<td>Primer elemento hijo (de su mismo tipo).</td>
</tr>
<tr>
<td><code>:last-of-type</code></td>
<td>Último elemento hijo (de su mismo tipo).</td>
</tr>
</tbody>
</table>
<h4 id="pseudoclase-first-of-type" tabindex="-1"><a class="header-anchor" href="#pseudoclase-first-of-type">Pseudoclase <code>:first-of-type</code></a></h4>
<p>Por ejemplo, la pseudoclase <code>:first-of-type</code> es la análoga a <code>:first-child</code>, sólo que tendrá en cuenta sólo elementos de su mismo tipo. Observa el siguiente ejemplo donde no sólo tenemos <code>&lt;div&gt;</code>, sino que también tenemos un <code>&lt;p&gt;</code>:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.container div:first-of-type</span> <span class="token punctuation">{</span>
    <span class="token comment">/* Selecciona "Element 1" */</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.container p:first-of-type</span> <span class="token punctuation">{</span>
    <span class="token comment">/* Selecciona "Element 3" */</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.container :first-of-type</span> <span class="token punctuation">{</span>
    <span class="token comment">/* Selecciona los dos anteriores */</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>De esta forma, nos puede resultar mucho más sencillo trabajar con elementos de diferente tipo y darle estilo.</p>
<h4 id="pseudoclase-last-of-type" tabindex="-1"><a class="header-anchor" href="#pseudoclase-last-of-type">Pseudoclase <code>:last-of-type</code></a></h4>
<p>De la misma forma, la pseudoclase <code>:last-of-type</code> es la análoga a <code>:last-child</code>, que selecciona el último elemento, pero igual que <code>:first-of-type</code> sólo teniendo en cuenta elementos del mismo tipo.</p>
<h3 id="hijos-específicos-del-mismo-tipo" tabindex="-1"><a class="header-anchor" href="#hijos-específicos-del-mismo-tipo">Hijos específicos (del mismo tipo)</a></h3>
<p>Ahora que estamos en la categoría en la que queremos seleccionar <strong>elementos del mismo tipo</strong>, también nos puede interesar seleccionar elementos específicos. Para ello, tenemos también dos pseudoclases análogas a las anteriores:</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:nth-of-type(n)</code></td>
<td>Elemento hijo número <code>n</code> (de su mismo tipo).</td>
</tr>
<tr>
<td><code>:nth-last-of-type(n)</code></td>
<td>Elemento hijo número <code>n</code> empezando desde el final (de su mismo tipo).</td>
</tr>
</tbody>
</table>
<h4 id="pseudoclase-nth-of-type" tabindex="-1"><a class="header-anchor" href="#pseudoclase-nth-of-type">Pseudoclase <code>:nth-of-type()</code></a></h4>
<p>La pseudoclase <code>:nth-of-type(A)</code> es la análoga a <code>:nth-child(A)</code>. Se trata de una pseudoclase funcional que admite pasar parámetros, donde le podemos indicar un número (<em>o cierta expresión</em>) para ser mucho más específicos a la hora de seleccionar elementos del mismo tipo.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.container :nth-of-type(2)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* Seleccionamos sólo el "Element 2", ya que no hay un segundo &lt;p> */</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<h4 id="pseudoclase-nth-last-of-type" tabindex="-1"><a class="header-anchor" href="#pseudoclase-nth-last-of-type">Pseudoclase <code>:nth-last-of-type()</code></a></h4>
<p>La pseudoclase <code>:nth-last-of-type(A)</code> es la análoga a <code>:nth-last-child(A)</code>. Veamos un nuevo ejemplo sobre el ejercicio anterior, utilizando ahora estas últimas pseudoclases que hemos visto:</p>
<p><img src="nth-of-type.png" alt="Hijo número N" width="1074" height="594" loading="lazy"></p>
<p>En este gráfico, se puede ver como <code>strong:nth-of-type(2)</code> selecciona el segundo elemento <code>strong</code> en ambos casos, a pesar de que en el primero ocupa la tercera posición. En este caso se selecciona porque es el segundo elemento de su mismo tipo (<code>&lt;strong&gt;</code>).</p>
<p>Por otro lado, <code>strong:nth-last-of-type(1)</code> hace una selección de forma inversa, empezando por el último elemento, por lo que elige el último elemento.</p>
<h3 id="elementos-únicos-o-sin-hijos" tabindex="-1"><a class="header-anchor" href="#elementos-únicos-o-sin-hijos">Elementos únicos o sin hijos</a></h3>
<p>Existen también varias pseudoclases para la gestión de hijos únicos. Son las siguientes:</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:only-child</code></td>
<td>Elemento que es hijo único (de cualquier tipo).</td>
</tr>
<tr>
<td><code>:only-of-type</code></td>
<td>Elemento que es hijo único (de su mismo tipo).</td>
</tr>
<tr>
<td><code>:empty</code></td>
<td>Elemento vacío (sin hijos, ni texto).</td>
</tr>
</tbody>
</table>
<h4 id="pseudoclase-only-child" tabindex="-1"><a class="header-anchor" href="#pseudoclase-only-child">Pseudoclase <code>:only-child</code></a></h4>
<p>La propiedad <code>:only-child</code> nos proporciona una forma de seleccionar los elementos que sean el único hijo de su elemento padre. Por lo tanto, si un contenedor tiene en su interior un sólo elemento hijo, podremos seleccionar y aplicar estilos.</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container :only-child</span> <span class="token punctuation">{</span>
  <span class="token comment">/* Selecciona el hijo de un padre que sólo tiene un elemento hijo */</span>
<span class="token punctuation">}</span></code></pre>
<h4 id="pseudoclase-only-of-type" tabindex="-1"><a class="header-anchor" href="#pseudoclase-only-of-type">Pseudoclase <code>:only-of-type</code></a></h4>
<p>Además, como ha ocurrido anteriormente, también existe la pseudoclase <code>:only-of-type</code> que es la análoga a la anterior, pero sólo para elementos del mismo tipo. En este caso, podríamos tener un contenedor que contiene varios elementos, pero todos son únicos en su tipo, por lo tanto podrían ser seleccionados.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>Hi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Ho<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>Hi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.container :only-of-type</span> <span class="token punctuation">{</span>
    <span class="token comment">/* Selecciona los hijos de un padre que sólo tiene un elemento hijo de su mismo tipo */</span>
    <span class="token comment">/* En este caso, seleccionaría ambos */</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<h4 id="pseudoclase-empty" tabindex="-1"><a class="header-anchor" href="#pseudoclase-empty">Pseudoclase <code>:empty</code></a></h4>
<p>Por último, la pseudoclase <code>:empty</code> permite seleccionar los elementos que estén vacíos. Observa los siguientes ejemplos, que podríamos considerar que están vacíos, aunque con ciertos matices:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empty container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empty ghost container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>empty comment container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- lala --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">:empty</span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 3px solid red<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>Ojo con esto, ya que el navegador <strong>no considerará</strong> vacío el elemento que contiene espacios en blanco (<em>segundo ejemplo</em>).</p>
<ul>
<li>El primer elemento, efectivamente está vacío.</li>
<li>El segundo elemento <code>.ghost</code>, puede parecer vacío pero tiene espacios en blanco.</li>
<li>El tercer elemento <code>.comment</code>, está vacío sólo que contiene un comentario HTML.</li>
</ul>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../pseudoclases/index.htm" title="Pseudoclases">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Pseudoclases</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../pseudoclases-formularios/index.htm" title="Pseudoclases de formularios">
  <div>
    <span>Pseudoclases de formularios</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/1TbS60Fu-_M" title="Variables CSS NATIVAS: ¿Qué son y cómo funcionan?">
  <img loading="lazy" src="../../../vi/1TbS60Fu-_M/mqdefault.jpg" alt="Variables CSS NATIVAS: ¿Qué son y cómo funcionan?">
</a><a href="https://youtu.be/0sFtRnbe0fo" title="Novedades de CSS: Dr. CSStrange y el multiverso">
  <img loading="lazy" src="../../../vi/0sFtRnbe0fo/mqdefault.jpg" alt="Novedades de CSS: Dr. CSStrange y el multiverso">
</a><a href="https://youtu.be/Wou2koTiIyU" title="Grid CSS: Centrar, distribuir y alinear elementos">
  <img loading="lazy" src="../../../vi/Wou2koTiIyU/mqdefault.jpg" alt="Grid CSS: Centrar, distribuir y alinear elementos">
</a><a href="https://youtu.be/wIGAyJGx2kc" title="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
  <img loading="lazy" src="../../../vi/wIGAyJGx2kc/mqdefault.jpg" alt="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
</a><a href="https://youtu.be/jhg2xas3av0" title="¡Carga MÁS RÁPIDO tu sitio web OPTIMIZANDO TIPOGRAFÍAS!">
  <img loading="lazy" src="../../../vi/jhg2xas3av0/mqdefault.jpg" alt="¡Carga MÁS RÁPIDO tu sitio web OPTIMIZANDO TIPOGRAFÍAS!">
</a><a href="https://youtu.be/uMMLQNgsivg" title="Parcel CSS: ¿Una ALTERNATIVA RÁPIDA a PostCSS?">
  <img loading="lazy" src="../../../vi/uMMLQNgsivg/mqdefault.jpg" alt="Parcel CSS: ¿Una ALTERNATIVA RÁPIDA a PostCSS?">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
