<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Pseudoclases - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Las pseudoclases CSS permiten seleccionar elementos dependiendo de su comportamiento en el navegador. La más conocida es :hover.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Pseudoclases - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/selectores/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Las pseudoclases CSS permiten seleccionar elementos dependiendo de su comportamiento en el navegador. La más conocida es :hover.">
  <meta property="og:url" content="https://lenguajecss.com/css/selectores/pseudoclases/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/selectores/pseudoclases/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Pseudoclases - CSS en español">
  <meta property="twitter:description" content="Las pseudoclases CSS permiten seleccionar elementos dependiendo de su comportamiento en el navegador. La más conocida es :hover.">
  <meta property="twitter:image" content="https://lenguajecss.com/css/selectores/large-summary.jpg">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Pseudoclases</a></h1><h2 class="typewriter">Formas de seleccionar elementos por comportamiento</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../combinadores-logicos/index.htm">Combinadores lógicos</a>
    <a class="current" href="index.htm">Pseudoclases</a>
    <a href="../pseudoclases-estructura/index.htm">Pseudoclases de estructura</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Hasta ahora hemos visto como trabajar con selectores básicos y combinadores, sin embargo, CSS ofrece más formas de seleccionar elementos HTML, y una de ellas son las llamadas <strong>pseudoclases</strong>.</p>
<h3 id="qué-es-una-pseudoclase-css" tabindex="-1"><a class="header-anchor" href="#qué-es-una-pseudoclase-css">¿Qué es una pseudoclase CSS?</a></h3>
<p>Las <strong>pseudoclases</strong> se utilizan para hacer referencia a elementos HTML que tengan un cierto comportamiento concreto. Volvamos a recordar el esquema general de sintaxis de CSS, donde ahora añadiremos las <strong>pseudoclases</strong>, que se definen añadiendo <strong>dos puntos</strong> antes del nombre de la pseudoclase concreta, de la siguiente forma:</p>
<p><img src="sintaxis-pseudoclases.png" alt="Sintaxis avanzada" width="1017" height="283" loading="lazy"></p>
<p>De esta forma, podremos seleccionar elementos que en principio parecen iguales, pero tienen diferentes características de comportamiento. Para entenderlo bien, vamos a ver las categorías o tipos de pseudoclases y ver cuales se encuentran entre ellas.</p>
<h3 id="tipos-de-pseudoclases-css" tabindex="-1"><a class="header-anchor" href="#tipos-de-pseudoclases-css">Tipos de pseudoclases CSS</a></h3>
<p>Existen múltiples pseudoclases, así que para entenderlas mejor, las categorizamos en las siguientes secciones. Aquellas que sean muy extensas o abundantes, las enlazaremos en un artículo posterior más detallado:</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Más información</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Interacción</strong></td>
<td>Pseudoclases relacionadas con <strong>acciones de usuario</strong>. Ver más adelante en esta página.</td>
</tr>
<tr>
<td><strong>Ubicación</strong></td>
<td>Pseudoclases relacionadas con <strong>enlaces o ubicaciones</strong>. Ver más adelante en esta página.</td>
</tr>
<tr>
<td><strong>Idioma</strong></td>
<td>Pseudoclases relacionadas con <strong>idiomas</strong>. Ver más adelante en esta página.</td>
</tr>
<tr>
<td><strong>Estructura</strong></td>
<td><a href="../pseudoclases-estructura/index.htm">Ver pseudoclases de estructura de documentos HTML</a></td>
</tr>
<tr>
<td><strong>Formulario</strong></td>
<td><a href="../pseudoclases-formularios/index.htm">Ver pseudoclases de formulario HTML</a></td>
</tr>
<tr>
<td><strong>Estado</strong></td>
<td>Pseudoclases relacionadas con el estado de <strong>modales</strong> o similares. Ver más adelante en esta página.</td>
</tr>
<tr>
<td><strong>Paginado</strong></td>
<td><a href="../../responsive-web-design/medios-paginados/index.htm#pseudoclases-de-p%C3%A1gina">Ver pseudoclases de paginado de documentos HTML</a></td>
</tr>
</tbody>
</table>
<p>Veamos algunas de estas secciones a continuación.</p>
<h3 id="pseudoclases-de-interacción" tabindex="-1"><a class="header-anchor" href="#pseudoclases-de-interacción">Pseudoclases de interacción</a></h3>
<p>Las <strong>pseudoclases de interacción</strong> se pueden utilizar en cualquier elemento, aunque lo más frecuente es usarlo en elementos interactivos como enlaces, botones o similares, y pueden seleccionar elementos cuando ocurre una cierta interacción por parte del usuario en ellos. ¿Qué tipo de interacción es esa? Pueden ser varias:</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:hover</code></td>
<td>Selecciona el elemento si el usuario pasa el ratón sobre dicho elemento.</td>
</tr>
<tr>
<td><code>:active</code></td>
<td>Selecciona el elemento si el usuario se encuentra pulsando dicho elemento.</td>
</tr>
<tr>
<td><code>:focus</code></td>
<td>Selecciona el elemento cuando tiene el foco (está en primer plano).</td>
</tr>
<tr>
<td><code>:focus-within</code></td>
<td>Selecciona el elemento si uno de sus miembros hijos ha ganado el foco.</td>
</tr>
<tr>
<td><code>:focus-visible</code></td>
<td>Selecciona el elemento cuando tiene el foco sólo de forma visible (<kbd>TAB</kbd>, por ejemplo).</td>
</tr>
</tbody>
</table>
<h4 id="pseudoclase-hover" tabindex="-1"><a class="header-anchor" href="#pseudoclase-hover">Pseudoclase <code>:hover</code></a></h4>
<p>La primera de ellas, <code>:hover</code>, es muy útil e interesante, ya que permite aplicar estilos a un elemento <strong>justo cuando el usuario pasa el ratón</strong> (<em>o más concretamente, un dispositivo apuntador</em>) sobre él. Es una de las pseudoclases más utilizadas:</p>
<pre class="language-css"><code class="language-css"><span class="token comment">/* Usuario mueve el ratón sobre un enlace */</span>
<span class="token selector">a:hover</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> cyan<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 2px
<span class="token punctuation">}</span>

<span class="token comment">/* Usuario mueve el ratón sobre un div y resalta todos los enlaces que contiene */</span>
<span class="token selector">div:hover a</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> steelblue<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Observese que podemos realizar acciones un poco más específicas, como el segundo ejemplo anterior, donde al movernos sobre un elemento div (<em>div:hover</em>), aplicaremos los estilos a los enlaces (<em>a</em>) que están dentro del mencionado <code>div</code>.</p>
<h4 id="pseudoclase-active" tabindex="-1"><a class="header-anchor" href="#pseudoclase-active">Pseudoclase <code>:active</code></a></h4>
<p>Por otro lado, la segunda pseudoclase, <code>:active</code>, permite resaltar los elementos que se encuentran <strong>activos</strong>, o lo que es lo mismo, elementos que están siendo pulsados en ese instante con el ratón por el usuario:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">a:active</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #FF0000<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 2px
<span class="token punctuation">}</span></code></pre>
<p>Es importante destacar que esta pseudoclase no puede encargarse de detectar pulsación con persistencia, es decir, no guarda el estado de «ha sido pulsado», sino que sólo es capaz de detectar este comportamiento en el momento justo de ser pulsado. Si necesitamos persistencia, tendríamos que hacer uso de Javascript.</p>
<blockquote>
<p><strong>Nota:</strong> Aunque estas pseudoclases se inventaron para interactuar con <strong>un ratón</strong> en un sistema de escritorio, pueden llegar a funcionar en dispositivos táctiles. Aún así, ten en cuenta que el <code>:hover</code> no tiene demasiado sentido en el contexto de dispositivos móviles, ya que un usuario no navega por móvil arrastrando el dedo por la pantalla continuamente.</p>
</blockquote>
<h4 id="pseudoclase-focus" tabindex="-1"><a class="header-anchor" href="#pseudoclase-focus">Pseudoclase <code>:focus</code></a></h4>
<p>Cuando estamos escribiendo en un campo de texto de un formulario de una página web, generalmente pulsamos <kbd>TAB</kbd> para cambiar al siguiente campo y <kbd>SHIFT</kbd>+<kbd>TAB</kbd> para volver al anterior. Cuando estamos posicionados en un elemento, se dice que ese elemento <strong>tiene el foco</strong>, mientras que al pulsar <kbd>TAB</kbd> y saltar a otro, solemos decir que <strong>pierde el foco</strong>. También es posible ganar o perder el foco pulsando con el ratón en un elemento.</p>
<p>El comportamiento de «ganar el foco» puede gestionarse mediante la pseudoclase <code>:focus</code>:</p>
<pre class="language-css"><code class="language-css"><span class="token comment">/* El campo ha ganado el foco */</span>
<span class="token selector">input:focus</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 2px dotted #444
<span class="token punctuation">}</span></code></pre>
<p>Estas pseudoclases suelen utilizarse con elementos de formularios como <code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code> o similares, pero también pueden utilizarse con otros elementos, como por ejemplo enlaces <code>&lt;a&gt;</code>. Esta es una excelente oportunidad para personalizar el estilo de los campos de texto de un formulario (<em><code>&lt;input&gt;</code> y <code>&lt;textarea&gt;</code></em>) para que cambien cuando el usuario escribe y se mueve por ellos.</p>
<p>La pseudoclase <code>:focus</code> tiene dos variaciones concretas, las explicaremos a continuación.</p>
<h4 id="pseudoclase-focus-within" tabindex="-1"><a class="header-anchor" href="#pseudoclase-focus-within">Pseudoclase <code>:focus-within</code></a></h4>
<p>La pseudoclase <code>:focus-within</code> permite darle estilo no sólo al elemento que tiene el foco, sino también a los elementos contenedores relacionados con el elemento que gana el foco. En este ejemplo, <code>:focus-within</code> permite que cuando uno de los campos <code>&lt;input&gt;</code> del formulario gane el foco, podamos iluminar también el elemento label, que es su contenedor:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">form :focus-within</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Email: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre>
<h4 id="pseudoclase-focus-visible" tabindex="-1"><a class="header-anchor" href="#pseudoclase-focus-visible">Pseudoclase <code>:focus-visible</code></a></h4>
<p>En el caso de la pseudoclase <code>:focus-visible</code> es prácticamente idéntico a <code>:focus</code>, solo que podemos aplicar estilos al elemento que gana el foco, pero sólo cuando se ha ganado el foco exclusivamente de forma visible, como por ejemplo, pulsando la tecla <kbd>TAB</kbd> y accediendo al elemento. Esto puede resultar muy útil cuando quieres que el foco coincida con un tema visual para la página.</p>
<h3 id="pseudoclases-de-ubicación" tabindex="-1"><a class="header-anchor" href="#pseudoclases-de-ubicación">Pseudoclases de ubicación</a></h3>
<p>Existen algunas pseudoclases orientadas a los enlaces o hipervínculos. En este caso, permiten cambiar los estilos dependiendo del comportamiento del enlace:</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:any-link</code></td>
<td>Selecciona un elemento que es un enlace.</td>
</tr>
<tr>
<td><code>:link</code></td>
<td>Selecciona un elemento que es un enlace no visitado aún.</td>
</tr>
<tr>
<td><code>:visited</code></td>
<td>Selecciona un elemento que es un enlace visitado anteriormente.</td>
</tr>
<tr>
<td><code>:target</code></td>
<td>Selecciona un elemento que coincide con el ancla de la URL actual.</td>
</tr>
</tbody>
</table>
<h4 id="pseudoclase-any-link" tabindex="-1"><a class="header-anchor" href="#pseudoclase-any-link">Pseudoclase <code>:any-link</code></a></h4>
<p>Con la pseudoclase <code>:any-link</code> se puede hacer referencia, como dice su nombre, a elementos que sean cualquier tipo de enlaces. En este caso, y si no se delimitan de alguna forma, incluye etiquetas <code>&lt;a&gt;</code> y <code>&lt;area&gt;</code>, ya que ambas se consideran enlaces.</p>
<pre class="language-css"><code class="language-css"><span class="token selector">:any-link</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> indigo<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h4 id="pseudoclase-link" tabindex="-1"><a class="header-anchor" href="#pseudoclase-link">Pseudoclase <code>:link</code></a></h4>
<p>Por otro lado, la pseudoclase <code>:link</code> permite seleccionar enlaces a páginas que <strong>aún no han sido visitadas</strong> por el navegador del usuario, lo que puede ser interesante para personalizar el color de este tipo de enlaces. Por defecto, estos enlaces sin visitar suelen ser de color <strong>azul</strong>.</p>
<p>Veamos un ejemplo donde los cambiamos:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">a:link</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold
<span class="token punctuation">}</span></code></pre>
<h4 id="pseudoclase-visited" tabindex="-1"><a class="header-anchor" href="#pseudoclase-visited">Pseudoclase <code>:visited</code></a></h4>
<p>También tenemos la pseudoclase <code>:visited</code>, que se utiliza para seleccionar y dar estilo a los enlaces que <strong>hayan sido visitados previamente</strong> en el navegador del usuario. Por defecto, estos enlaces suelen ser de color <strong>violeta</strong>.</p>
<pre class="language-css"><code class="language-css"><span class="token selector">a:visited</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h4 id="pseudoclase-target" tabindex="-1"><a class="header-anchor" href="#pseudoclase-target">Pseudoclase <code>:target</code></a></h4>
<p>Con la pseudoclase <code>:target</code> podemos seleccionar un elemento HTML donde su <code>id</code> (<em>ancla</em>) coincida con el ancla que tenemos actualmente en la URL de navegación. Es decir, si en nuestra URL tenemos el ancla <code>#section1</code>, entonces se seleccionará el elemento con <code>id=&quot;section1&quot;</code>:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">:target</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> gold<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Ideal para seleccionar cabeceras de secciones a modo de ancla en un documento HTML.</p>
<h3 id="pseudoclases-de-idioma" tabindex="-1"><a class="header-anchor" href="#pseudoclases-de-idioma">Pseudoclases de idioma</a></h3>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Significado</th>
<th>Más información</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:lang(es)</code></td>
<td colspan="2">Selecciona elementos con el idioma español, es decir, atributo <code>lang=&quot;es&quot;</code>.</td>
</tr>
<tr>
<td><code>:dir(value)</code></td>
<td colspan="2">Selecciona elementos con la dirección indicada (<code>ltr</code> o <code>rtl</code>).</td>
</tr>
</tbody>
</table>
<h4 id="pseudoclase-lang" tabindex="-1"><a class="header-anchor" href="#pseudoclase-lang">Pseudoclase <code>:lang()</code></a></h4>
<p>El atributo HTML <code>lang</code> permite indicar en una etiqueta HTML el idioma en el que está el contenido de sus elementos hijos. De esta forma, un atributo <code>lang=&quot;es&quot;</code> indica que el contenido de esa etiqueta se encuentra generalmente en español.</p>
<p>La pseudoclase <code>:lang()</code> acepta por parámetro un idioma (<em>o una lista de ellos separados por comas</em>) para seleccionar el elemento HTML que coincida con uno de ellos:</p>
<pre class="language-css"><code class="language-css"><span class="token comment">/* Selecciona el elemento que tenga el idioma español */</span>
<span class="token selector">:lang(es)</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* Selecciona elementos que estén en español o inglés (*y relacionados*) */</span>
<span class="token selector">:lang(es, es-*, en, en-*)</span> <span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span></code></pre>
<p>Además, como se puede ver en el ejemplo anterior, también se pueden utilizar asteriscos a modo de comodín.</p>
<h4 id="pseudoclase-dir" tabindex="-1"><a class="header-anchor" href="#pseudoclase-dir">Pseudoclase <code>:dir()</code></a></h4>
<p>La pseudoclase <code>:dir()</code> permite seleccionar elementos dependiendo de la dirección que tienen establecida. Generalmente, la direccionalidad del texto se establece con el atributo <code>dir</code>, indicándole el valor <code>ltr</code> (<em>left to right</em>) o el valor <code>rtl</code> (<em>right to left</em>), sin embargo, con valores como <code>auto</code> o sin valores indicados, también tendrán una direccionalidad dependiendo del lenguaje establecido en el documento o fragmento.</p>
<pre class="language-css"><code class="language-css"><span class="token selector">:dir(ltr)</span> <span class="token punctuation">{</span>
  <span class="token property">border-left</span><span class="token punctuation">:</span> 4px solid darkred<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">:dir(rtl)</span> <span class="token punctuation">{</span>
  <span class="token property">border-right</span><span class="token punctuation">:</span> 4px solid darkred<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Ten en cuenta que la diferencia entre <code>:dir(ltr)</code> y <code>[dir=&quot;ltr&quot;]</code> es que en el primer caso se selecciona al elemento tanto si tiene el valor <code>ltr</code> como si no lo tiene, pero lo hereda por contexto. Sin embargo, con <code>[dir=&quot;ltr&quot;]</code> sólo se selecciona si está indicado explícitamente.</p>
<h3 id="pseudoclases-de-estado" tabindex="-1"><a class="header-anchor" href="#pseudoclases-de-estado">Pseudoclases de estado</a></h3>
<p>Existen una serie de pseudoclases para comprobar el <strong>estado visual</strong> de un elemento que se considera <strong>modal</strong>, es decir, que «centran» la interacción del usuario en un elemento principal (<em>y sus hijos</em>) y no permiten la interacción con otros elementos hasta que se cierre ese elemento principal.</p>
<p>Estas pseudoclases son las siguientes:</p>
<table>
<thead>
<tr>
<th>Pseudoclase</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:fullscreen</code></td>
<td>Selecciona si la página está en modo de pantalla completa.</td>
</tr>
<tr>
<td><code>:modal</code></td>
<td>Selecciona el elemento que es de tipo modal.</td>
</tr>
</tbody>
</table>
<p>Expliquemos un poco cada una de ellas.</p>
<h4 id="pseudoclase-fullscreen" tabindex="-1"><a class="header-anchor" href="#pseudoclase-fullscreen">Pseudoclase <code>:fullscreen</code></a></h4>
<p>Mediante la pseudoclase <code>:fullscreen</code> podemos seleccionar elementos que se encuentren en modo pantalla completa, lo que habitualmente se realiza mediante la <strong>API FullScreen</strong> de Javascript.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span> <span class="token attr-name">open</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Colocar esta ventana en pantalla completa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Close<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>open<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>FullScreen<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".open"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> close <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".close"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> screen <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".screen"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> screen<span class="token punctuation">.</span><span class="token function">requestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
close<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> document<span class="token punctuation">.</span><span class="token function">exitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
<span class="token selector">.screen</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">:fullscreen</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 3px solid red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<h4 id="pseudoclase-modal" tabindex="-1"><a class="header-anchor" href="#pseudoclase-modal">Pseudoclase <code>:modal</code></a></h4>
<p>Mediante la pseudoclase <code>:modal</code> se puede seleccionar un elemento que está actuando como una ventana o elemento modal, o lo que es lo mismo, un elemento que centra la atención del usuario y no permite interacción con otros elementos que no son sus hijos.</p>
<p>En el ejemplo anterior, modificando <code>:fullscreen</code> por <code>:modal</code> continuaría siendo válido y funcionando porque un elemento a pantalla completa con <code>.requestFullscreen()</code> también es un elemento modal, ya que no permite interacción con otros elementos fuera de él hasta que se cierre el modo pantalla completa.</p>
<p>También ten en cuenta que existe la posibilidad de que múltiples elementos sean modales, aunque sólo uno de ellos sea el que se encuentre activo y capaz de recibir interacciones.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../combinadores-logicos/index.htm" title="Combinadores lógicos">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Combinadores lógicos</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../pseudoclases-estructura/index.htm" title="Pseudoclases de estructura">
  <div>
    <span>Pseudoclases de estructura</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/I-EFAmX-vhE" title="Flex CSS: Alinear, centrar y reordenar elementos">
  <img loading="lazy" src="../../../vi/I-EFAmX-vhE/mqdefault.jpg" alt="Flex CSS: Alinear, centrar y reordenar elementos">
</a><a href="https://youtu.be/K-nE-kZKLRw" title="¡NOVEDADES CSS! ¿Cuánto de este código CSS eres CAPAZ de reconocer?">
  <img loading="lazy" src="../../../vi/K-nE-kZKLRw/mqdefault.jpg" alt="¡NOVEDADES CSS! ¿Cuánto de este código CSS eres CAPAZ de reconocer?">
</a><a href="https://youtu.be/hju7SXmiK7Y" title="Cómo crear SOMBRAS DE TEXTO (text-shadow)">
  <img loading="lazy" src="../../../vi/hju7SXmiK7Y/mqdefault.jpg" alt="Cómo crear SOMBRAS DE TEXTO (text-shadow)">
</a><a href="https://youtu.be/Q1CXWBtxKZU" title="Grid CSS: Introducción y conceptos desde cero">
  <img loading="lazy" src="../../../vi/Q1CXWBtxKZU/mqdefault.jpg" alt="Grid CSS: Introducción y conceptos desde cero">
</a><a href="https://youtu.be/uMMLQNgsivg" title="Parcel CSS: ¿Una ALTERNATIVA RÁPIDA a PostCSS?">
  <img loading="lazy" src="../../../vi/uMMLQNgsivg/mqdefault.jpg" alt="Parcel CSS: ¿Una ALTERNATIVA RÁPIDA a PostCSS?">
</a><a href="https://youtu.be/jdGpehoFoWA" title="¡Aprende a utilizar TRANSICIONES CSS!">
  <img loading="lazy" src="../../../vi/jdGpehoFoWA/mqdefault.jpg" alt="¡Aprende a utilizar TRANSICIONES CSS!">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
