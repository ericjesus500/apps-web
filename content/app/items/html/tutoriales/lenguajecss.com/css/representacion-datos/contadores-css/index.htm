<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Contadores CSS - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Es posible crear contadores utilizando sólo código CSS, sin necesidad del uso de programación">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Contadores CSS - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Es posible crear contadores utilizando sólo código CSS, sin necesidad del uso de programación">
  <meta property="og:url" content="https://lenguajecss.com/css/representacion-datos/contadores-css/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/representacion-datos/contadores-css/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Contadores CSS - CSS en español">
  <meta property="twitter:description" content="Es posible crear contadores utilizando sólo código CSS, sin necesidad del uso de programación">
  <meta property="twitter:image" content="https://lenguajecss.com/large-summary.jpg">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Contadores CSS</a></h1><h2 class="typewriter">CSS Counters: Contando con CSS</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../listas-css/index.htm">Listas CSS</a>
    <a class="current" href="index.htm">Contadores CSS</a>
    <a href="../../maquetacion-y-colocacion/propiedad-display/index.htm">La propiedad display</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Si conocemos los estilos que es posible darle a una <a href="../listas-css/index.htm">lista con CSS</a> es posible que nos interese conocer la posibilidad de <strong>crear contadores personalizados con CSS</strong> y utilizarlos en nuestras páginas para contar diferentes elementos de la misma, además de crear sistemas de numeración personalizados y adaptados a nuestros criterios.</p>
<h3 id="propiedades-de-contador" tabindex="-1"><a class="header-anchor" href="#propiedades-de-contador">Propiedades de contador</a></h3>
<p>Para empezar, en CSS podemos crear un <strong>contador CSS</strong>. Básicamente, lo único que tenemos que hacer es asignarle un <code>id</code> o nombre, que nos permitirá hacer referencia a él posteriormente. Veamos que propiedades podemos utilizar para esto:</p>
<table>
<thead>
<tr>
<th>Propiedades</th>
<th>Valores</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>counter-reset</code></td>
<td><em>id</em> <em>valor inicial</em> | <strong>none</strong></td>
<td>Resetea el contador <em>id</em> al <em>valor inicial</em> (<code>0</code> por defecto).</td>
</tr>
<tr>
<td><code>counter-increment</code></td>
<td></td>
<td>Incrementa un contador, indicándole su <code>id</code> de referencia.</td>
</tr>
<tr>
<td><code>counter-set</code></td>
<td><em>id</em> <em>valor inicial</em> | <strong>none</strong></td>
<td>Similar a <code>counter-reset</code>, pero no realiza incremento si existe.</td>
</tr>
</tbody>
</table>
<p>En primer lugar, tenemos las propiedades <code>counter-reset</code> y <code>counter-increment</code> que no hacen otra cosa más que resetear a cero o incrementar un contador CSS, indicándole el nombre o <code>id</code> del mismo.</p>
<h3 id="la-función-counter" tabindex="-1"><a class="header-anchor" href="#la-función-counter">La función counter()</a></h3>
<p>Sin embargo, necesitamos mostrarlo de alguna forma o sería inútil. Para ello, podemos utilizar la función CSS <code>counter()</code>, que se suele utilizar junto a la propiedad <code>content</code> en pseudoelementos <code>::before</code> o <code>::after</code>.</p>
<p>A dicha función, se le debe pasar de forma obligatoria el <code>id</code> del contador, y de forma opcional el tipo de contador que queremos utilizar, que de no hacerlo, tomará por defecto el tipo <code>decimal</code>:</p>
<table>
<thead>
<tr>
<th>Función</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>counter(</code><em>id</em><code>,</code><em>type</em><code>)</code></td>
<td>Usa el contador con <code>id</code> aplicando un estilo <code>type</code>.</td>
</tr>
</tbody>
</table>
<p>Así pues, veamos un ejemplo en acción con lo que hemos visto hasta ahora. El siguiente ejemplo incorpora 3 elementos con clase <code>item</code> que queremos contabilizar, a pesar de no ser una lista y, además, teniendo contenido de por medio.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Esto es un ejemplo de varios detalles:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Detalle A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Explicación opcional del detalle.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Detalle B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Detalle C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Otro contenido no relevante.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">counter-increment</span><span class="token punctuation">:</span> detail-counter<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item::before</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">counter</span><span class="token punctuation">(</span>detail-counter<span class="token punctuation">)</span> <span class="token string">" "</span><span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>Para ello, establecemos un incremento en cada elemento con clase <code>.item</code> y además, inmediatamente antes de ese elemento, colocamos visualmente el contador, en rojo y negrita, seguido de un espacio en blanco. Observa que el contador lo hemos llamado <code>detail-counter</code>, aunque se podría llamar de cualquier otra forma.</p>
<blockquote>
<p>Aunque no se muestre explícitamente, es como si tuvieramos un <code>counter-reset: detail-counter 0</code> en el elemento <code>.content</code>, que es el que inicializa todo a <code>0</code>. El contador se inicializa en <code>0</code> pero realiza el primer incremento antes de mostrar el valor, por lo que los números contarán a partir del <code>1</code>.</p>
</blockquote>
<p>En la función <code>counter()</code> no indicamos tipo, por lo tanto usará el tipo <code>decimal</code> por defecto. Si quieres saber que otros tipos existen, echa un vistazo al artículo de <a href="../listas-css/index.htm">Listas CSS</a>.</p>
<h3 id="creación-de-contadores" tabindex="-1"><a class="header-anchor" href="#creación-de-contadores">Creación de contadores</a></h3>
<p>Si necesitamos algún tipo de <strong>contador personalizado</strong> y no nos bastan con los que incorpora CSS, es posible crearlo y customizarlo a nuestro gusto, mediante la regla <code>@counter-style</code>. Básicamente, te permite crear un tipo de contador, y decirle los símbolos que vamos a utilizar.</p>
<table>
<thead>
<tr>
<th>Regla</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>@counter-style</code> <em>nombre</em></td>
<td>Crea un tipo de numeración para utilizar en contadores CSS.</td>
</tr>
</tbody>
</table>
<p>Dentro de la regla <code>@counter-style</code>, en la que debemos especificar un nombre para hacer referencia, podemos utilizar varias propiedades. Veamos un ejemplo sencillo, en el que creamos un sistema de numeración llamado <code>spanish</code> que cuenta los números del uno al tres, colocándole a cada uno el sufijo <strong>»</strong>:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@counter-style</span> spanish</span> <span class="token punctuation">{</span>
  <span class="token property">system</span><span class="token punctuation">:</span> cyclic<span class="token punctuation">;</span>
  <span class="token property">symbols</span><span class="token punctuation">:</span> <span class="token string">"uno"</span> <span class="token string">"dos"</span> <span class="token string">"tres"</span><span class="token punctuation">;</span>
  <span class="token property">suffix</span><span class="token punctuation">:</span> <span class="token string">"» "</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">ul</span> <span class="token punctuation">{</span>
  <span class="token property">list-style-type</span><span class="token punctuation">:</span> spanish<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">li::marker</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Observa que al establecer un sistema <strong>cíclico</strong>, una vez terminamos el tres, volvemos a empezar en uno. Además de <code>system</code>, <code>symbols</code> y <code>suffix</code> existen otras propiedades que se pueden utilizar en las reglas <code>@counter-style</code>, echemos un vistazo y expliquemos para que funcionan y que valores pueden tomar:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>system</code></td>
<td>Establece el sistema de repetición al terminar los símbolos. El valor por defecto es <strong>symbolic</strong>.</td>
</tr>
<tr>
<td><code>symbols</code></td>
<td>Indica los símbolos de nuestro sistema de numeración, separados por espacios.</td>
</tr>
<tr>
<td><code>additive-symbols</code></td>
<td>Indica los símbolos de nuestro sistema de numeración de forma acumulativa.</td>
</tr>
<tr>
<td><code>suffix</code></td>
<td>Indica un sufijo que aparecerá siempre al final.</td>
</tr>
<tr>
<td><code>prefix</code></td>
<td>Indica un prefijo que aparecerá siempre al principio.</td>
</tr>
<tr>
<td><code>negative</code></td>
<td>Indica el prefijo y sufijo que tendrían los valores negativos.</td>
</tr>
<tr>
<td><code>range</code></td>
<td>Limita el ámbito del contador.</td>
</tr>
<tr>
<td><code>pad</code></td>
<td>Indica la longitud y relleno que usará. Por defecto, el valor es <code>0 &quot;&quot;</code></td>
</tr>
<tr>
<td><code>fallback</code></td>
<td>Indica un tipo de contador de fallback, en caso de que no pueda crearse.</td>
</tr>
<tr>
<td><code>speak-as</code></td>
<td>Indica como representará el contador un sintetizador de voz.</td>
</tr>
</tbody>
</table>
<p>Vayamos una por una y veamos que valores pueden tomar.</p>
<h4 id="la-propiedad-system" tabindex="-1"><a class="header-anchor" href="#la-propiedad-system">La propiedad system</a></h4>
<p>Un sistema de numeración puede comportarse de varias formas. Tenemos una propiedad denominada <code>system</code> que permite indicar uno de los siguientes valores y determinar su comportamiento:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Descripción</th>
<th>Ejemplo</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>cyclic</code></td>
<td>Establece un comportamiento cíclico.</td>
<td><code>A B C</code> -&gt; A, B, C, A, B, C, A...</td>
</tr>
<tr>
<td><code>fixed</code></td>
<td>Establece una numeración de un número finito de elementos.</td>
<td><code>A B C</code> -&gt; A, B, C, 4, 5, 6...</td>
</tr>
<tr>
<td><code>symbolic</code></td>
<td>Estable un patrón repetible y acumulable.</td>
<td><code>A B C</code> -&gt; A, B, C, AA, BB, CC, AAA...</td>
</tr>
<tr>
<td><code>alphabetic</code></td>
<td>Estable un patrón alfabético repetible y acumulable.</td>
<td><code>A B C</code> -&gt; A, B, C, AA, AB, AC, BA, BB, BC, CA...</td>
</tr>
<tr>
<td><code>numeric</code></td>
<td>Establece un patrón numérico repetible con cero.</td>
<td><code>A B C</code> -&gt; B, C, BA, BB, BC, CA, CB, CC, BAA, BAB...</td>
</tr>
<tr>
<td><code>additive</code></td>
<td>Establece un patrón añadiendo símbolos asociados y acumulables.</td>
<td>⚀, ⚁, ⚂, ⚃, ⚄, ⚅, ⚅⚀, ⚅⚁, ⚅⚂, ⚅⚃, ⚅⚄, ⚅⚅, ⚅⚅⚀...</td>
</tr>
<tr>
<td><code>extends</code></td>
<td>Simplemente extiende un sistema con un sufijo o prefijo.</td>
<td><code>&quot;) &quot;</code> -&gt; 1), 2), 3), 4), 5), 6), 7), 8), 9)...</td>
</tr>
</tbody>
</table>
<p>A continuación, observa la combinación de un <code>system: additive</code> junto a la propiedad <code>additive-symbols</code> para crear combinaciones de símbolos, ya que es ligeramente diferente a las anteriores:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@counter-style</span> dice</span> <span class="token punctuation">{</span>
  <span class="token property">system</span><span class="token punctuation">:</span> additive<span class="token punctuation">;</span>
  <span class="token property">additive-symbols</span><span class="token punctuation">:</span> 6 ⚅<span class="token punctuation">,</span> 5 ⚄<span class="token punctuation">,</span> 4 ⚃<span class="token punctuation">,</span> 3 ⚂<span class="token punctuation">,</span> 2 ⚁<span class="token punctuation">,</span> 1 ⚀<span class="token punctuation">;</span>
  <span class="token property">suffix</span><span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h4 id="la-propiedad-symbols" tabindex="-1"><a class="header-anchor" href="#la-propiedad-symbols">La propiedad symbols</a></h4>
<p>Mediante la propiedad <code>symbols</code>, o la propiedad <code>additive-symbols</code>, podemos establecer una lista de símbolos para crear nuestro sistema de numeración. Además de establecer una lista de símbolos, también es posible añadir una lista de imágenes, mediante la función <code>url(imagen.png)</code>, por ejemplo.</p>
<h4 id="la-propiedad-negative" tabindex="-1"><a class="header-anchor" href="#la-propiedad-negative">La propiedad negative</a></h4>
<p>La propiedad <code>negative</code> espera dos parámetros. El primero de esos parámetros será el <badge-type class="string"></badge-type> que se añadirá justo ante de un símbolo negativo. Por otro lado, el segundo parámetro será el <badge-type class="string"></badge-type> que se añadirá justo después de un símbolo negativo. Veamos dos ejemplos:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@counter-style</span> negative-paren</span> <span class="token punctuation">{</span>
  <span class="token property">negative</span><span class="token punctuation">:</span> <span class="token string">"("</span> <span class="token string">")"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* (2), (1), 0, 1, 2, 3, 4, 5, 6, 7, 8... */</span>

<span class="token atrule"><span class="token rule">@counter-style</span> negative-minus</span> <span class="token punctuation">{</span>
  <span class="token property">negative</span><span class="token punctuation">:</span> <span class="token string">"-"</span> <span class="token string">""</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8... */</span></code></pre>
<h4 id="la-propiedad-range" tabindex="-1"><a class="header-anchor" href="#la-propiedad-range">La propiedad range</a></h4>
<p>Con la propiedad <code>range</code> podemos utilizar el valor <code>auto</code> o uno personalizado. De indicar el valor <code>auto</code>, se establecerá un rango dependiendo del valor indicado en la propiedad <code>system</code>. Por lo tanto:</p>
<ul>
<li>Para sistemas <code>cyclic</code>, <code>numeric</code> o <code>fixed</code>, el rango va desde <code>-∞</code> a <code>∞</code>.</li>
<li>Para sistemas <code>alphabetic</code> o <code>symbolic</code>, el rango va desde <code>1</code> a <code>∞</code>.</li>
<li>Para sistemas <code>additive</code>, el rango va desde <code>0</code> a <code>∞</code>.</li>
<li>Para sistemas <code>extends</code>, se adapta al estilo extendido.</li>
</ul>
<h4 id="la-propiedad-pad" tabindex="-1"><a class="header-anchor" href="#la-propiedad-pad">La propiedad pad</a></h4>
<p>Mediante la propiedad <code>pad</code> se puede rellenar con ceros (<em>o con otros carácteres</em>) el sistema de numeración que queramos utilizar. Por ejemplo, para extender el sistema decimal y obtener los siguientes valores: <code>001</code>, <code>002</code>, <code>003</code>, <code>004</code>, <code>005</code>, <code>006</code>, etc... necesitaremos hacer lo siguiente:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@counter-style</span> decimal-zeropad</span> <span class="token punctuation">{</span>
  <span class="token property">system</span><span class="token punctuation">:</span> extends decimal<span class="token punctuation">;</span>
  <span class="token property">pad</span><span class="token punctuation">:</span> 3 <span class="token string">"0"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Ten en cuenta que la propiedad <code>pad</code> permite definir un primer parámetro que será el número de dígitos que debe tener el número del contador, mientras que el segundo parámetro será el relleno que utilizará a la izquierda hasta llegar a ese número de dígitos indicado anteriormente.</p>
<h4 id="la-propiedad-fallback" tabindex="-1"><a class="header-anchor" href="#la-propiedad-fallback">La propiedad fallback</a></h4>
<p>La propiedad <code>fallback</code> simplemente determina el tipo de sistema que va a utilizarse en el caso de que no se pueda usar algún otro que haya sido indicado. Por defecto, si no se especifica, utilizará <strong>decimal</strong>.</p>
<h4 id="la-propiedad-speak-as" tabindex="-1"><a class="header-anchor" href="#la-propiedad-speak-as">La propiedad speak-as</a></h4>
<p>La propiedad <code>speak-as</code> intenta garantizar que los contadores se puedan no solo ver visualmente a través de un navegador, sino reproducir a través de sintetizadores de voz y sistemas equivalentes. Con esta propiedad puedes determinar como se comportará al leerlo, indicando uno de los siguientes valores:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>auto</code></td>
<td>Si <code>system</code> es <code>alphabetic</code>, usa <code>spell-out</code>. Si es <code>cyclic</code>, usa <code>bullets</code>. En otro caso, usa <code>numbers</code>.</td>
</tr>
<tr>
<td><code>bullets</code></td>
<td>Lee la lista como si fuera una lista sin orden.</td>
</tr>
<tr>
<td><code>numbers</code></td>
<td>Lee la lista como si fuera una lista numerada.</td>
</tr>
<tr>
<td><code>words</code></td>
<td>Lee la lista como un valor textual. Si contiene imágenes, las lee como <code>numbers</code>.</td>
</tr>
<tr>
<td><code>spell-out</code></td>
<td>Lee la lista como un valor textual, letra a letra. Si no reconoce símbolos, los lee como <code>numbers</code>.</td>
</tr>
<tr>
<td><em>nombre</em></td>
<td>Lee la lista como se declara, sino actua como <code>auto</code>.</td>
</tr>
</tbody>
</table>
<p>Esto proporcionará una mejor <strong>accesibilidad</strong> a nuestras listas o contadores de cara a sintentizadores de voz o lectores de accesibilidad.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../listas-css/index.htm" title="Listas CSS">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Listas CSS</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../../maquetacion-y-colocacion/propiedad-display/index.htm" title="La propiedad display">
  <div>
    <span>La propiedad display</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/W6fAzw3HoWg" title="Cómo crear GRADIENTES LINEALES en CSS">
  <img loading="lazy" src="../../../vi/W6fAzw3HoWg/mqdefault.jpg" alt="Cómo crear GRADIENTES LINEALES en CSS">
</a><a href="https://youtu.be/lM4eufOnKVA" title="Especificidad CSS: ¿Cómo evitar los !important?">
  <img loading="lazy" src="../../../vi/lM4eufOnKVA/mqdefault.jpg" alt="Especificidad CSS: ¿Cómo evitar los !important?">
</a><a href="https://youtu.be/Q1CXWBtxKZU" title="Grid CSS: Introducción y conceptos desde cero">
  <img loading="lazy" src="../../../vi/Q1CXWBtxKZU/mqdefault.jpg" alt="Grid CSS: Introducción y conceptos desde cero">
</a><a href="https://youtu.be/toA0uqeuHXQ" title="¿Qué es el CSS NESTING? ¿Cómo funciona?">
  <img loading="lazy" src="../../../vi/toA0uqeuHXQ/mqdefault.jpg" alt="¿Qué es el CSS NESTING? ¿Cómo funciona?">
</a><a href="https://youtu.be/wIGAyJGx2kc" title="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
  <img loading="lazy" src="../../../vi/wIGAyJGx2kc/mqdefault.jpg" alt="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
</a><a href="https://youtu.be/0sFtRnbe0fo" title="Novedades de CSS: Dr. CSStrange y el multiverso">
  <img loading="lazy" src="../../../vi/0sFtRnbe0fo/mqdefault.jpg" alt="Novedades de CSS: Dr. CSStrange y el multiverso">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
