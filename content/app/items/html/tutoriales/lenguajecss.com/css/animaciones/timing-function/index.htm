<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Funciones de tiempo - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Mediante las funciones de tiempo se puede suavizar una transición o animación para que no se realice de forma brusca.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Funciones de tiempo - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Mediante las funciones de tiempo se puede suavizar una transición o animación para que no se realice de forma brusca.">
  <meta property="og:url" content="https://lenguajecss.com/css/animaciones/timing-function/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/animaciones/timing-function/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Funciones de tiempo - CSS en español">
  <meta property="twitter:description" content="Mediante las funciones de tiempo se puede suavizar una transición o animación para que no se realice de forma brusca.">
  <meta property="twitter:image" content="https://lenguajecss.com/large-summary.jpg">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Funciones de tiempo</a></h1><h2 class="typewriter">Cambiando el ritmo con propiedades *-timing-function</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../transiciones/index.htm">Transiciones CSS</a>
    <a class="current" href="index.htm">Funciones de tiempo</a>
    <a href="../animaciones/index.htm">Animaciones CSS</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Tanto cuando hablamos de <strong>transiciones</strong> como cuando hablamos de <strong>animaciones</strong> tenemos dos propiedades que se aplican exactamente igual y se encargan de definir el ritmo o transcurso de la animación o transición en cuestión.</p>
<p>Dichas propiedades son las siguientes:</p>
<table>
<thead>
<tr>
<th>Propiedades</th>
<th>Descripción</th>
<th>Valor</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>transition-timing-function</code></td>
<td>Ritmo de la transición</td>
<td><em>función predefinida</em> | <code>cubic-bezier(</code><em>A</em>, <em>B</em>, <em>C</em>, <em>D</em><code>)</code></td>
</tr>
<tr>
<td><code>animation-timing-function</code></td>
<td>Ritmo de la animación</td>
<td><em>función predefinida</em> | <code>cubic-bezier(</code><em>A</em>, <em>B</em>, <em>C</em>, <em>D</em><code>)</code></td>
</tr>
</tbody>
</table>
<p>Cualquiera de estas dos propiedades permite indicar el <strong>ritmo de la transición/animación</strong> en cuestión.</p>
<p><youtube-video v="hiRIjRf2QD8" alt="¡Controla el ritmo de tus animaciones o transiciones!"></youtube-video></p>
<h3 id="función-predefinida" tabindex="-1"><a class="header-anchor" href="#función-predefinida">Función predefinida</a></h3>
<p>Quizás, la forma más sencilla de indicar el ritmo de una animación, sería especificar una de las siguientes palabras clave que existen. Cada una de ella, realiza la animación a un ritmo diferente:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Inicio</th>
<th>Transcurso</th>
<th>Final</th>
<th>Equivalente en cubic-beizer</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>ease</strong></td>
<td>Lento</td>
<td>Rápido</td>
<td>Lento</td>
<td><code>cubic-bezier(0.25, 0.1, 0.25, 1)</code></td>
</tr>
<tr>
<td><code>linear</code></td>
<td>Normal</td>
<td>Normal</td>
<td>Normal</td>
<td><code>cubic-bezier(0, 0, 1, 1)</code></td>
</tr>
<tr>
<td><code>ease-in</code></td>
<td>Lento</td>
<td>Normal</td>
<td>Normal</td>
<td><code>cubic-bezier(0.42, 0, 1, 1)</code></td>
</tr>
<tr>
<td><code>ease-out</code></td>
<td>Normal</td>
<td>Normal</td>
<td>Lento</td>
<td><code>cubic-bezier(0, 0, 0.58, 1)</code></td>
</tr>
<tr>
<td><code>ease-in-out</code></td>
<td>Lento</td>
<td>Normal</td>
<td>Lento</td>
<td><code>cubic-bezier(0.42, 0, 0.58, 1)</code></td>
</tr>
<tr>
<td><code>cubic-bezier(</code><em>A</em>, <em>B</em>, <em>C</em>, <em>D</em><code>)</code></td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>Transición personalizada</td>
</tr>
</tbody>
</table>
<p>Si no se indica ninguna función de tiempo concreta, CSS utilizará la función de tiempo <code>ease</code>. Sin embargo, podemos utilizar cualquiera de las anteriores.</p>
<p>La función de tiempo <code>linear</code> quizás sea la más sencilla de entender, ya que siempre va al mismo ritmo, un ritmo constante. Por su parte, <code>ease</code> comienza suavemente, continua de forma más rápida y termina suavemente de nuevo. Las funciones de tiempo <code>ease-in</code> y <code>ease-out</code> son variaciones que van más lento al principio o al final, y la función de tiempo <code>ease-in-out</code> es una mezcla de las dos anteriores.</p>
<p>En el caso de que ninguna de ellas nos ofrezca el ritmo que buscamos, quizás nuestra mejor opción sea definirla manualmente mediante <code>cubic-bezier()</code>.</p>
<h3 id="función-cubic-bezier" tabindex="-1"><a class="header-anchor" href="#función-cubic-bezier">Función Cubic Bezier</a></h3>
<p>La función de tiempo <code>cubic-bezier()</code> es una función personalizada, donde podemos darle unos valores concretos depediendo de la velocidad que queramos que tenga la transición. En la última columna de la tabla anterior podemos ver los valores equivalentes a cada una de las palabras clave mencionadas como <code>linear</code>, <code>ease</code>, <code>ease-in</code>, <code>ease-out</code> o <code>ease-in-out</code>.</p>
<p>En principio, el formato de la función es <code>cubic-bezier(A, B, C, D)</code>, donde esos cuatro parámetros son números que indican lo siguiente:</p>
<table>
<thead>
<tr>
<th>Parámetro</th>
<th>Valor</th>
<th>Descripción</th>
<th>Pertenece a</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>A</code></td>
<td>X<sub>1</sub></td>
<td>Eje X del primer punto que orienta la curva bezier.</td>
<td>P<sub>1</sub></td>
</tr>
<tr>
<td><code>B</code></td>
<td>Y<sub>1</sub></td>
<td>Eje Y del primer punto que orienta la curva bezier.</td>
<td>P<sub>1</sub></td>
</tr>
<tr>
<td><code>C</code></td>
<td>X<sub>2</sub></td>
<td>Eje X del segundo punto que orienta la curva bezier.</td>
<td>P<sub>2</sub></td>
</tr>
<tr>
<td><code>D</code></td>
<td>Y<sub>2</sub></td>
<td>Eje Y del segundo punto que orienta la curva bezier.</td>
<td>P<sub>2</sub></td>
</tr>
</tbody>
</table>
<p><img src="cubic-bezier.png" alt="Cubic Bezier" width="563" height="534" loading="lazy"></p>
<p>Todo esto se puede ver muy fácilmente utilizando la herramienta <a href="https://cubic-bezier.com/">Cubic Bezier</a>, donde puedes crear de forma interactiva el ritmo de las transiciones o animaciones, estableciendo visualmente los parámetros deseados.</p>
<h3 id="función-de-salto" tabindex="-1"><a class="header-anchor" href="#función-de-salto">Función de salto</a></h3>
<p>Por último, a parte de las <strong>funciones de suavizado predefinidas</strong> y las <strong>cubic bezier</strong>, también es posible utilizar <strong>funciones de salto</strong>, que pueden ser muy útiles en ciertas ocasiones.</p>
<p>Las <strong>funciones de salto</strong> permiten establecer una transición o animación en un número concreto de pasos muy específico, que se pasa por parámetro <code>n</code>. Hay ciertas variaciones de funciones de salto, son las siguientes:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Descripción</th>
<th>Equivalente</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>steps(</code><em>n</em><code>, jump-start)</code></td>
<td>Divide el transcurso en <code>n</code> saltos y omite el primer paso.</td>
<td></td>
</tr>
<tr>
<td><code>steps(</code><em>n</em><code>, jump-end)</code></td>
<td>Divide el transcurso en <code>n</code> saltos y omite el último paso.</td>
<td></td>
</tr>
<tr>
<td><code>steps(</code><em>n</em><code>, jump-none)</code></td>
<td>Divide el transcurso en <code>n</code> saltos y no omite ningún paso.</td>
<td></td>
</tr>
<tr>
<td><code>steps(</code><em>n</em><code>, jump-both)</code></td>
<td>Divide el transcurso en <code>n</code> saltos y omite el primer y último paso.</td>
<td></td>
</tr>
<tr>
<td><code>steps(</code><em>n</em><code>)</code></td>
<td>Alias de <code>jump-end</code></td>
<td>Equivale a <code>steps(</code><em>n</em><code>, jump-end)</code></td>
</tr>
<tr>
<td><code>steps(</code><em>n</em><code>, start)</code></td>
<td>Alias de <code>jump-start</code></td>
<td>Equivale a <code>steps(</code><em>n</em><code>, jump-start)</code></td>
</tr>
<tr>
<td><code>steps(</code><em>n</em><code>, end)</code></td>
<td>Alias de <code>jump-end</code></td>
<td>Equivale a <code>steps(</code><em>n</em><code>, jump-end)</code></td>
</tr>
<tr>
<td><code>step-start</code></td>
<td>Función de salto predefinida</td>
<td>Equivale a <code>steps(1, jump-start)</code></td>
</tr>
<tr>
<td><code>step-end</code></td>
<td>Función de salto predefinida</td>
<td>Equivale a <code>steps(1, jump-end)</code></td>
</tr>
</tbody>
</table>
<p>Estas funciones de salto pueden ser especialmente interesantes para hacer animaciones con <strong>spritesheets</strong> de imágenes, como por ejemplo, este de <strong>Guybrush Threepwood</strong> de <a href="https://codepen.io/manz/pen/wBZvoE"><strong>Monkey Island</strong></a>. En ella, realizamos una animación que no nos interesa que sea animada, sino que se pueda saltar entre viñetas para replicar el efecto de una animación:</p>
<p><img src="monkey-guybrush.png" alt="Monkey Island - Guybrush Threepwood CSS animation" width="624" height="150" loading="lazy"></p>
<p>Tienes un artículo donde explico como funciona en <a href="https://www.emezeta.com/articulos/animar-personajes-con-animaciones-css">Animar personajes con CSS</a>.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../transiciones/index.htm" title="Transiciones CSS">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Transiciones CSS</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../animaciones/index.htm" title="Animaciones CSS">
  <div>
    <span>Animaciones CSS</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/W6fAzw3HoWg" title="Cómo crear GRADIENTES LINEALES en CSS">
  <img loading="lazy" src="../../../vi/W6fAzw3HoWg/mqdefault.jpg" alt="Cómo crear GRADIENTES LINEALES en CSS">
</a><a href="https://youtu.be/8tTMYgHBQPI" title="Analizando las preguntas del STATE OF CSS 2022">
  <img loading="lazy" src="../../../vi/8tTMYgHBQPI/mqdefault.jpg" alt="Analizando las preguntas del STATE OF CSS 2022">
</a><a href="https://youtu.be/pJGEELsEM1w" title="Consejos y buenas prácticas (III): CSS">
  <img loading="lazy" src="../../../vi/pJGEELsEM1w/mqdefault.jpg" alt="Consejos y buenas prácticas (III): CSS">
</a><a href="https://youtu.be/hiRIjRf2QD8" title="FUNCIONES de TIEMPO en CSS: ¡Controla el ritmo de tus animaciones!">
  <img loading="lazy" src="../../../vi/hiRIjRf2QD8/mqdefault.jpg" alt="FUNCIONES de TIEMPO en CSS: ¡Controla el ritmo de tus animaciones!">
</a><a href="https://youtu.be/Wou2koTiIyU" title="Grid CSS: Centrar, distribuir y alinear elementos">
  <img loading="lazy" src="../../../vi/Wou2koTiIyU/mqdefault.jpg" alt="Grid CSS: Centrar, distribuir y alinear elementos">
</a><a href="https://youtu.be/lM4eufOnKVA" title="Especificidad CSS: ¿Cómo evitar los !important?">
  <img loading="lazy" src="../../../vi/lM4eufOnKVA/mqdefault.jpg" alt="Especificidad CSS: ¿Cómo evitar los !important?">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
