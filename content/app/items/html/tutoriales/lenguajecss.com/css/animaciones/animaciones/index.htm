<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Animaciones CSS - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Con CSS podemos realizar animaciones de forma muy sencilla, ofreciéndonos grandes posibilidades y la flexibilidad de utilizar propiedades para cambiar su comportamiento.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Animaciones CSS - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Con CSS podemos realizar animaciones de forma muy sencilla, ofreciéndonos grandes posibilidades y la flexibilidad de utilizar propiedades para cambiar su comportamiento.">
  <meta property="og:url" content="https://lenguajecss.com/css/animaciones/animaciones/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/animaciones/animaciones/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Animaciones CSS - CSS en español">
  <meta property="twitter:description" content="Con CSS podemos realizar animaciones de forma muy sencilla, ofreciéndonos grandes posibilidades y la flexibilidad de utilizar propiedades para cambiar su comportamiento.">
  <meta property="twitter:image" content="https://lenguajecss.com/large-summary.jpg">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Animaciones CSS</a></h1><h2 class="typewriter">Propiedades para crear animaciones en CSS</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../timing-function/index.htm">Funciones de tiempo</a>
    <a class="current" href="index.htm">Animaciones CSS</a>
    <a href="../keyframes/index.htm">La regla @keyframes</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Una vez conocemos las <a href="../transiciones/index.htm">transiciones CSS</a>, es muy fácil adaptarnos al concepto de <strong>animaciones CSS</strong>, el cual amplia lo que ya sabemos de transiciones, convirtiéndolo en algo mucho más flexible y potente, en el que no es necesario que el usuario interactue de alguna forma (<em>cómo pasa en las transiciones</em>).</p>
<p>Las <strong>transiciones</strong> son una manera de suavizar un cambio de un estado inicial a un estado final. La idea de las animaciones CSS parten del mismo concepto, pero a diferencia de las transiciones, permiten añadir más estados aún. Así pues, con las animaciones podemos partir desde un estado inicial, a un estado posterior, a otro estado posterior, y así sucesivamente.</p>
<p>Para crear animaciones CSS es necesario realizar <strong>2 pasos</strong>:</p>
<ul>
<li>Utilizar la propiedad <code>animation</code> (<em>o derivadas</em>) para indicar que elemento HTML vamos a animar.</li>
<li>Definir mediante la regla <code>@keyframes</code> la animación en cuestión y sus estados (<em>fotogramas clave</em>).</li>
</ul>
<p>En primer lugar, vamos a examinar las diferentes propiedades relacionadas con las animaciones, y más adelante veremos como crear fotogramas con la regla <code>@keyframes</code>.</p>
<h3 id="propiedades-de-animación-css" tabindex="-1"><a class="header-anchor" href="#propiedades-de-animación-css">Propiedades de animación CSS</a></h3>
<p>Para el comportamiento de una animación, necesitamos conocer las siguientes propiedades, que son una «ampliación» de las propiedades de las transiciones CSS:</p>
<table>
<thead>
<tr>
<th>Propiedades</th>
<th>Descripción</th>
<th>Valor</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>animation-name</code></td>
<td>Nombre de la animación a aplicar.</td>
<td><strong>none</strong> | <em>nombre</em></td>
</tr>
<tr>
<td><code>animation-duration</code></td>
<td>Duración de la animación.</td>
<td><strong>0</strong> | <badge-type class="time"></badge-type></td>
</tr>
<tr>
<td><code>animation-timing-function</code></td>
<td>Ritmo de la animación.</td>
<td><a href="../timing-function/index.htm">Ver funciones de tiempo</a></td>
</tr>
<tr>
<td><code>animation-delay</code></td>
<td>Retardo en iniciar la animación.</td>
<td><strong>0</strong> | <badge-type class="time"></badge-type></td>
</tr>
<tr>
<td><code>animation-iteration-count</code></td>
<td>Número de veces que se repetirá.</td>
<td><strong>1</strong> | <code>infinite</code> | <badge-type class="number"></badge-type></td>
</tr>
<tr>
<td><code>animation-direction</code></td>
<td>Dirección de la animación.</td>
<td><strong>normal</strong> | <code>reverse</code> | <code>alternate</code> | <code>alternate-reverse</code></td>
</tr>
<tr>
<td><code>animation-fill-mode</code></td>
<td>Como se «completa» la animación.</td>
<td><strong>none</strong> | <code>forwards</code> | <code>backwards</code> | <code>both</code></td>
</tr>
<tr>
<td><code>animation-play-state</code></td>
<td>Estado de la animación.</td>
<td><strong>running</strong> | <code>paused</code></td>
</tr>
</tbody>
</table>
<p>En las siguientes secciones explicaremos detenidamente cada una de estas propiedades y su funcionamiento.</p>
<p><youtube-video v="8Jh2K3tq5n0" alt="Tutorial de Animaciones CSS"></youtube-video></p>
<h3 id="nombre-de-la-animación" tabindex="-1"><a class="header-anchor" href="#nombre-de-la-animación">Nombre de la animación</a></h3>
<p>La propiedad principal de las animaciones es <code>animation-name</code>, ya que esta permite especificar el <strong>nombre de la animación</strong> (<em>definido con la regla <code>@keyframes</code> que veremos más adelante</em>) que queremos asociar al elemento HTML donde indicamos la propiedad. El nombre de la animación debería estar en <code>kebab-case</code> (<em>y no en <code>camelCase</code> u otras</em>).</p>
<ul>
<li>La propiedad <code>animation-duration</code> establece el tiempo de <strong>duración</strong> de la animación.</li>
<li>La propiedad <code>animation-delay</code> establece el <strong>retardo</strong> en empezar la animación.</li>
<li>La propiedad <code>animation-timing-function</code> establece el <strong>ritmo</strong> de la animación.</li>
</ul>
<blockquote>
<p>Las propiedades <code>animation-duration</code> y <code>animation-delay</code> funcionan exactamente igual que las propiedades análogas <code>transition-duration</code> y <code>transition-delay</code> del apartado de <a href="../transiciones/index.htm">Transiciones CSS</a>. De igual forma, la propiedad <code>animation-timing-function</code> es idéntica a la propiedad <code>transition-timing-function</code> que explicamos en el apartado de <a href="../timing-function/index.htm">Funciones de tiempo</a>.</p>
</blockquote>
<h3 id="número-de-repeticiones" tabindex="-1"><a class="header-anchor" href="#número-de-repeticiones">Número de repeticiones</a></h3>
<p>La propiedad <code>animation-iteration-count</code> permite indicar el número de veces que se repite la animación, pudiendo establecer un <badge-type class="number"></badge-type> número concreto de repeticiones o indicando <code>infinite</code> para que se repita continuamente.</p>
<h3 id="dirección-de-la-animación" tabindex="-1"><a class="header-anchor" href="#dirección-de-la-animación">Dirección de la animación</a></h3>
<p>Por otra parte, especificando un valor en <code>animation-direction</code> conseguiremos indicar el orden en el que se reproducirán los fotogramas, pudiendo escoger un valor entre los siguientes:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Significado</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>normal</code></td>
<td>Los fotogramas se reproducen en orden: desde el primero hasta el último.</td>
</tr>
<tr>
<td><code>reverse</code></td>
<td>Los fotogramas se reproducen en orden inverso: desde el final hasta el primero.</td>
</tr>
<tr>
<td><code>alternate</code></td>
<td>En iteraciones par, se reproducen como <code>normal</code>. En impares, como <code>reverse</code>.</td>
</tr>
<tr>
<td><code>alternate-reverse</code></td>
<td>En iteraciones par, se reproducen como <code>reverse</code>. En impares, como <code>normal</code>.</td>
</tr>
</tbody>
</table>
<h3 id="modo-de-completado" tabindex="-1"><a class="header-anchor" href="#modo-de-completado">Modo de completado</a></h3>
<p>Por defecto, una animación antes de arrancar y después de terminar (<em>si no está establecida en repetición <code>infinite</code></em>) no tiene aplicados los estilos de la animación especificada en cuestión. Esto se puede ver fácilmente, por ejemplo, cuando termina una animación, que vuelve a sus «estilos iniciales».</p>
<p>Mediante la propiedad <code>animation-fill-mode</code> podemos indicar que debe hacer la animación cuando no se está reproduciendo:</p>
<ul>
<li>El valor <code>none</code> realiza el comportamiento indicado en el párrafo anterior.</li>
<li>El valor <code>backwards</code> indica que la animación debe tener aplicados los estilos del fotograma inicial antes de empezar.</li>
<li>El valor <code>forwards</code> indica que la animación debe tener aplicados los estilos del fotograma final al terminar.</li>
<li>El valor <code>both</code> indica que debe aplicar los dos casos anteriores (<em>backwards y forwards</em>).</li>
</ul>
<h3 id="estado-de-la-animación" tabindex="-1"><a class="header-anchor" href="#estado-de-la-animación">Estado de la animación</a></h3>
<p>Por último, la propiedad <code>animation-play-state</code> nos permite establecer la animación a estado de reproducción <code>running</code> o pausarla mediante el valor <code>paused</code>. Esto en CSS no da demasiadas posibilidades, pero puede ser muy útil combinado con algo de Javascript.</p>
<h3 id="atajo-animaciones" tabindex="-1"><a class="header-anchor" href="#atajo-animaciones">Atajo: Animaciones</a></h3>
<p>Nuevamente, CSS ofrece la posibilidad de resumir todas estas propiedades en una sola, para hacer nuestras hojas de estilos más compactas. El orden recomendado para los valores de la propiedad de atajo sería el siguiente:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token comment">/* animation: &lt;name> &lt;duration> &lt;timing-function> &lt;delay>
                &lt;iteration-count> &lt;direction> &lt;fill-mode> &lt;play-state> */</span>

  <span class="token property">animation</span><span class="token punctuation">:</span> change-color 5s linear 0.5s 4 normal forwards running<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p><strong>OJO</strong>: Mucho cuidado al indicar los segundos en las propiedades <code>animation-duration</code> y/o <code>animation-delay</code>. Si no indicamos la unidad (<em>incluso con valores de cero</em>), se interpretará como el valor de la propiedad <code>animation-iteration-count</code>, que es el número de veces que se repite la animación (<em>y no lleva unidad</em>).</p>
<h3 id="animaciones-múltiples" tabindex="-1"><a class="header-anchor" href="#animaciones-múltiples">Animaciones múltiples</a></h3>
<p>Como en muchas propiedades de CSS, es posible separar por comas para indicar múltiples valores, en este caso, para indicar que queremos realizar varias animaciones a la vez. En este ejemplo, indicamos que tanto la animación <code>move-right</code> como la animación <code>change-color</code> deben empezar a la vez, cada una de las cuales dura <code>5 segundos</code> y tienen un ritmo lineal (<em>constante</em>):</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.animated</span> <span class="token punctuation">{</span>
  <span class="token property">animation</span><span class="token punctuation">:</span>
    move-right 5s linear<span class="token punctuation">,</span>
    change-color 5s linear<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Sin embargo, si además añadimos la propiedad <code>animation-delay</code>, podemos hacer algo muy interesante.</p>
<h3 id="encadenar-animaciones" tabindex="-1"><a class="header-anchor" href="#encadenar-animaciones">Encadenar animaciones</a></h3>
<p>Es posible encadenar animaciones utilizando <strong>animaciones múltiples</strong> combinadas con la propiedad <code>animation-delay</code>. Observa el siguiente ejemplo donde se verá mucho mejor:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.animated</span> <span class="token punctuation">{</span>
  <span class="token property">animation</span><span class="token punctuation">:</span>
    move-right 5s linear 0s<span class="token punctuation">,</span>   <span class="token comment">/* Comienza a los 0s (no hay anterior) */</span>
    look-up 2.5s linear 5s<span class="token punctuation">,</span>    <span class="token comment">/* Comienza a los 5s (5 de la anterior) */</span>
    move-left 5s linear 7.5s<span class="token punctuation">,</span>  <span class="token comment">/* Comienza a los 7.5s (5 + 2.5 de la anterior) */</span>
    dissapear 2s linear 9.5s<span class="token punctuation">;</span>  <span class="token comment">/* Comienza a los 9.5s (5 + 2.5 + 2 de la anterior) */</span>
<span class="token punctuation">}</span></code></pre>
<p>El truco de este ejemplo está en los valores de <strong>duración</strong> y los de <strong>retardo</strong>, en combinación con los anteriores:</p>
<ul>
<li>La primera animación <code>move-right</code> comienza a los <code>0 segundos</code> y dura <code>5 segundos</code>.</li>
<li>La segunda animación <code>look-up</code> comienza a los <code>5 segundos</code> y dura <code>2.5 segundos</code>.</li>
<li>La tercera animación <code>move-left</code> comienza a los <code>7.5 segundos</code> y dura <code>5 segundos</code>.</li>
<li>La cuarta animación <code>dissapear</code> comienza a los <code>9.5 segundos</code> y dura <code>2 segundos</code>.</li>
</ul>
<p>En este caso, lo que hemos hecho es aplicar varias animaciones a la vez, pero estableciendo un retardo (<em>cuarto parámetro</em>) que es la suma de la duración de las animaciones anteriores. De esta forma, encadenamos una animación con otra.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../timing-function/index.htm" title="Funciones de tiempo">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Funciones de tiempo</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../keyframes/index.htm" title="La regla @keyframes">
  <div>
    <span>La regla @keyframes</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/Wou2koTiIyU" title="Grid CSS: Centrar, distribuir y alinear elementos">
  <img loading="lazy" src="../../../vi/Wou2koTiIyU/mqdefault.jpg" alt="Grid CSS: Centrar, distribuir y alinear elementos">
</a><a href="https://youtu.be/esjagdcozX0" title="Flex CSS: ¡Aprendiendo las bases!">
  <img loading="lazy" src="../../../vi/esjagdcozX0/mqdefault.jpg" alt="Flex CSS: ¡Aprendiendo las bases!">
</a><a href="https://youtu.be/bMiXLfOnuUA" title="ECSStatic: Librería CSS-in-JS">
  <img loading="lazy" src="../../../vi/bMiXLfOnuUA/mqdefault.jpg" alt="ECSStatic: Librería CSS-in-JS">
</a><a href="https://youtu.be/L7Hi32qBIxI" title="Cómo crear SOMBRAS EN CAJAS (box-shadow)">
  <img loading="lazy" src="../../../vi/L7Hi32qBIxI/mqdefault.jpg" alt="Cómo crear SOMBRAS EN CAJAS (box-shadow)">
</a><a href="https://youtu.be/jhg2xas3av0" title="¡Carga MÁS RÁPIDO tu sitio web OPTIMIZANDO TIPOGRAFÍAS!">
  <img loading="lazy" src="../../../vi/jhg2xas3av0/mqdefault.jpg" alt="¡Carga MÁS RÁPIDO tu sitio web OPTIMIZANDO TIPOGRAFÍAS!">
</a><a href="https://youtu.be/OQtAyXHeKnc" title="Grid CSS: Grids por área">
  <img loading="lazy" src="../../../vi/OQtAyXHeKnc/mqdefault.jpg" alt="Grid CSS: Grids por área">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
