<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>StyleLint: Linter CSS - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Mediante la herramienta StyleLint podemos hacer que VSCode corrija nuestro código CSS de forma automática">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="StyleLint: Linter CSS - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/calidad-de-codigo/stylelint/stylelint.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Mediante la herramienta StyleLint podemos hacer que VSCode corrija nuestro código CSS de forma automática">
  <meta property="og:url" content="https://lenguajecss.com/css/calidad-de-codigo/stylelint/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/calidad-de-codigo/stylelint/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="StyleLint: Linter CSS - CSS en español">
  <meta property="twitter:description" content="Mediante la herramienta StyleLint podemos hacer que VSCode corrija nuestro código CSS de forma automática">
  <meta property="twitter:image" content="https://lenguajecss.com/css/calidad-de-codigo/stylelint/stylelint.jpg">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">StyleLint: Linter CSS</a></h1><h2 class="typewriter">Revisión de errores o problemas</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../minificar-css/index.htm">Minificar CSS</a>
    <a class="current" href="index.htm">StyleLint: Linter CSS</a>
    <a href="../css-nesting/index.htm">CSS Nesting nativo</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Escribir código CSS correctamente es difícil, y sobre todo cuando empezamos, es muy habitual que adquiramos malas prácticas que hagan que nuestro código CSS sea de <strong>peor calidad</strong>. Esto es un problema, ya que a medida que escribimos código CSS, tiende a crecer exponencialmente y se vuelve mucho más difícil de mantener.</p>
<h3 id="qué-es-stylelint" tabindex="-1"><a class="header-anchor" href="#qué-es-stylelint">¿Qué es StyleLint?</a></h3>
<p>Existen unas herramientas llamadas <strong>linters</strong>, que se encargan de revisar nuestro código a medida que lo vamos escribiendo y nos avisan de posibles problemas y malas prácticas. <a href="https://stylelint.io/">StyleLint</a> es el linter por excelencia de CSS, mediante el cuál podremos vigilar la calidad del código CSS escrito e ir adquiriendo mejores hábitos de escritura de CSS.</p>
<p><youtube-video v="D5fJxaLCjKg" alt="Configurar VSCode para CORREGIR tu CSS automáticamente"></youtube-video></p>
<h3 id="instalación-de-stylelint" tabindex="-1"><a class="header-anchor" href="#instalación-de-stylelint">Instalación de StyleLint</a></h3>
<p>Para comenzar la instalación de <strong>StyleLint</strong> simplemente escribimos lo siguiente desde una <a href="https://terminaldelinux.com/terminal/">terminal de texto</a>:</p>
<pre class="language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev stylelint stylelint-config-standard</code></pre>
<p>Esto instalará la herramienta y un paquete de configuración estándar llamado <a href="https://github.com/stylelint/stylelint-config-standard">stylelint-config-standard</a> en nuestro proyecto como dependencias de desarrollo.</p>
<p>Para comprobar que todo ha ido correctamente, podemos escribir lo siguiente, que nos dará la versión de <code>stylelint</code> instalada:</p>
<pre class="language-bash"><code class="language-bash">$ npx stylelint <span class="token parameter variable">--version</span>
<span class="token number">15.3</span>.0</code></pre>
<p>Si es así, podemos continuar al siguiente apartado.</p>
<blockquote>
<blockquote>
<blockquote>
<p>Si alguno de los comandos anteriores te da error, probablemente sea porque no tienes instalado (<em>o bien configurado</em>) <a href="https://nodejs.org/en/">NodeJS</a>. En ese caso, te recomiendo seguir la guía de <a href="https://lenguajejs.com/npm/introduccion/instalacion-node-con-nvm/">instalación de Node con NVM</a> y/o <a href="https://lenguajejs.com/npm/administracion/crear-nuevo-proyecto/">aprender a utilizar NPM</a>.</p>
</blockquote>
</blockquote>
</blockquote>
<h3 id="configuración-de-stylelint" tabindex="-1"><a class="header-anchor" href="#configuración-de-stylelint">Configuración de StyleLint</a></h3>
<p>Para utilizar nuestro <strong>linter CSS</strong> debemos escribir lo siguiente:</p>
<pre class="language-bash"><code class="language-bash">$ npx stylelint src/index.css</code></pre>
<ul>
<li><code>npx</code> es una herramienta que ayuda al sistema a buscar el comando de Node</li>
<li><code>stylelint</code> es el nombre del linter que vamos a iniciar</li>
<li><code>src/index.css</code> es la ruta de nuestro archivo <code>.css</code> que vamos a analizar</li>
</ul>
<p>Si lo ejecutamos en este punto, probablemente tengamos un error similar al siguiente:</p>
<pre class="language-bash"><code class="language-bash">$ npx stylelint src/index.css
Error: No configuration provided <span class="token keyword">for</span> /home/manz/project-name/src/index.css</code></pre>
<p>Esto ocurre porque no hemos creado un archivo de configuración, que es necesario para utilizar la herramienta. Así pues, creamos un archivo <code>.stylelintrc.json</code> en la raíz del proyecto (<em>al mismo nivel que el <code>package.json</code>, fuera de <code>src/</code></em>) e incluimos las siguientes lineas:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"extends"</span><span class="token operator">:</span> <span class="token string">"stylelint-config-standard"</span>
<span class="token punctuation">}</span></code></pre>
<p>Esto significa que va a leer la configuración base del paquete que instalamos anteriormente llamado <code>stylelint-config-standard</code>, por lo que ya debería funcionar nuestro linter con unas reglas básicas definidas por este paquete.</p>
<p>Una vez configurado, imaginemos ahora que tenemos el siguiente archivo <code>src/index.css</code> con las siguientes líneas:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>

  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> Montserrat<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Observa que tenemos una línea en blanco en el bloque del selector <code>.container</code>, que la tipografía indicada no tiene una tipografía genérica alternativa. Volvemos a ejecutar el siguiente comando:</p>
<pre class="language-bash"><code class="language-bash">$ npx stylelint src/index.css

src/index.css
 <span class="token number">3</span>:3   ✖  Unexpected empty line before declaration  declaration-empty-line-before
 <span class="token number">4</span>:16  ✖  Unexpected missing generic font family    font-family-no-missing-generic-family-keyword

<span class="token number">2</span> problems <span class="token punctuation">(</span><span class="token number">2</span> errors, <span class="token number">0</span> warnings<span class="token punctuation">)</span></code></pre>
<p>Si tenemos un fichero <code>src/index.css</code> con varias líneas de código CSS en él con algún tipo de error nos aparecerán los errores como podemos ver en el ejemplo anterior. En el caso de que el fichero <code>src/index.css</code> no tenga errores, no nos mostrará nada.</p>
<p>En el mensaje del ejemplo anterior, nos indica que existen dos errores:</p>
<ul>
<li>En la línea <code>3</code>, carácter <code>3</code>, no se esperaba una línea vacía</li>
<li>En la línea <code>4</code>, carácter <code>16</code>, se esperaba una tipografía genérica</li>
</ul>
<p>Como puedes ver, estos son problemas de estilo de código (<em>que afectan al programador que lee el código</em>), pero no errores que eviten que el navegador muestre correctamente la página. El linter es interesante porque nos acostumbra a escribir correctamente el código, de modo que sea más fácil de leer.</p>
<blockquote>
<p>Observa que al final de cada error, nos indica una palabra clave, que es el <strong>nombre de la regla</strong> que ha detectado error. Si tienes curiosidad sobre alguna, puedes buscarla en la <a href="https://stylelint.io/user-guide/rules/list">lista de reglas de Stylelint</a>.</p>
</blockquote>
<h3 id="el-fichero-stylelintrcjson" tabindex="-1"><a class="header-anchor" href="#el-fichero-stylelintrcjson">El fichero .stylelintrc.json</a></h3>
<p>El fichero <code>.stylelintrc.json</code> incluye la configuración que indica a <strong>StyleLint</strong> como debe comportarse. De momento, sólo hemos dicho que utilice la configuración heredada del paquete <code>stylelint-config-standard</code>, sin embargo, se pueden añadir más paquetes de configuración:</p>
<table>
<thead>
<tr>
<th>Paquete de configuración</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/stylelint/stylelint-config-standard">stylelint-config-standard</a></td>
<td>Configuración base estándar para CSS.</td>
</tr>
<tr>
<td><a href="https://github.com/stylelint-scss/stylelint-config-standard-scss">stylelint-config-standard-scss</a></td>
<td>Configuración base estándar para Sass.</td>
</tr>
<tr>
<td><a href="https://github.com/prettier/stylelint-config-prettier">stylelint-config-prettier</a></td>
<td>Desactiva reglas que puedan dar conflicto con Prettier.</td>
</tr>
<tr>
<td><a href="https://github.com/ota-meshi/stylelint-config-recommended-vue">stylelint-config-recommended-vue</a></td>
<td>Configuración recomendada para CSS en Vue.</td>
</tr>
<tr>
<td><a href="https://github.com/ream88/stylelint-config-idiomatic-order">stylelint-config-idiomatic-order</a></td>
<td>Reglas para usar <a href="https://github.com/necolas/idiomatic-css#declaration-order">orden idiomático</a> de CSS.</td>
</tr>
<tr>
<td><a href="https://github.com/styled-components/stylelint-config-styled-components">stylelint-config-styled-components</a></td>
<td>Configuración para uso con Styled Components.</td>
</tr>
<tr>
<td><a href="https://github.com/ota-meshi/stylelint-config-html">stylelint-config-html</a></td>
<td>Configuración para ficheros HTML, Vue, Svelte, Astro, PHP...</td>
</tr>
</tbody>
</table>
<p>Por ejemplo, veamos como haríamos para soportar código del preprocesador Sass. Lo primero, instalamos el paquete correspondiente si está disponible:</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev stylelint-config-standard-scss</code></pre>
<p>Una vez hecho, lo cargamos en el fichero de configuración correspondiente:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"extends"</span><span class="token operator">:</span> <span class="token string">"stylelint-config-standard-scss"</span>
<span class="token punctuation">}</span></code></pre>
<h4 id="sintaxis-personalizada" tabindex="-1"><a class="header-anchor" href="#sintaxis-personalizada">Sintaxis personalizada</a></h4>
<p>En algunos casos, puede que no exista un paquete de configuración para una sintaxis específica. En ese caso, podemos utilizar <code>customSyntax</code> para indicar una configuración personalizada y que se adapte el linter lo mejor posible:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"extends"</span><span class="token operator">:</span> <span class="token string">"stylelint-config-standard"</span><span class="token punctuation">,</span>
  <span class="token property">"customSyntax"</span><span class="token operator">:</span> <span class="token string">"postcss-syntax"</span>
<span class="token punctuation">}</span></code></pre>
<p>En este caso, <code>postcss-syntax</code> permite cambiar automáticamente de sintaxis, según la extensión del fichero utilizado. No te olvides de instalar el paquete <code>postcss-syntax</code>, así como otros como <code>postcss-styled</code> (<em>styled-components</em>), <code>postcss-jsx</code> (<em>JSX o CSS-in-JS</em>) o <code>postcss-html</code> (<em>HTML, Vue, Astro, PHP...</em>) según interese para soportar formatos más específicos.</p>
<h3 id="reglas-de-stylelint" tabindex="-1"><a class="header-anchor" href="#reglas-de-stylelint">Reglas de StyleLint</a></h3>
<p>Paquetes como <code>stylelint-config-standard</code> o similares, no son más que una configuración predefinida que incluye un conjunto de <strong>reglas</strong> determinado. Las <strong>reglas</strong> son las normas que tiene StyleLint para detectar si algo es incorrecto o no. Existe una amplia <a href="https://stylelint.io/user-guide/rules/list">lista de reglas de StyleLint</a>, separadas por categorías.</p>
<p>Es posible que en nuestro caso, nos guste la configuración por defecto de <code>stylelint-config-standard</code>, sin embargo, no estemos de acuerdo con alguna de las reglas preconfiguradas. Si es así, nosotros podemos modificar ciertas reglas particulares y ajustarla a nuestros criterios en nuestro archivo <code>.stylelintrc.json</code>:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"extends"</span><span class="token operator">:</span> <span class="token string">"stylelint-config-standard"</span><span class="token punctuation">,</span>
  <span class="token property">"rules"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"declaration-property-value-no-unknown"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"declaration-colon-newline-after"</span><span class="token operator">:</span> <span class="token string">"always-multi-line"</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>Observa que en la propiedad <code>rules</code>, hemos definido la regla <a href="https://stylelint.io/user-guide/rules/declaration-property-value-no-unknown/">declaration-property-value-no-unknown</a> a <code>true</code>, por lo que obligamos a que el linter revise los valores de las propiedades y avise si estamos usando alguno que no exista, todo ello independientemente de la configuración que se tenga en el paquete de configuración extendido original.</p>
<p>Lo mismo ocurre con la regla <a href="https://stylelint.io/user-guide/rules/list/declaration-colon-newline-after">declaration-colon-newline-after</a> definida al valor <code>always-multi-line</code>. Sobreescribirá el valor que tenía en el paquete de configuración <code>stylelint-config-standard</code> al que hemos definido nosotros.</p>
<h3 id="corregir-css-autofix" tabindex="-1"><a class="header-anchor" href="#corregir-css-autofix">Corregir CSS (Autofix)</a></h3>
<p>Una vez hemos llegado hasta este punto, tenemos nuestro <strong>StyleLint</strong> funcionando desde una terminal. Sin embargo, no es cómodo abrir la terminal cada vez que queremos comprobar si hay errores en nuestro código CSS. Lo ideal sería que esta tarea la realizara nuestro editor de código como <strong>VSCode</strong> a medida que escribimos en nuestro fichero <code>.css</code>.</p>
<p>Para ello, instalaremos la <a href="https://marketplace.visualstudio.com/items?itemName=stylelint.vscode-stylelint">extensión StyleLint para VSCode</a>. Una vez hecho, pulsamos <kbd>F1</kbd> y marcamos la opción <code>Abrir configuración de Usuario (JSON)</code>. Nos aparecerá un fichero <code>.json</code> que es la configuración de VSCode, donde añadiremos lo siguiente:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
  <span class="token property">"css.validate"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">"scss.validate"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">"less.validate"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">"stylelint.enable"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">"editor.formatOnSave"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">"editor.codeActionsOnSave"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"source.fixAll.stylelint"</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span></code></pre>
<p>Vamos a explicar que hace cada una de ellas:</p>
<ul>
<li>Las propiedades <code>css.validate</code>, <code>scss.validate</code> y <code>less.validate</code> desactivan el linter básico (usaremos StyleLint).</li>
<li>La propiedad <code>stylelint.enable</code> activa el StyleLint en nuestro VSCode. Mostrará los errores en la pestaña &quot;Problemas&quot;. Necesita la extensión mencionada anteriormente.</li>
<li>La propiedad <code>editor.formatOnSave</code> hace posible formatear el documento cada vez que guardemos un fichero.</li>
<li>La propiedad <code>editor.codeActionsOnSave</code> determina que se hará cuando se guarde el fichero. En nuestro caso colocamos <code>source.fixAll.stylelint</code> a <code>true</code>, lo que hará que intente corregir los problemas automáticamente.</li>
</ul>
<p>Esta última opción es la equivalente a escribir lo siguiente en la terminal:</p>
<pre class="language-bash"><code class="language-bash">$ npx stylelint src/index.css <span class="token parameter variable">--fix</span></code></pre>
<p>Ten en cuenta que, por ejemplo, <code>editor.formatOnSave</code> está en un ambito global, por lo tanto se ejecuta al guardar cualquier tipo de archivo. Si sólo quieres que ocurra con ficheros <code>.css</code>, escribimos lo siguiente:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
  <span class="token property">"[css]"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"editor.formatOnSave"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"editor.defaultFormatter"</span><span class="token operator">:</span> <span class="token string">"stylelint.vscode-stylelint"</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span></code></pre>
<p>En este caso, el <code>formatOnSave</code> sólo se activará para los archivos de tipo <strong>css</strong>, los cuales serán formateados por defecto con la extensión StyleLint. Otros formatos podrían ser <code>[javascript]</code>, <code>[html]</code>, <code>[markdown]</code>, etc...</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../minificar-css/index.htm" title="Minificar CSS">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Minificar CSS</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../css-nesting/index.htm" title="CSS Nesting nativo">
  <div>
    <span>CSS Nesting nativo</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/0sFtRnbe0fo" title="Novedades de CSS: Dr. CSStrange y el multiverso">
  <img loading="lazy" src="../../../vi/0sFtRnbe0fo/mqdefault.jpg" alt="Novedades de CSS: Dr. CSStrange y el multiverso">
</a><a href="https://youtu.be/L7Hi32qBIxI" title="Cómo crear SOMBRAS EN CAJAS (box-shadow)">
  <img loading="lazy" src="../../../vi/L7Hi32qBIxI/mqdefault.jpg" alt="Cómo crear SOMBRAS EN CAJAS (box-shadow)">
</a><a href="https://youtu.be/lM4eufOnKVA" title="Especificidad CSS: ¿Cómo evitar los !important?">
  <img loading="lazy" src="../../../vi/lM4eufOnKVA/mqdefault.jpg" alt="Especificidad CSS: ¿Cómo evitar los !important?">
</a><a href="https://youtu.be/Wou2koTiIyU" title="Grid CSS: Centrar, distribuir y alinear elementos">
  <img loading="lazy" src="../../../vi/Wou2koTiIyU/mqdefault.jpg" alt="Grid CSS: Centrar, distribuir y alinear elementos">
</a><a href="https://youtu.be/jhg2xas3av0" title="¡Carga MÁS RÁPIDO tu sitio web OPTIMIZANDO TIPOGRAFÍAS!">
  <img loading="lazy" src="../../../vi/jhg2xas3av0/mqdefault.jpg" alt="¡Carga MÁS RÁPIDO tu sitio web OPTIMIZANDO TIPOGRAFÍAS!">
</a><a href="https://youtu.be/8Jh2K3tq5n0" title="Tutorial para aprender Animaciones CSS">
  <img loading="lazy" src="../../../vi/8Jh2K3tq5n0/mqdefault.jpg" alt="Tutorial para aprender Animaciones CSS">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
