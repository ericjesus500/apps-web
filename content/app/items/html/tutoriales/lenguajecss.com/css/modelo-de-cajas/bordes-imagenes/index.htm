<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Bordes con imágenes - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Existe un sistema para crear bordes con imágenes, expandibles a partir de una imagen de base. En este artículo te explicamos como.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Bordes con imágenes - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/modelo-de-cajas/bordes-imagenes/9-slice.png">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Existe un sistema para crear bordes con imágenes, expandibles a partir de una imagen de base. En este artículo te explicamos como.">
  <meta property="og:url" content="https://lenguajecss.com/css/modelo-de-cajas/bordes-imagenes/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/modelo-de-cajas/bordes-imagenes/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Bordes con imágenes - CSS en español">
  <meta property="twitter:description" content="Existe un sistema para crear bordes con imágenes, expandibles a partir de una imagen de base. En este artículo te explicamos como.">
  <meta property="twitter:image" content="https://lenguajecss.com/css/modelo-de-cajas/bordes-imagenes/9-slice.png">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Bordes con imágenes</a></h1><h2 class="typewriter">La técnica 9-slice para crear bordes con imágenes</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../propiedades-logicas-css/index.htm">Propiedades lógicas CSS</a>
    <a class="current" href="index.htm">Bordes con imágenes</a>
    <a href="../../colores/codigos-color/index.htm">Códigos de colores</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Una de las limitaciones que tenía CSS, es que, si en lugar de utilizar los bordes de los que disponemos en CSS (<em>sólidos, punteados, etc...</em>) quisieramos hacer algo un poco más complejo con imágenes, podría volverse una tarea muy complicada. Por esa razón, <strong>CSS3</strong> incorporó en su momento un sistema para crear bordes extensibles basados en una imagen de molde.</p>
<h3 id="la-técnica-9-slice" tabindex="-1"><a class="header-anchor" href="#la-técnica-9-slice">La técnica 9-slice</a></h3>
<p>Dicho sistema se denomina <a href="https://en.wikipedia.org/wiki/9-slice_scaling">9-slice</a> (<em>muy utilizado en videojuegos</em>) y se basa en delimitar una imagen trazando <strong>cuatro líneas</strong> (<em>en rojo</em>). Esto hará que la imagen quede dividida en 9 fragmentos, donde el fragmento central es descartado y el resto es utilizado de molde para los bordes de un elemento:</p>
<p><img src="9-slice.png" alt="Sistema 9-slice" width="900" height="484" loading="lazy"></p>
<p>De esta forma, los fragmentos <strong>1</strong>, <strong>3</strong>, <strong>7</strong> y <strong>9</strong> se utilizarán para las esquinas y los fragmentos <strong>2</strong>, <strong>4</strong>, <strong>6</strong> y <strong>8</strong> se utilizarán para los bordes laterales, pudiendo expandirlos si se requiere y considera necesario con alguna de las propiedades que veremos a continuación.</p>
<h3 id="propiedades-para-crear-bordes" tabindex="-1"><a class="header-anchor" href="#propiedades-para-crear-bordes">Propiedades para crear bordes</a></h3>
<p>Las propiedades que podemos utilizar para crear <strong>bordes con imágenes</strong> son las siguientes:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>border-image-width</code></td>
<td>Especifica el grosor de la imagen utilizada para el borde.</td>
</tr>
<tr>
<td><code>border-image-source</code></td>
<td>Imagen a utilizar para los bordes con imágenes mediante la técnica 9-slice.</td>
</tr>
<tr>
<td><code>border-image-slice</code></td>
<td>Distancia donde se hace el punto de corte en la imagen.</td>
</tr>
<tr>
<td><code>border-image-outset</code></td>
<td>Tamaño en el que el borde crece hacia fuera. Una especie de padding del borde.</td>
</tr>
</tbody>
</table>
<p>Estas propiedades pueden ser algo complicadas, por lo que vamos a utilizar la siguiente imagen expandible (<em>imagen de la izquierda</em>), que simula ser un antiguo carrete fotográfico, como borde con imagen. Las líneas rojas no forman parte de la imagen original, sino que se utilizan en este ejemplo para dejar claro cuáles serían los límites marcados con <code>border-image-slice</code>. Una vez hecho esto, conseguiremos el resultado de la imagen de la derecha, en el cuál podremos ampliar el texto del elemento lo que queramos, que se adaptará solo a su contenido:</p>
<p><img src="ejemplo-border-image.png" alt="Ejemplo con border-image en CSS" width="1001" height="473" loading="lazy"></p>
<p>Para ello, utilizaremos el siguiente código CSS, donde antes que nada, establecemos un ancho al elemento con <code>width</code> y un <code>border</code> básico para que, en el caso de navegadores que no soporten <code>border-image</code>, tenga al menos un borde básico y nos sirva también como base a lo que vamos a hacer a continuación:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.borde</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 42px solid black<span class="token punctuation">;</span>
  <span class="token property">border-image-width</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>
  <span class="token property">border-image-source</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>https://i.imgur.com/YC5PUl6.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>
  <span class="token property">border-image-slice</span><span class="token punctuation">:</span> 110<span class="token punctuation">;</span>
  <span class="token property">border-image-outset</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
  <span class="token property">border-image-repeat</span><span class="token punctuation">:</span> repeat<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Para establecer los límites y poder utilizar imágenes en los bordes, hemos hecho uso de varias de las propiedades CSS necesarias para los bordes con imágenes. Veamos una por una para ver como funcionan.</p>
<h4 id="la-propiedad-border-image-width" tabindex="-1"><a class="header-anchor" href="#la-propiedad-border-image-width">La propiedad <code>border-image-width</code></a></h4>
<p>La propiedad <code>border-image-width</code> indica el <strong>tamaño</strong> que tendrá el borde de la imagen. El tamaño puede ser indicado con unidades (<em>píxeles o porcentajes, por ejemplo</em>) o como un <badge-type class="number"></badge-type>, sin indicar ninguna unidad, lo que lo tomará como múltiplo del tamaño establecido en <code>border-width</code>.</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>border-image-width</code> <badge-type class="p1234"></badge-type></td>
<td><strong>1</strong> | <badge-type class="size"></badge-type> | <badge-type class="number"></badge-type> | auto</td>
</tr>
</tbody>
</table>
<p>En nuestro ejemplo, tanto indicarle un valor de <strong>1</strong> como dejarlo sin especificar, sería lo mismo que darle un tamaño de borde de de <code>42px</code>, pero por ejemplo, si indicamos <code>border-image-width: 2</code>, le estaremos indicando que use un tamaño de <code>84px</code>. Por otro lado, y al igual que vimos en el apartado de <code>margin</code>, se puede indicar 1, 2, 3 o 4 parámetros <badge-type class="p1234"></badge-type>.</p>
<blockquote>
<p><strong>Consejo:</strong> No olvides que hay que indicar también un <code>border-width</code> y un <code>border-style</code> para que el borde CSS esté definido y se pueda visualizar.</p>
</blockquote>
<h4 id="la-propiedad-border-image-source" tabindex="-1"><a class="header-anchor" href="#la-propiedad-border-image-source">La propiedad <code>border-image-source</code></a></h4>
<p>La propiedad <code>border-image-source</code> establece, mediante la función CSS <code>url()</code>, la imagen que vamos a utilizar para crear nuestro borde con imágenes. Para ello, indicaremos una imagen al igual que lo hacemos con la propiedad <code>background-image</code>:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>border-image-source</code></td>
<td><strong>none</strong> | <badge-type class="gradient"></badge-type> | url(<em>imagen.png</em>)</td>
</tr>
</tbody>
</table>
<blockquote>
<blockquote>
<p><strong>Truco</strong>: ¡Recuerda que como imagen de fondo puedes usar <a href="../../gradientes/linear-gradient/index.htm">gradientes de CSS</a>, ya que internamente se interpretan como imágenes!</p>
</blockquote>
</blockquote>
<h4 id="la-propiedad-border-image-slice" tabindex="-1"><a class="header-anchor" href="#la-propiedad-border-image-slice">La propiedad <code>border-image-slice</code></a></h4>
<p>La propiedad <code>border-image-slice</code> define el desplazamiento de las líneas divisorias de la imagen, o lo que es lo mismo, el tamaño de los bordes. Por defecto, el valor es de <strong>100%</strong> (<em>tamaño de ancho completo de la imagen</em>), pero también podemos usar números sin unidad <badge-type class="number"></badge-type>, que simbolizan píxeles de recorte. Se pueden especificar 1, 2, 3 ó 4 parámetros <badge-type class="p1234"></badge-type>.</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>border-image-slice</code> <badge-type class="p1234"></badge-type></td>
<td><strong>100%</strong> | <badge-type class="size"></badge-type> | <badge-type class="number"></badge-type> <code>fill</code></td>
</tr>
</tbody>
</table>
<p>Por otro lado, añadiendo la palabra clave opcional <code>fill</code>, indicaremos que queremos rellenar el elemento con el fondo del fragmento <strong>5</strong>, que por defecto es descartado. Útil en casos que quieras aprovechar el fondo.</p>
<p>En nuestro caso, nos podría valer tanto con <code>110</code> (<em>110 píxeles de recorte</em>) como con <code>23%</code>, ya que es más o menos la cantidad apropiada para establecer el límite tanto de ancho como de alto.</p>
<h4 id="la-propiedad-border-image-outset" tabindex="-1"><a class="header-anchor" href="#la-propiedad-border-image-outset">La propiedad <code>border-image-outset</code></a></h4>
<p>La propiedad <code>border-image-outset</code> establece el <strong>factor de crecimiento</strong> (<em>hacia fuera</em>) de la imagen. Muy útil para compensar la imagen si se extiende hasta el contenido. Usar con cuidado, ya que puede desplazar el contenido.</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>border-image-outset</code> <badge-type class="p1234"></badge-type></td>
<td><strong>0</strong> | <badge-type class="size"></badge-type></td>
</tr>
</tbody>
</table>
<p>Por defecto, esta propiedad no tiene desplazamiento, o lo que es lo mismo, el valor por defecto es <strong>0</strong>.</p>
<h4 id="la-propiedad-border-image-repeat" tabindex="-1"><a class="header-anchor" href="#la-propiedad-border-image-repeat">La propiedad <code>border-image-repeat</code></a></h4>
<p>Habremos comprobado que en algunas ocasiones, el modo en que se repite la imagen de borde no es la apropiada, o al menos, no es la que más se adapta a nuestro caso específico. Este comportamiento se puede variar mediante la propiedad <code>border-image-repeat</code>:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
<th>Significado</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>border-image-repeat</code> <badge-type class="p12"></badge-type></td>
<td>[<em>repetición en X e Y</em>]</td>
<td>1 parámetro. Comportamiento de repetición en ambos ejes.</td>
</tr>
<tr>
<td></td>
<td>[<em>rep. en X</em>] [<em>rep. en Y</em>]</td>
<td>2 parámetros. Comportamiento de repetición por separado.</td>
</tr>
</tbody>
</table>
<p>Con dicha propiedad se establece como deben comportarse los fragmentos del borde y el tipo de repetición que deben efectuar. Se puede usar la modalidad de un parámetro en la que se aplica a todos los bordes, o la modalidad de dos parámetros donde estableces diferente comportamiento para los bordes horizontales y verticales.</p>
<p>Esta propiedad puede tomar los siguientes valores:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Significado</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>stretch</strong></td>
<td>Los bordes se <strong>estiran</strong> hasta rellenar el área. Es el valor por defecto.</td>
</tr>
<tr>
<td><em>repeat</em></td>
<td>Los bordes se <strong>repiten</strong> hasta rellenar el área.</td>
</tr>
<tr>
<td><em>round</em></td>
<td>Igual que <em>repeat</em>, pero <strong>estira</strong> los fragmentos individualmente hasta rellenar el área completa.</td>
</tr>
<tr>
<td><em>space</em></td>
<td>Igual que <em>repeat</em>, pero <strong>añade espacios</strong> hasta rellenar el área completa.</td>
</tr>
</tbody>
</table>
<p>Para verlo más claramente, echemos un vistazo a esta representación visual del comportamiento de cada uno:</p>
<p><img src="border-image-repeat.png" alt="Border-image-repeat values" width="1001" height="501" loading="lazy"></p>
<p>Es importante recalcar los dos últimos valores (<em>round y space</em>) actúan igual que <strong>repeat</strong>, pero con un comportamiento ligeramente diferente que nos puede interesar en el caso de que la zona repetida quede descompensada.</p>
<p>Utilizando la imagen y código CSS anterior, obtendríamos un resultado similar a este, que se adaptaría sólo al contenido que escribamos dentro del elemento HTML con clase <code>borde</code> :</p>
<p><img src="border-image-css.png" alt="CSS: Border-image en acción" width="900" height="357" loading="lazy"></p>
<h3 id="atajo-bordes-con-imágenes" tabindex="-1"><a class="header-anchor" href="#atajo-bordes-con-imágenes">Atajo: Bordes con imágenes</a></h3>
<p>Como suele ser costumbre, este tipo de propiedades tienen una propiedad para ahorrar espacio y escribirlo todo de una sola vez. En este caso, la sintaxis es la siguiente:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token comment">/* border-image: &lt;source> &lt;slice> &lt;width> &lt;outset> &lt;repeat> */</span>

  <span class="token property">border-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>https://i.imgur.com/YC5PUl6.png<span class="token punctuation">)</span></span> 23% 1 0 round<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../propiedades-logicas-css/index.htm" title="Propiedades lógicas CSS">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Propiedades lógicas CSS</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../../colores/codigos-color/index.htm" title="Códigos de colores">
  <div>
    <span>Códigos de colores</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/hiRIjRf2QD8" title="FUNCIONES de TIEMPO en CSS: ¡Controla el ritmo de tus animaciones!">
  <img loading="lazy" src="../../../vi/hiRIjRf2QD8/mqdefault.jpg" alt="FUNCIONES de TIEMPO en CSS: ¡Controla el ritmo de tus animaciones!">
</a><a href="https://youtu.be/8Jh2K3tq5n0" title="Tutorial para aprender Animaciones CSS">
  <img loading="lazy" src="../../../vi/8Jh2K3tq5n0/mqdefault.jpg" alt="Tutorial para aprender Animaciones CSS">
</a><a href="https://youtu.be/wIGAyJGx2kc" title="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
  <img loading="lazy" src="../../../vi/wIGAyJGx2kc/mqdefault.jpg" alt="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
</a><a href="https://youtu.be/mNTj6KfYeXc" title="Cómo crear GRADIENTES CÓNICOS en CSS">
  <img loading="lazy" src="../../../vi/mNTj6KfYeXc/mqdefault.jpg" alt="Cómo crear GRADIENTES CÓNICOS en CSS">
</a><a href="https://youtu.be/I-EFAmX-vhE" title="Flex CSS: Alinear, centrar y reordenar elementos">
  <img loading="lazy" src="../../../vi/I-EFAmX-vhE/mqdefault.jpg" alt="Flex CSS: Alinear, centrar y reordenar elementos">
</a><a href="https://youtu.be/8tTMYgHBQPI" title="Analizando las preguntas del STATE OF CSS 2022">
  <img loading="lazy" src="../../../vi/8tTMYgHBQPI/mqdefault.jpg" alt="Analizando las preguntas del STATE OF CSS 2022">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
