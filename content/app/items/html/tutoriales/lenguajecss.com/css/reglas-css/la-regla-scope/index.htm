<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>La regla @scope - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Mediante la regla @scope podemos crear estilos limitando su ámbito, es decir, delimitando la profundidad HTML donde afecta.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="La regla @scope - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/reglas-css/la-regla-scope/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Mediante la regla @scope podemos crear estilos limitando su ámbito, es decir, delimitando la profundidad HTML donde afecta.">
  <meta property="og:url" content="https://lenguajecss.com/css/reglas-css/la-regla-scope/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/reglas-css/la-regla-scope/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="La regla @scope - CSS en español">
  <meta property="twitter:description" content="Mediante la regla @scope podemos crear estilos limitando su ámbito, es decir, delimitando la profundidad HTML donde afecta.">
  <meta property="twitter:image" content="https://lenguajecss.com/css/reglas-css/la-regla-scope/large-summary.jpg">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">La regla @scope</a></h1><h2 class="typewriter">Estilos CSS con ambito del DOM limitado</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../la-regla-supports/index.htm">La regla @supports</a>
    <a class="current" href="index.htm">La regla @scope</a>
    <a href="../la-regla-property/index.htm">La regla @property</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <blockquote>
<blockquote>
<blockquote>
<p><strong>IMPORTANTE</strong>: Esta característica es experimental. De momento, puedes probarla y utilizarla en <strong>Canary Chrome 117+</strong> mientras el resto de navegadores le dan soporte.</p>
</blockquote>
</blockquote>
</blockquote>
<p>Históricamente, uno de los principales problemas para un programador respecto a CSS, es el tema de la <strong>cascada</strong> y la <strong>especificidad</strong>. Cuando desarrollamos con CSS y estamos creando código CSS a pequeña escala no suelen haber demasiados problemas. Sin embargo, cuando el código CSS crece, <strong>todo comienza a ser diferente</strong>.</p>
<h3 id="por-qué-usar-scope" tabindex="-1"><a class="header-anchor" href="#por-qué-usar-scope">¿Por qué usar <code>@scope</code>?</a></h3>
<p>Antes de explicar como funciona <code>@scope</code>, convendría entender porque (<em>o para qué</em>) lo necesitamos. El caso más claro es aquel donde estamos creando estilos CSS en una parte concreta de nuestra página. Todo va maravillosamente bien y funciona correctamente.</p>
<p>Tenemos el siguiente fragmento de HTML:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Nuestra idea es darle estilo al elemento con clase <code>.parent</code>, y a los elementos con clase <code>.element</code> que estén en su interior.</p>
<p>En principio pensamos que no vamos a tener más elementos <code>.element</code> en el interior de un elemento con clase <code>.parent</code>, por lo que no vemos mayor problema y continuamos con nuestra tarea. El problema es que en este punto no solemos tener una visión global de lo que estamos haciendo, y estamos metidos en resolver un problema local que suele resolverse bien. Establecemos los siguientes estilos CSS:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.parent</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.parent .element</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> indigo<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> gold<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>A medida que nuestro código HTML y CSS crece y pasa el tiempo, se necesitan hacer cambios, modificar y añadir nuevos elementos HTML y nuevo código CSS. La naturaleza de CSS es global, y cualquier cambio que hagamos repercute en todo el documento, salvo que lo tengas bien acotado.</p>
<p>Podría ocurrirnos que, posteriormente, comenzamos a crear otra zona de la página y utilizamos mismos nombres de clase. Como efecto secundario, el CSS que creamos va a modificar lo anterior, o viceversa, porque coinciden sus nombres o no lo hemos delimitado bien (<em>muchas veces es complejo</em>).</p>
<p>Para solucionar esto, se han ideado multitud de sistemas:</p>
<ul>
<li>Añadir un <code>!important</code> (<em>la más usada, y casi siempre, la peor solución</em>)</li>
<li>Reorganizar los selectores y hacerlos más complejos (<em>más espeCSSíficos</em>)</li>
<li>Reescribir o cambiar los nombres de los selectores para que no coincidan.</li>
<li>Utilizar nomenclaturas o metodologías para evitar coincidencias de clases CSS (<em>BEM, CUBECSS, etc...</em>)</li>
<li>Usar herramientas/librerías que renombran para evitar colisiones (<em>CSS Modules, CSS-in-JS...</em>)</li>
<li>Utilizar <a href="https://lenguajejs.com/webcomponents/shadow-dom/que-es-shadow-dom/">Shadow DOM</a> para impedir acceso al CSS del elemento desde dentro o fuera.</li>
</ul>
<blockquote>
<p>Sin embargo, todas tienen su complejidad, ventajas y desventajas. Ahora, con la regla <code>@scope</code> tendremos un mecanismo más, pero esta vez muy simple, con CSS nativo, sin recurrir a complejas herramientas, metodologías o tecnologías.</p>
</blockquote>
<p>Recuerda que la regla <code>@scope</code> aún está en fase experimental y aún debe ser soportada por otros navegadores:</p>
<p><caniuse-support title="Scoped Styles: the @scope rule" feature="css-cascade-scope" edge="✗/n" firefox="✗/n" chrome="118/y" safari="✗/n" opera="✗/n" ios_saf="✗/n" and_chr="✗/n" and_ff="✗/n">
</caniuse-support></p>
<h3 id="la-regla-scope" tabindex="-1"><a class="header-anchor" href="#la-regla-scope">La regla <code>@scope</code> <badge-type class="experimental"></badge-type></a></h3>
<p>La regla <code>@scope</code> es muy sencilla de utilizar. Por defecto, cuando escribimos CSS, el navegador interpreta los estilos para todo el documento. La regla <code>@scope</code> nos da un sistema para delimitar el ámbito en el que afectan los estilos, de modo que podemos marcar un principio y un final de ámbito en nuestro DOM, es decir, en los niveles de profundidad de nuestras etiquetas HTML.</p>
<p><img src="regla-scope-css.png" alt="Regla @scope CSS" width="1001" height="417" loading="lazy"></p>
<p>La estructura de esta regla es la siguiente:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@scope</span> <span class="token punctuation">(</span>límite inicial<span class="token punctuation">)</span> to <span class="token punctuation">(</span>límite final<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* Estilos CSS */</span>
<span class="token punctuation">}</span></code></pre>
<ul>
<li>La regla <code>@scope</code> define que el CSS que contiene actuará en un ámbito limitado.</li>
<li>El límite inicial (<em>opcional</em>) define desde donde se aplicarán los estilos.</li>
<li>El límite final (<em>opcional</em>) define hasta donde (<em>excluído</em>) se aplicarán los estilos.</li>
</ul>
<h4 id="límite-inicial-de-scope" tabindex="-1"><a class="header-anchor" href="#límite-inicial-de-scope">Límite inicial de <code>@scope</code></a></h4>
<p>Veamos un fragmento de código utilizando la regla <code>@scope</code>. Entre paréntesis delimitaremos el ámbito inicial para el que se van a aplicar los estilos CSS:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@scope</span> <span class="token punctuation">(</span>.parent<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.element</span> <span class="token punctuation">{</span> <span class="token property">background</span><span class="token punctuation">:</span> orangered<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>Este código aplicará los estilos a cualquier elemento con clase <code>.element</code> que esté en el interior de un elemento con clase <code>.parent</code>. Vamos, prácticamente igual que la siguiente <strong>opción 1</strong>, o incluso <strong>la opción 2</strong>, que tiene menor especificidad por el uso del <a href="../../selectores/combinadores-logicos/index.htm#el-combinador-where">combinador funcional <code>:where()</code></a>:</p>
<pre class="language-css"><code class="language-css"><span class="token comment">/* Opción 1 */</span>
<span class="token selector">.parent .element</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> orangered<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* Opción 2: Menos específico */</span>
<span class="token selector">:where(.parent) .element</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> orangered<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Pero... ¿entonces? Si esto ya se podía hacer hasta ahora... ¿Dónde es verdaderamente útil y novedosa la regla <code>@scope</code>? Pues por ejemplo, cuando delimitamos también el final del ámbito.</p>
<h4 id="límite-final-con-to" tabindex="-1"><a class="header-anchor" href="#límite-final-con-to">Límite final con <code>to</code></a></h4>
<p>Observa el siguiente caso, donde queremos delimitar el inicio donde se aplicarán unos estilos y <strong>también el final</strong>. Para ello, compliquemos un poco más nuestro HTML anterior.</p>
<p>Observa que ahora tendremos 4 elementos <code>.element</code>:</p>
<ul>
<li>El primer <code>.element</code> está dentro de <code>.grandparent</code> pero fuera de los demás.</li>
<li>El segundo <code>.element</code> está dentro de <code>.grandparent</code> y <code>.parent</code>.</li>
<li>El tercer <code>.element</code> está dentro de <code>.grandparent</code>, <code>.parent</code> y <code>.child</code>.</li>
<li>El cuarto <code>.element</code> fuera fuera de todos.</li>
</ul>
<p>Ahora, vamos a escribir un nuevo fragmento de código CSS con ámbito limitado. Observa que en este caso indicamos que el ámbito de los estilos va a aplicarse desde el elemento con clase <code>.grandparent</code> hasta el elemento con clase <code>.child</code> (<em>excluído</em>):</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@scope</span> <span class="token punctuation">(</span>.grandparent<span class="token punctuation">)</span> to <span class="token punctuation">(</span>.child<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.element</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> orangered<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grandparent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element GrandParent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element Parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element Child<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element outside<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Si realizas este proceso, se dará estilo al primer y segundo <code>.element</code>, pero no al tercero ni al cuarto. Esto ocurre porque se hace mediante <strong>niveles de profundidad</strong> de los elementos HTML.</p>
<ul>
<li>Al <strong>cuarto</strong> <code>.element</code> no se le da estilo porque está fuera de <code>.grandparent</code>.</li>
<li>Al <strong>tercer</strong> <code>.element</code> no se le da estilo porque está en <strong>nivel 4</strong>, nosotros pedimos «desde <code>.grandparent</code>» (<em>nivel 1</em>) hasta <code>.child</code>» (<em>nivel 3</em>).</li>
</ul>
<blockquote>
<p>Si reescribieramos el selector de límite como <code>@scope (.grandparent) to (.child &gt; .element &gt; *)</code> entonces si estaríamos obteniendo el tercer elemento <code>.element</code>, porque estamos seleccionando hasta el contenido del elemento <code>.element</code> dentro de <code>.child</code>.</p>
</blockquote>
<h4 id="límite-final-inexistente" tabindex="-1"><a class="header-anchor" href="#límite-final-inexistente">Límite final inexistente</a></h4>
<p>Podría darse la circunstancia de que definamos un límite de ámbito final que realmente no existe en el HTML, como por ejemplo el siguiente:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@scope</span> <span class="token punctuation">(</span>.grandparent<span class="token punctuation">)</span> to <span class="token punctuation">(</span>.grandson<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.element</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> orangered<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>Como el elemento con clase <code>.grandson</code> no existe, el navegador interpretará la regla scope como si no tuviera límite final, es decir, como <code>@scope (.grandparent)</code>. De esta forma, estaría seleccionando todos los <code>.element</code> que se encuentren en el interior de un <code>.grandparent</code>.</p>
<h4 id="múltiples-límites" tabindex="-1"><a class="header-anchor" href="#múltiples-límites">Múltiples límites</a></h4>
<p>Otro detalle interesante sobre la regla <code>@scope</code> es que podemos utilizar múltiples valores, de forma similar al <a href="../../selectores/combinadores-logicos/index.htm#el-combinador-is">combinador lógico <code>:is()</code></a>. Observa el siguiente ejemplo:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@scope</span> <span class="token punctuation">(</span>.post-container<span class="token punctuation">,</span> .comments-container<span class="token punctuation">)</span> to <span class="token punctuation">(</span>.items<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.element</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> indigo<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 1 (Selected)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 2 (Not selected)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 3 (Not selected)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 1 (Not Selected)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comments-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 1 (Selected)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 2 (Not selected)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element 3 (Not selected)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>En este ejemplo, dentro de los selectores de los paréntesis indicamos múltiples valores, por lo que podemos establecer selecciones múltiples y no atarnos a elecciones más sencillas. Esto puede resultar especialmente útil de cara a la mantenibilidad.</p>
<h3 id="la-regla-scope-en-línea" tabindex="-1"><a class="header-anchor" href="#la-regla-scope-en-línea">La regla <code>@scope</code> en línea</a></h3>
<p>Un detalle interesantísimo sobre la regla <code>@scope</code> es que puede trabajar a nivel de niveles de profundidad de los elementos de HTML, dependiendo donde estén declarados los estilos mediante una etiqueta <code>&lt;style&gt;</code> en el DOM.</p>
<p>Observa el siguiente ejemplo, donde se declara la etiqueta <code>&lt;style&gt;</code> en el interior de un <code>&lt;div&gt;</code> con clase <code>.parent</code>. Cómo no tenemos definido el límite del ámbito en la regla <code>@scope</code>, el ámbito se define por donde está declarado, por lo que estos estilos estarán limitados a la etiqueta <code>&lt;div class=&quot;parent&quot;&gt;</code>:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
    <span class="token atrule"><span class="token rule">@scope</span></span> <span class="token punctuation">{</span>
      <span class="token selector">.item</span> <span class="token punctuation">{</span>
        <span class="token property">background</span><span class="token punctuation">:</span> orangered<span class="token punctuation">;</span>
        <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 0.2rem<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Items inside<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Items inside<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Items outside<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Items outside<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Repasemos varios detalles clave aquí:</p>
<ul>
<li>Los 2 primeros elementos <code>.item</code> están dentro de <code>.parent</code>.</li>
<li>Los 2 últimos elementos <code>.item</code> están fuera de <code>.parent</code>.</li>
<li>El <code>@scope</code> se declara dentro de <code>.parent</code>, por lo que sólo afecta a él.</li>
</ul>
<p>Los elementos a los que se le aplica estilo son <strong>sólo los dos primeros</strong> <code>.item</code>, ya que están dentro de <code>.parent</code>, que es donde actúa <code>@scope</code>.</p>
<h3 id="la-pseudoclase-scope" tabindex="-1"><a class="header-anchor" href="#la-pseudoclase-scope">La pseudoclase <code>:scope</code></a></h3>
<p>La pseudoclase <code>:scope</code> se puede utilizar en las reglas <code>@scope</code> para hacer referencia al ámbito donde nos encontramos. Por ejemplo, observa que en el siguiente ejemplo, el ámbito seleccionado es desde <code>.grandparent</code> hasta <code>.child</code> (<em>excluído</em>), por lo tanto, al indicar la pseudoclase <code>:scope</code> estamos haciendo referencia al ámbito inicial, es decir, a <code>grandparent</code>:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@scope</span> <span class="token punctuation">(</span>.grandparent<span class="token punctuation">)</span> to <span class="token punctuation">(</span>.child<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">:scope > .element</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> orangered<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>En este caso, el navegador aplicaría los estilos únicamente al <code>.element</code> del interior de <code>.grandparent</code>. Sin embargo, si le quitamos el <code>&gt;</code>, observa que aplicaría estilos al <code>.element</code> del <code>.grandparent</code> y del <code>.parent</code>, ya que ambos están dentro de <code>.grandparent</code>. El de <code>.child</code> se obvia, porque recuerda que el límite final está excluído.</p>
<blockquote>
<p>Esta característica podría ser realmente útil para simplificar código cuando tenemos múltiples valores en los límites del scope.</p>
</blockquote>
<p>Ten en cuenta que también podríamos seleccionar elementos según sus ancestros:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@scope</span> <span class="token punctuation">(</span>.grandparent<span class="token punctuation">)</span> to <span class="token punctuation">(</span>.child<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.dark :scope > .element</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> #222<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>En este caso, seleccionamos los <code>.element</code> que estén dentro de un <code>.grandparent</code> que tenga algún padre con la clase <code>.dark</code>. Podríamos también utilizar el carácter <code>&amp;</code> del <a href="../../calidad-de-codigo/css-nesting/index.htm">Nesting CSS</a> en lugar del <code>:scope</code>, ya que funciona de una forma muy similar.</p>
<h3 id="bloques-estilo-sass-bem" tabindex="-1"><a class="header-anchor" href="#bloques-estilo-sass-bem">Bloques estilo Sass-BEM</a></h3>
<p>Una característica muy interesante que brinda <code>@scope</code> es la posibilidad de crear bloques de «componentes CSS» al estilo de como se suele hacer con <strong>Sass</strong>, pero de forma nativa. Observemos el siguiente código <strong>Sass</strong>, donde aprovechamos nomenclatura <strong>BEM</strong> para crear nombres de clase que eviten especificidades altas o nombres de clase potencialmente colisionables:</p>
<pre class="language-scss"><code class="language-scss"><span class="token selector">.post-container </span><span class="token punctuation">{</span>
  <span class="token selector"><span class="token parent important">&amp;</span>__title </span><span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 3rem<span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token selector"><span class="token parent important">&amp;</span>__subtitle </span><span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token selector">.content-container </span><span class="token punctuation">{</span>
  <span class="token selector"><span class="token parent important">&amp;</span>__code </span><span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> #848848<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-container__title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Título<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-container__subtitle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Subtítulo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Utilizando la regla <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content-container__code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@scope<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> en CSS.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Esto, usado en Sass, permite producir un código CSS donde los nombres de clases anidados que empiecen por <code>__</code>, se concatenan (<em>atención al nombre de clases</em>):</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.post-container__title</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 3rem<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">.post-container__subtitle</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">.content-container__code</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> #848848<span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre>
<p>Ahora, en lugar de hacer cosas como estas, podríamos aprovechar la regla <code>@scope</code> (<em>incluso usando los límites superiores si queremos excluir alguna parte</em>) para obtener un código nativo muy fácil de leer, modificar, mantener y delimitar:</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@scope</span> <span class="token punctuation">(</span>.post-container<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.title</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 3rem<span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token selector">.subtitle</span> <span class="token punctuation">{</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@scope</span> <span class="token punctuation">(</span>.content-container<span class="token punctuation">)</span> to <span class="token punctuation">(</span>.items<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.code</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> #848848<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Título<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>subtitle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Subtítulo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Utilizando la regla <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@scope<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> en CSS.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../la-regla-supports/index.htm" title="La regla @supports">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>La regla @supports</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../la-regla-property/index.htm" title="La regla @property">
  <div>
    <span>La regla @property</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/9jea2qDdw7Y" title="Cómo crear SOMBRAS IDÉNTICAS (drop-shadow)">
  <img loading="lazy" src="../../../vi/9jea2qDdw7Y/mqdefault.jpg" alt="Cómo crear SOMBRAS IDÉNTICAS (drop-shadow)">
</a><a href="https://youtu.be/g5QVe65vPd4" title="Grid CSS: Celdas irregulares">
  <img loading="lazy" src="../../../vi/g5QVe65vPd4/mqdefault.jpg" alt="Grid CSS: Celdas irregulares">
</a><a href="https://youtu.be/lM4eufOnKVA" title="Especificidad CSS: ¿Cómo evitar los !important?">
  <img loading="lazy" src="../../../vi/lM4eufOnKVA/mqdefault.jpg" alt="Especificidad CSS: ¿Cómo evitar los !important?">
</a><a href="https://youtu.be/I-EFAmX-vhE" title="Flex CSS: Alinear, centrar y reordenar elementos">
  <img loading="lazy" src="../../../vi/I-EFAmX-vhE/mqdefault.jpg" alt="Flex CSS: Alinear, centrar y reordenar elementos">
</a><a href="https://youtu.be/s_16bzmnGoY" title="Grid CSS: Líneas con nombre">
  <img loading="lazy" src="../../../vi/s_16bzmnGoY/mqdefault.jpg" alt="Grid CSS: Líneas con nombre">
</a><a href="https://youtu.be/wIGAyJGx2kc" title="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
  <img loading="lazy" src="../../../vi/wIGAyJGx2kc/mqdefault.jpg" alt="CSS Cards: Baraja de cartas diseñada sólo con HTML y CSS">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
