<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Multi-columnas CSS - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Las multicolumnas son una forma de dividir el contenido de un elemento en el número de columnas que desees, distribuyendo en grupos el contenido. ">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Multi-columnas CSS - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/maquetacion-y-colocacion/multi-column/column-count.png">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Las multicolumnas son una forma de dividir el contenido de un elemento en el número de columnas que desees, distribuyendo en grupos el contenido. ">
  <meta property="og:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/multi-column/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/multi-column/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Multi-columnas CSS - CSS en español">
  <meta property="twitter:description" content="Las multicolumnas son una forma de dividir el contenido de un elemento en el número de columnas que desees, distribuyendo en grupos el contenido. ">
  <meta property="twitter:image" content="https://lenguajecss.com/css/maquetacion-y-colocacion/multi-column/column-count.png">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Multi-columnas CSS</a></h1><h2 class="typewriter">Esquema de varias columnas en CSS</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../grid-css-lineas-nombradas/index.htm">Grid CSS: Líneas con nombre</a>
    <a class="current" href="index.htm">Multi-columnas CSS</a>
    <a href="../../interacciones/contornos/index.htm">Contornos</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>El esquema de <strong>layouts en columnas</strong> es un antiguo sistema de maquetación de CSS en el que se puede dividir un texto o contenido en un número de columnas concreto, haciendo la tarea de división en columnas de forma automática por parte del navegador.</p>
<h3 id="creando-multicolumnas-css" tabindex="-1"><a class="header-anchor" href="#creando-multicolumnas-css">Creando multicolumnas CSS</a></h3>
<p>Para entender bien este sistema de maquetación, vamos a traer a nuestra mente un ejemplo donde se ve muy claro: los antiguos <strong>periódicos</strong> o <strong>panfletos de prensa</strong> escrita. Estos medios de prensa utilizaban un esquema de varias columnas para separar separar la información, aprovechar el espacio y crear múltiples columnas con contenido.</p>
<p>Justo esta idea es la que trae el sistema de columnas CSS a la web, utilizando principalmente las propiedades <code>column-count</code> y <code>column-width</code> que vemos en la siguiente tabla:</p>
<table class="last-shorthand">
<thead>
<tr>
<th>Propiedad</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>column-count</code></td>
<td>Indica el número de columnas que queremos establecer. Por defecto, <code>auto</code>.</td>
</tr>
<tr>
<td><code>column-width</code></td>
<td>Indica el tamaño ideal de cada columna. Por defecto, <code>auto</code>.</td>
</tr>
<tr>
<td><code>columns</code></td>
<td>Propiedad de atajo de las dos anteriores: <code>count</code> y <code>width</code>.</td>
</tr>
</tbody>
</table>
<p>Así pues, partamos del siguiente ejemplo. Un contenedor con 3 párrafos y un titular:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    Hola a todos. Esto es un pequeño ejemplo donde podremos observar como funciona
    el sistema de multicolumnas de CSS. Este contenido se basa en un párrafo con
    información que será separado en varias columnas.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Más información<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    A lo largo del artículo veremos sus diferentes características y propiedades,
    y como podemos utilizarlo.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    En los streams de <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>ManzDev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span> puedes echar un vistazo a estas y
    otras cosas relacionadas con HTML, CSS y Javascript.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>A este contenido, vamos a añadirle el siguiente CSS:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>
  <span class="token property">column-count</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>
  <span class="token property">column-width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Comprobaremos que a pesar de haber indicado <code>3 columnas</code>, al haberle dado un tamaño ideal de <code>300px</code> a cada columna, que no cabrá en los <code>800px</code> del contenedor, establece <code>2 columnas</code>. Si reducimos el <code>column-width</code> a <code>200px</code>, veremos que si crea las <code>3 columnas</code>.</p>
<p><img src="column-count.png" alt="La propiedad column-count y column-width" width="1013" height="478" loading="lazy"></p>
<p>De igual forma, si establecemos <code>column-count</code> de <code>4 columnas</code>, no veremos las cuatro columnas si no bajamos el <code>column-width</code> a al menos <code>185px</code>.</p>
<h4 id="la-propiedad-de-atajo-columns" tabindex="-1"><a class="header-anchor" href="#la-propiedad-de-atajo-columns">La propiedad de atajo <code>columns</code></a></h4>
<p>Mediante la propiedad <code>columns</code> podemos establecer las dos propiedades anteriores de una sola vez. El siguiente fragmento de código sería equivalente al ejemplo anterior:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>
  <span class="token property">columns</span><span class="token punctuation">:</span> 3 300px<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h3 id="separación-de-columnas" tabindex="-1"><a class="header-anchor" href="#separación-de-columnas">Separación de columnas</a></h3>
<p>Retomando el ejemplo anterior, vamos ahora a intentar establecer un espacio entre las columnas. Para ello, tenemos a nuestra disposición la propiedad <code>column-gap</code>, que funciona de forma muy parecida a <code>flex</code> o <code>grid</code>. Con ella establecemos unos «huecos» entre columnas.</p>
<p>Pero a parte de esta propiedad tenemos algunas más con el prefijo <code>column-rule</code>:</p>
<table class="last-shorthand">
<thead>
<tr>
<th>Propiedad</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>column-gap</code></td>
<td>Establece un hueco o espacio entre columnas con el tamaño indicado.</td>
</tr>
<tr>
<td><code>column-rule-width</code></td>
<td>Establece el tamaño de la línea divisoria entre columnas.</td>
</tr>
<tr>
<td><code>column-rule-style</code></td>
<td>Establece el estilo de la línea divisoria entre columnas.</td>
</tr>
<tr>
<td><code>column-rule-color</code></td>
<td>Establece el grosor de la línea divisoria entre columnas.</td>
</tr>
<tr>
<td><code>column-rule</code></td>
<td>Propiedad de atajo de las tres anteriores.</td>
</tr>
</tbody>
</table>
<p>Las <strong>reglas de columnas</strong> son unas líneas divisorias que podemos establecer entre columnas para que se vea más claramente la división creada. Funciona de forma muy similar a los <a href="../../modelo-de-cajas/bordes/index.htm">bordes CSS</a>, ya que también podemos establecer color, estilo y grosor, incluso con su propiedad <code>column-rule</code>de atajo.</p>
<p>En el caso de indicar <code>column-rule</code> y <code>column-gap</code> juntas, observa que simplemente se colapsan en el mismo espacio, por lo que es ideal para añadir una separación si con la regla no es suficiente:</p>
<p><img src="column-gap.png" alt="La propiedad column-gap y column-rule" width="1013" height="478" loading="lazy"></p>
<h3 id="distribución-entre-columnas" tabindex="-1"><a class="header-anchor" href="#distribución-entre-columnas">Distribución entre columnas</a></h3>
<p>Tenemos algunas propiedades más para distribuir el texto entre columnas con diferentes matices. Las propiedades son las siguientes:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>column-span</code></td>
<td>Indica si debe ocupar sólo una columna o expandirse por todas. Por defecto, <code>none</code>.</td>
</tr>
<tr>
<td><code>column-fill</code></td>
<td>Balancea el texto entre las columnas o rellena hasta que se agota. Por defecto, <code>balance</code>.</td>
</tr>
</tbody>
</table>
<p>La propiedad <code>column-span</code> es muy interesante. Esta propiedad, puede indicarse a elementos hijos como, por ejemplo, titulares, para indicar si deben ocupar sólo su espacio dentro de la columna que le toque, o si debe extenderse a lo largo de todas las columnas.</p>
<p>Observa que en nuestro ejemplo anterior hay un <code>&lt;h2&gt;</code>. Vamos a cambiarle el estilo y a indicarle que queremos que se entienda por todas las columnas:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container h2</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> steelblue<span class="token punctuation">;</span>
  <span class="token property">column-span</span><span class="token punctuation">:</span> all<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Con la propiedad <code>column-span</code> establecida a <code>all</code>, en lugar de que el <code>&lt;h2&gt;</code> ocupe sólo su columna, se establecerá que se extienda por encima, a lo largo de todas las columnas.</p>
<p>Por otro lado, la propiedad <code>column-fill</code> nos permite balancear y distribuir el texto de forma equivalente entre las diferentes columnas. Se aplica al padre y se puede indicar el valor <code>balance</code> (<em>en algunos casos sólo balancea la última columna</em>) o <code>balance-all</code> (<em>balancea siempre todas las columnas</em>). Sin embargo, también podemos indicar el valor <code>auto</code>, que no balancea, y distribuye el texto desde la primera columna hasta que se agote:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>
  <span class="token property">column-fill</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>En este ejemplo, fijamos el tamaño de alto del contenedor para forzar a que podamos ver los resultados, y le aplicamos el valor <code>column-fill</code> a <code>auto</code>. Comprueba la diferencia de este valor y los valores <code>balance</code> y <code>balance-all</code> (<em>casi siempre suelen ser los mismos</em>).</p>
<h4 id="fragmentación-entre-columnas" tabindex="-1"><a class="header-anchor" href="#fragmentación-entre-columnas">Fragmentación entre columnas</a></h4>
<p>Puede ocurrir que al tener que establecer en varias columnas un contenido que a priori es muy extenso, el navegador tendrá que determinar en que parte «rompe» las columnas. Esto no siempre puede que resulte de la forma apropiada, por lo que tenemos las siguientes propiedades:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>break-inside</code></td>
<td>Indica si saltará a la siguiente columna si un elemento se rompe en mitad de columna.</td>
</tr>
<tr>
<td><code>break-before</code></td>
<td>Indica como comportarse si se rompe antes del corte de columna.</td>
</tr>
<tr>
<td><code>break-after</code></td>
<td>Indica como comportarse si se rompe después del corte de columna.</td>
</tr>
</tbody>
</table>
<p>Si quieres saber más sobre este tema, visita el post sobre <a href="../../responsive-web-design/medios-paginados/index.htm">medios paginados</a>, donde hablamos de estas propiedades para medios impresos, pero que se comportan exactamente igual en multicolumnas.</p>
<blockquote>
<p>Este sistema de <strong>multicolumnas</strong>, a pesar de ser bastante antiguo (<em>algunos navegadores lo soportan desde 2006-2008</em>), nunca fue demasiado conocido y extendido debido a su falta de soporte completo.</p>
</blockquote>
<p>Actualmente, está bien soportado en navegadores, sin embargo, algunas características o propiedades concretas siguen sin estar implementadas en determinados navegadores:</p>
<p><caniuse-support title="CSS3 Multiple column layout" feature="multicolumn" edge="12/d" firefox="2/a" chrome="4/a" safari="10/y" opera="11.1/d" ios_saf="10.0-10.2/y" and_chr="116/a" and_ff="116/a">
</caniuse-support></p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../grid-css-lineas-nombradas/index.htm" title="Grid CSS: Líneas con nombre">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Grid CSS: Líneas con nombre</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../../interacciones/contornos/index.htm" title="Contornos">
  <div>
    <span>Contornos</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/lM4eufOnKVA" title="Especificidad CSS: ¿Cómo evitar los !important?">
  <img loading="lazy" src="../../../vi/lM4eufOnKVA/mqdefault.jpg" alt="Especificidad CSS: ¿Cómo evitar los !important?">
</a><a href="https://youtu.be/I-EFAmX-vhE" title="Flex CSS: Alinear, centrar y reordenar elementos">
  <img loading="lazy" src="../../../vi/I-EFAmX-vhE/mqdefault.jpg" alt="Flex CSS: Alinear, centrar y reordenar elementos">
</a><a href="https://youtu.be/mNTj6KfYeXc" title="Cómo crear GRADIENTES CÓNICOS en CSS">
  <img loading="lazy" src="../../../vi/mNTj6KfYeXc/mqdefault.jpg" alt="Cómo crear GRADIENTES CÓNICOS en CSS">
</a><a href="https://youtu.be/bMiXLfOnuUA" title="ECSStatic: Librería CSS-in-JS">
  <img loading="lazy" src="../../../vi/bMiXLfOnuUA/mqdefault.jpg" alt="ECSStatic: Librería CSS-in-JS">
</a><a href="https://youtu.be/Q1CXWBtxKZU" title="Grid CSS: Introducción y conceptos desde cero">
  <img loading="lazy" src="../../../vi/Q1CXWBtxKZU/mqdefault.jpg" alt="Grid CSS: Introducción y conceptos desde cero">
</a><a href="https://youtu.be/1TbS60Fu-_M" title="Variables CSS NATIVAS: ¿Qué son y cómo funcionan?">
  <img loading="lazy" src="../../../vi/1TbS60Fu-_M/mqdefault.jpg" alt="Variables CSS NATIVAS: ¿Qué son y cómo funcionan?">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
