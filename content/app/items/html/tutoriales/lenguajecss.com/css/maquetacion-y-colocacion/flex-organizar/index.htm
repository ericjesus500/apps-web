<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Flex CSS: Flexibilidad - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Es posible que necesites adaptar o animar elementos flex en CSS. Te explico como hacerlo utilizando flex-grow o flex-shrink.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Flex CSS: Flexibilidad - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/maquetacion-y-colocacion/flex/flex-css.png">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Es posible que necesites adaptar o animar elementos flex en CSS. Te explico como hacerlo utilizando flex-grow o flex-shrink.">
  <meta property="og:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/flex-organizar/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/flex-organizar/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Flex CSS: Flexibilidad - CSS en español">
  <meta property="twitter:description" content="Es posible que necesites adaptar o animar elementos flex en CSS. Te explico como hacerlo utilizando flex-grow o flex-shrink.">
  <meta property="twitter:image" content="https://lenguajecss.com/css/maquetacion-y-colocacion/flex/flex-css.png">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Flex CSS: Flexibilidad</a></h1><h2 class="typewriter">Adaptar o incluso animar elementos flex</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../flex-alinear/index.htm">Flex CSS: Alinear elementos</a>
    <a class="current" href="index.htm">Flex CSS: Flexibilidad</a>
    <a href="../grid-css/index.htm">Grid CSS: Introducción</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Como su propio nombre indica, una de las características más interesantes de <strong>flex</strong> es la <strong>flexibilidad</strong> de sus elementos. Existen una serie de propiedades muy interesantes para dotar de interacción y flexibilidad a los elementos que forman parte de un contenedor <strong>flex</strong>.</p>
<p>A excepción de la propiedad <code>align-self</code> vista en temas anteriores, todas las propiedades que hemos visto hasta ahora se aplican sobre el elemento <strong>contenedor</strong>. Las siguientes propiedades, sin embargo, se aplican <strong>sobre los elementos hijos</strong>.</p>
<h3 id="propiedades-de-flexibilidad" tabindex="-1"><a class="header-anchor" href="#propiedades-de-flexibilidad">Propiedades de flexibilidad</a></h3>
<p>Las siguientes propiedades nos permiten dotar de flexibilidad a los elementos hijos de un contenedor <strong>flex</strong>:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>flex-basis</code></td>
<td><badge-type class="size"></badge-type> | <strong>content</strong></td>
<td><strong>Tamaño base</strong> de los ítems antes de aplicar una variación.</td>
</tr>
<tr>
<td><code>flex-grow</code></td>
<td><strong>0</strong> | <badge-type class="number"></badge-type></td>
<td>Número que indica el factor de <strong>crecimiento</strong> del ítem (si no ocupa el 100% del padre).</td>
</tr>
<tr>
<td><code>flex-shrink</code></td>
<td><strong>1</strong> | <badge-type class="number"></badge-type></td>
<td>Número que indica el factor de <strong>decrecimiento</strong> del ítem (si ocupa el 100% del padre).</td>
</tr>
</tbody>
</table>
<p>Vamos a ver detalladamente cada una de estas propiedades para entenderlas mejor.</p>
<h4 id="la-propiedad-flex-basis" tabindex="-1"><a class="header-anchor" href="#la-propiedad-flex-basis">La propiedad flex-basis</a></h4>
<p>En primer lugar, tenemos la propiedad <code>flex-basis</code>, que define el <strong>tamaño base</strong> por defecto que tendrán los ítems antes de aplicarle una cierta distribución de espacio. Se suele aplicar un tamaño específico (<em>unidades, porcentajes, etc...</em>), pero también se puede aplicar la palabra clave <code>content</code> que ajusta automáticamente el tamaño al contenido del elemento. Este es el valor por defecto de la propiedad.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Elemento 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Elemento 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Elemento 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
<span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
  <span class="token property">gap</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>Un detalle interesante sobre esta propiedad, es que si le aplicamos un <code>flex-direction: column</code> y aumentamos el <code>height</code>, invertiremos los ejes primario y secundario, y <code>flex-basis</code> actuará como <code>height</code> en lugar de como <code>width</code>. Observa también que al estar usando la propiedad de atajo <code>gap</code>, el hueco se aplica a ambos ejes, por lo que también actua.</p>
<h4 id="la-propiedad-flex-grow" tabindex="-1"><a class="header-anchor" href="#la-propiedad-flex-grow">La propiedad flex-grow</a></h4>
<p>La propiedad <code>flex-grow</code> actúa en situaciones donde:</p>
<ul>
<li>Hay un <code>flex-basis</code> definido.</li>
<li>Los ítems cubren el tamaño total del contenedor flex padre.</li>
</ul>
<p>En esas situaciones, la propiedad <code>flex-grow</code> indica el factor de crecimiento de los ítems en el caso de que no tengan un ancho o alto específico. Modifiquemos el ejemplo anterior y añadamos el siguiente fragmento de código:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.item:nth-child(1)</span> <span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre>
<p>Por omisión, todos los elementos tienen un <code>flew-grow: 0</code> definido, de modo que no hay factor de crecimiento en el elemento, y tendrá el tamaño definido por la propiedad <code>flex-basis</code> que explicamos anteriormente. Sin embargo, si colocamos un <code>flex-grow: 1</code> al primer hijo (<em>ejemplo anterior</em>), este crecerá hasta que la suma de los hijos ocupen el 100% del contenedor, mientras que el resto de hijos tendrá el tamaño base definido por <code>flex-basis</code>.</p>
<p>Volvamos a modificarlo. Ahora añadiremos este código CSS:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.item:nth-child(1)</span> <span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">.item:nth-child(2)</span> <span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre>
<p>En este caso, el primer elemento tiene un <strong>factor de crecimiento</strong> de <code>1</code>, mientras el segundo elemento tiene un <strong>factor de crecimiento</strong> de 2, el resto de elementos tendrán un <strong>factor de crecimiento</strong> de <code>0</code>, o sea, no crecen. Así pues, tendremos que el elemento número 3 tiene un tamaño igual al <code>flex-basis</code>, mientras que el elemento número 1 crece un poco más y el elemento número 2 crece un poco más que el número 1.</p>
<blockquote>
<p>En resumen, <code>flex-grow</code> establece un factor de crecimiento observando en conjunto el resto de elementos, y veremos que actua siempre y cuando la suma del espacio de los elementos hijos no superen el 100% del contenedor padre.</p>
</blockquote>
<h4 id="la-propiedad-flex-shrink" tabindex="-1"><a class="header-anchor" href="#la-propiedad-flex-shrink">La propiedad flex-shrink</a></h4>
<p>Por otro lado, tenemos la propiedad <code>flex-shrink</code> que es la opuesta a la propiedad <code>flex-grow</code>. Mientras que la anterior indica un factor de crecimiento, <code>flex-shrink</code> hace justo lo contrario: aplica un <strong>factor de decrecimiento</strong>.</p>
<p>La propiedad <code>flex-shrink</code> actúa en situaciones donde:</p>
<ul>
<li>Hay un <code>flex-basis</code> definido.</li>
<li>Los ítems <strong>no</strong> cubren el tamaño total del contenedor flex padre.</li>
</ul>
<p>Volvamos al ejemplo inicial de <code>flex-basis</code> y hagamos los siguientes cambios:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item:nth-child(1)</span> <span class="token punctuation">{</span> <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">.item:nth-child(2)</span> <span class="token punctuation">{</span> <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 6<span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre>
<p>Observa que ahora, hemos definido un <code>flex-basis</code> más grande, para obligar que ocupe más del 100% del contenedor flex padre. Si al primer elemento le aplicamos un <code>flex-shrink: 2</code> y al segundo elemento un <code>flex-shrink: 6</code>, veremos que el primer elemento va a ser ligeramente más pequeño que el tercero (<em>que no cambia respecto al tamaño base</em>), mientras que el segundo elemento va a ser considerablemente más pequeño.</p>
<h4 id="atajo-la-propiedad-flex" tabindex="-1"><a class="header-anchor" href="#atajo-la-propiedad-flex">Atajo: La propiedad flex</a></h4>
<p>Existe una propiedad denominada <code>flex</code> que sirve de atajo para estas tres propiedades indicadas en los ítems hijos. Veamos como funciona, ya que se trata de una propiedad muy versátil que soporta varios formatos:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>flex</code> (1 parámetro)</td>
<td><code>none</code> | <badge-type class="basis"></badge-type> | <badge-type class="grow"></badge-type></td>
<td>Establece un tamaño base o un factor de crecimiento.</td>
</tr>
<tr>
<td><code>flex</code> (2 parámetros)</td>
<td><badge-type class="grow"></badge-type> <badge-type class="shrink"></badge-type></td>
<td>Establece un factor de crecimiento y un factor de decrecimiento.</td>
</tr>
<tr>
<td><code>flex</code> (3 parámetros)</td>
<td><strong>0 1 auto</strong> | <badge-type class="grow"></badge-type> <badge-type class="shrink"></badge-type> <badge-type class="basis"></badge-type></td>
<td>Establece el factor de crecimiento y decrecimiento y el tamaño base.</td>
</tr>
</tbody>
</table>
<p>Dependiendo de la cantidad de parámetros:</p>
<ul>
<li>
<p>Si en la propiedad <code>flex</code> indicamos <strong>un sólo parámetro</strong> podemos indicar la palabra clave <code>none</code>, que es equivalente a <code>0 0 auto</code>, podemos establecer un <code>flex-grow</code> si lo que escribimos es un <badge-type class="number"></badge-type> o en otro caso, podemos escribir un <badge-type class="size"></badge-type> y definir un <code>flex-basis</code>.</p>
</li>
<li>
<p>Si en la propiedad <code>flex</code> indicamos <strong>dos parámetros</strong> estaremos estableciendo un factor de crecimiento y luego, el factor de decrecimiento.</p>
</li>
<li>
<p>Si en la propiedad <code>flex</code> indicamos <strong>tres parámetros</strong> estaremos estableciendo los dos factores de crecimiento, y además un tamaño base.</p>
</li>
</ul>
<p>Por defecto, el valor por omisión de esta propiedad es <code>0 1 auto</code>.</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token comment">/* flex: &lt;flex-grow> &lt;flex-shrink> &lt;flex-basis> */</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1 3 35%<span class="token punctuation">;</span>

  <span class="token comment">/* Equivalente a... */</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> 35%<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h3 id="elementos-flex-animados" tabindex="-1"><a class="header-anchor" href="#elementos-flex-animados">Elementos flex animados</a></h3>
<p>Ten en cuenta que las propiedades <code>flex-grow</code>, <code>flex-shrink</code> o incluso su atajo <code>flex</code> son animables, por lo que podemos conseguir hermosos efectos de animación con fragmentos de código con muy poco código como el siguiente:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Elemento 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Elemento 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Elemento 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
<span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
  <span class="token property">gap</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 0 1 15%<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all 0.5s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item:hover</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> 1 1 10%<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> indigo<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>Observa que el truco está en utilizar la propiedad <code>transition</code>, que veremos en el apartado de <a href="../../animaciones/transiciones/index.htm">Transiciones</a>, en todos los elementos hijos para preparar una animación cada vez que hagamos el <code>:hover</code> y movamos el ratón sobre un elemento que cambia sus valores de flexibilidad mediante <code>flex</code> y su color de fondo mediante <code>background</code>.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../flex-alinear/index.htm" title="Flex CSS: Alinear elementos">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Flex CSS: Alinear elementos</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../grid-css/index.htm" title="Grid CSS: Introducción">
  <div>
    <span>Grid CSS: Introducción</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/0sFtRnbe0fo" title="Novedades de CSS: Dr. CSStrange y el multiverso">
  <img loading="lazy" src="../../../vi/0sFtRnbe0fo/mqdefault.jpg" alt="Novedades de CSS: Dr. CSStrange y el multiverso">
</a><a href="https://youtu.be/L7Hi32qBIxI" title="Cómo crear SOMBRAS EN CAJAS (box-shadow)">
  <img loading="lazy" src="../../../vi/L7Hi32qBIxI/mqdefault.jpg" alt="Cómo crear SOMBRAS EN CAJAS (box-shadow)">
</a><a href="https://youtu.be/bMiXLfOnuUA" title="ECSStatic: Librería CSS-in-JS">
  <img loading="lazy" src="../../../vi/bMiXLfOnuUA/mqdefault.jpg" alt="ECSStatic: Librería CSS-in-JS">
</a><a href="https://youtu.be/OQtAyXHeKnc" title="Grid CSS: Grids por área">
  <img loading="lazy" src="../../../vi/OQtAyXHeKnc/mqdefault.jpg" alt="Grid CSS: Grids por área">
</a><a href="https://youtu.be/W6fAzw3HoWg" title="Cómo crear GRADIENTES LINEALES en CSS">
  <img loading="lazy" src="../../../vi/W6fAzw3HoWg/mqdefault.jpg" alt="Cómo crear GRADIENTES LINEALES en CSS">
</a><a href="https://youtu.be/I-EFAmX-vhE" title="Flex CSS: Alinear, centrar y reordenar elementos">
  <img loading="lazy" src="../../../vi/I-EFAmX-vhE/mqdefault.jpg" alt="Flex CSS: Alinear, centrar y reordenar elementos">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
