<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>CSS Container Queries - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Si necesitamos hacer cambios en un elemento dependiendo de su contenedor padre, podemos utilizar los CSS Container Queries. Te los explico.">
  
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="CSS Container Queries - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Si necesitamos hacer cambios en un elemento dependiendo de su contenedor padre, podemos utilizar los CSS Container Queries. Te los explico.">
  <meta property="og:url" content="https://lenguajecss.com/css/responsive-web-design/css-container-queries/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/responsive-web-design/css-container-queries/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="CSS Container Queries - CSS en español">
  <meta property="twitter:description" content="Si necesitamos hacer cambios en un elemento dependiendo de su contenedor padre, podemos utilizar los CSS Container Queries. Te los explico.">
  <meta property="twitter:image" content="https://lenguajecss.com/large-summary.jpg">

  </head>

<body class="css" style="--logo-color: #1e7bbf"><div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">CSS Container Queries</a></h1><h2 class="typewriter">Media queries para elementos contenedores</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../medios-paginados/index.htm">Medios paginados</a>
    <a class="current" href="index.htm">CSS Container Queries</a>
    <a href="../preferencias-usuario/index.htm">Preferencias de usuario</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>

    <div class="post-container">
  <div class="contents">
    
    <p>Los <strong>media queries</strong> o regla <code>@media</code> son un mecanismo de CSS para dar estilo a elementos dependiendo de si se cumple una cierta condición, que generalmente tiene que ver con el tamaño, orientación o cierta característica de la página o dispositivo en el que nos encontramos. Es uno de los mecanismos principales del <strong>responsive design</strong>.</p>
<blockquote>
<p>Si has llegado hasta aquí, es muy probable que ya conozcas el concepto de <a href="../media-queries/index.htm">media queries</a>. Si no es así, te recomiendo echarle un vistazo antes de continuar.</p>
</blockquote>
<h3 id="qué-son-los-container-queries" tabindex="-1"><a class="header-anchor" href="#qué-son-los-container-queries">¿Qué son los container queries?</a></h3>
<p>Los <strong>CSS Container Queries</strong> son el mismo concepto de las <strong>Media Queries</strong>, pero en lugar de estar orientados a modificar los estilos dependiendo del tamaño de la página o dispositivo, lo hace dependiendo de un contenedor padre (<em>o ancestro</em>) específico. De esta forma, podemos cambiar el tamaño de ciertos elementos y hacer que tengan una forma o unos estilos concretos dependiendo del contexto donde se encuentren.</p>
<p><img src="css-container-queries.png" alt="CSS Container Queries" width="2081" height="1041" loading="lazy"></p>
<blockquote>
<blockquote>
<p>En este <a href="https://codepen.io/manz/pen/vYzbzzY">ejemplo de codepen de CSS Container Queries</a> se puede ver como funcionan los <strong>CSS Container Queries</strong>, simplemente moviendo la tarjeta por su esquina inferior-derecha.</p>
</blockquote>
</blockquote>
<h3 id="el-contenedor" tabindex="-1"><a class="header-anchor" href="#el-contenedor">El contenedor</a></h3>
<h4 id="nombre-y-tipo-de-contenedor" tabindex="-1"><a class="header-anchor" href="#nombre-y-tipo-de-contenedor">Nombre y tipo de contenedor</a></h4>
<p>Para empezar, tenemos que determinar cuál será el elemento contenedor al que vamos a hacer referencia. En dicho elemento, necesitaremos establecer las siguientes propiedades, donde <code>container-name</code> es siempre obligatoria:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valores</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>container-name</code></td>
<td><strong>none</strong> | <em>nombre del contenedor</em></td>
<td>Establece un nombre de contenedor para poder hacer referencia a él.</td>
</tr>
<tr>
<td><code>container-type</code></td>
<td><strong>normal</strong> | <code>size</code> | <code>inline-size</code></td>
<td>Establece el tipo de tamaño de contenedores (bloque, en linea...).</td>
</tr>
</tbody>
</table>
<p>La propiedad <code>container-name</code> le da un <strong>nombre de contenedor</strong> al elemento en el que nos encontramos. Sin este nombre no podremos hacer referencia luego, en la regla <code>@container</code>.</p>
<p>Por otro lado, la propiedad <code>container-type</code>, si la definimos, establecerá el tipo de tamaño que va a tener el contenedor en cuestión, donde puede ser <code>size</code> para elementos de tipo bloque, o <code>inline-size</code> para elementos de tipo en línea. Por ejemplo, en el caso de establecer un elemento <code>inline-size</code>, no tendrá en cuenta la altura, si la colocamos en la regla <code>@container</code>, al contrario que si usamos <code>size</code>.</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">container-name</span><span class="token punctuation">:</span> parent<span class="token punctuation">;</span>
  <span class="token property">container-type</span><span class="token punctuation">:</span> inline-size<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Tienes más información sobre elementos en línea y en bloque, en la sección <a href="../../maquetacion-y-colocacion/propiedad-display/index.htm">la propiedad display</a>.</p>
<h4 id="propiedad-de-atajo" tabindex="-1"><a class="header-anchor" href="#propiedad-de-atajo">Propiedad de atajo</a></h4>
<p>Una forma de escribir menos código es utilizar la propiedad de atajo <code>container</code>, a la cuál le podemos indicar dos valores: el valor de la propiedad <code>container-name</code> y el valor de la propiedad <code>container-type</code>, siempre separadas por un <code>/</code>:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>container</code></td>
<td><em>container-name</em> / <em>container-type</em></td>
</tr>
</tbody>
</table>
<p>El ejemplo anterior, se podría simplificar como se ve a continuación:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">container</span><span class="token punctuation">:</span> parent / inline-size<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Muchas veces no necesitaremos establecer el valor de la propiedad <code>container-type</code>, por lo que podemos indicarle simplemente el primer valor, de la propiedad <code>container-name</code> y nada más.</p>
<h3 id="la-regla-container" tabindex="-1"><a class="header-anchor" href="#la-regla-container">La regla @container</a></h3>
<p>Una vez tenemos nuestro contenedor definido, debemos establecer una regla <code>@container</code> que, de forma muy similar a las reglas <code>@media</code> va a establecer una condición dependiendo de un elemento contenedor específico.</p>
<table>
<thead>
<tr>
<th>Regla</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td css-module="."><code>@container</code> &lt;<em>nombre del contenedor</em>&gt; (&lt;<em>condición</em>&gt;)</td>
<td>Establece una condición para aplicar estilos al contenedor concreto.</td>
</tr>
</tbody>
</table>
<p>Por ejemplo, en este ejemplo que tenemos a continuación, vamos a establecer nuestro elemento con clase <code>.container</code> con un elemento contenedor <strong>parent</strong>, y creamos una regla <code>@container</code> que afecta a los hijos del contenedor <strong>parent</strong> cuando, como máximo, tenga <code>500px</code> de ancho:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">container</span><span class="token punctuation">:</span> parent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@container</span> parent <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.item</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>En este caso, cuando el elemento <code>.item</code> se encuentre dentro del contenedor <code>.container</code> y este último, tenga menos de <code>500px</code> de ancho, el estilo del elemento <code>.item</code> cambiará a lo definido en la regla <code>@container</code>.</p>
<p><caniuse-support title="CSS Container Queries (Size)" feature="css-container-queries" edge="106/y" firefox="110/y" chrome="106/y" safari="16.0/y" opera="94/y" ios_saf="16.0/y" and_chr="116/y" and_ff="116/y">
</caniuse-support></p>
<h3 id="unidades-de-contenedores" tabindex="-1"><a class="header-anchor" href="#unidades-de-contenedores">Unidades de contenedores</a></h3>
<p>Cuando nos encontramos en el interior de una regla <code>@container</code> podemos utilizar ciertas unidades especiales como <code>cqw</code>, <code>cqh</code>, <code>cqi</code>, <code>cqb</code>, <code>cqmin</code> o <code>cqmax</code>. Básicamente, la idea es que si desconocemos el tamaño concreto del contenedor, podemos utilizar estas medidas para aplicar un porcentaje de su tamaño.</p>
<p>De esta forma, si utilizamos <code>50cqw</code>, significa que va a establecer un tamaño del <code>50%</code> del ancho del contenedor. Funcionan de forma muy similar a las unidades <code>vw</code>, <code>vh</code>, <code>vmin</code> y <code>vmax</code>.</p>
<table>
<thead>
<tr>
<th>Unidad</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>cqw</code></td>
<td><strong>Container Query Width</strong>. Porcentaje relativo al ancho del contenedor.</td>
</tr>
<tr>
<td><code>cqh</code></td>
<td><strong>Container Query Height</strong>. Porcentaje relativo al alto del contenedor.</td>
</tr>
<tr>
<td><code>cqi</code></td>
<td><strong>Container Query Inline Size</strong>. Porcentaje relativo al tamaño en línea.</td>
</tr>
<tr>
<td><code>cqb</code></td>
<td><strong>Container Query Block Size</strong>. Porcentaje relativo al tamaño de bloque.</td>
</tr>
<tr>
<td><code>cqmin</code></td>
<td><strong>Container Query Mínimo</strong>. Valor más pequeño entre <code>cqi</code> y <code>cqb</code>.</td>
</tr>
<tr>
<td><code>cqmax</code></td>
<td><strong>Container Query Máximo</strong>. Valor más alto entre <code>cqi</code> y <code>cqb</code>.</td>
</tr>
</tbody>
</table>
<p>Las unidades <code>cqi</code> y <code>cqb</code> son las propiedades lógicas equivalentes al ancho y alto. Si tienes curiosidad, echa un vistazo al artículo <a href="../../modelo-de-cajas/propiedades-logicas-css/index.htm">Propiedades lógicas CSS</a>.</p>
<p><caniuse-support title="CSS Container Query Units" feature="css-container-query-units" edge="105/y" firefox="110/y" chrome="105/y" safari="16.0/y" opera="91/y" ios_saf="16.0/y" and_chr="116/y" and_ff="116/y">
</caniuse-support></p>
<h3 id="condiciones-con-función-style" tabindex="-1"><a class="header-anchor" href="#condiciones-con-función-style">Condiciones con función style()</a></h3>
<p>Aunque aún no tiene muy buen soporte, es posible utilizar la función css <code>style()</code> para realizar comprobaciones concretas en variables CSS y determinar si se deberían aplicar los estilos. Por ejemplo, observa el siguiente ejemplo:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">container</span><span class="token punctuation">:</span> parent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@container</span> parent <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token property">--responsive</span><span class="token punctuation">:</span> true<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">.item</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>La función <code>style(--responsive: true)</code> comprueba si existe una variable <code>--responsive</code> y está establecida a <code>true</code>, cosa que se puede hacer desde nuestro código CSS, o establecerla desde Javascript y guardarla en una variable CSS, permitiendo hacer nuestras condiciones de contenedores mucho más flexibles.</p>
<p><caniuse-support title="CSS Container Style Queries" feature="css-container-queries-style" edge="111/a" firefox="✗/n" chrome="111/a" safari="✗/n" opera="98/a" ios_saf="✗/n" and_chr="116/a" and_ff="✗/n">
</caniuse-support></p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    <script async="" src="../../../pagead/js/f.txt?client=ca-pub-0412426997270095" crossorigin="anonymous"></script>
<ins class="adsbygoogle" style="display:block; margin: 1em var(--pad)" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../medios-paginados/index.htm" title="Medios paginados">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Medios paginados</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../preferencias-usuario/index.htm" title="Preferencias de usuario">
  <div>
    <span>Preferencias de usuario</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>

  </div>

<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/q4WZUTfHt6o" title="Cómo crear GRADIENTES RADIALES en CSS">
  <img loading="lazy" src="../../../vi/q4WZUTfHt6o/mqdefault.jpg" alt="Cómo crear GRADIENTES RADIALES en CSS">
</a><a href="https://youtu.be/8Jh2K3tq5n0" title="Tutorial para aprender Animaciones CSS">
  <img loading="lazy" src="../../../vi/8Jh2K3tq5n0/mqdefault.jpg" alt="Tutorial para aprender Animaciones CSS">
</a><a href="https://youtu.be/984ry_jsExA" title="CÓMO hacer la ANIMACIÓN del header de Manz.dev">
  <img loading="lazy" src="../../../vi/984ry_jsExA/mqdefault.jpg" alt="CÓMO hacer la ANIMACIÓN del header de Manz.dev">
</a><a href="https://youtu.be/bMiXLfOnuUA" title="ECSStatic: Librería CSS-in-JS">
  <img loading="lazy" src="../../../vi/bMiXLfOnuUA/mqdefault.jpg" alt="ECSStatic: Librería CSS-in-JS">
</a><a href="https://youtu.be/8tTMYgHBQPI" title="Analizando las preguntas del STATE OF CSS 2022">
  <img loading="lazy" src="../../../vi/8tTMYgHBQPI/mqdefault.jpg" alt="Analizando las preguntas del STATE OF CSS 2022">
</a><a href="https://youtu.be/pJGEELsEM1w" title="Consejos y buenas prácticas (III): CSS">
  <img loading="lazy" src="../../../vi/pJGEELsEM1w/mqdefault.jpg" alt="Consejos y buenas prácticas (III): CSS">
</a></div>
  </div>
</section>

  <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

  

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>
</body>

</html>
