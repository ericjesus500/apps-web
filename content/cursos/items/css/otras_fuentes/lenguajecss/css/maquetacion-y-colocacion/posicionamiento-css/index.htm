<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>La propiedad position - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Uno de los temas más complejos de CSS es aprender a posicionar elementos. El posicionamiento relativo o absoluto es un buen punto de partida para aprender.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="La propiedad position - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Uno de los temas más complejos de CSS es aprender a posicionar elementos. El posicionamiento relativo o absoluto es un buen punto de partida para aprender.">
  <meta property="og:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/posicionamiento-css/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/posicionamiento-css/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="La propiedad position - CSS en español">
  <meta property="twitter:description" content="Uno de los temas más complejos de CSS es aprender a posicionar elementos. El posicionamiento relativo o absoluto es un buen punto de partida para aprender.">
  <meta property="twitter:image" content="https://lenguajecss.com/large-summary.jpg">

  </head>

<body class="css menu-open " style="--logo-color: #1e7bbf"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje CSS</h1>

    <a class="cover" title="Lenguaje CSS (css)" href="../../index.htm" style="--image: url('../../../assets/css.jpg')"></a>

    <header>
      <a href="../../representacion-datos/tablas-css/index.htm" title="Tablas CSS">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../interacciones/contornos/index.htm" title="Contornos">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Maquetación y colocación
      </span>
            <a class="link" href="../propiedad-display/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La propiedad display
            </a>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La propiedad position
            </a>
            <a class="link" href="../desplazamientos/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La propiedad float
            </a>
            <a class="link" href="../flex/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Flex CSS: Introducción
            </a>
            <a class="link" href="../flex-alinear/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Flex CSS: Alinear elementos
            </a>
            <a class="link" href="../flex-organizar/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Flex CSS: Flexibilidad
            </a>
            <a class="link" href="../grid-css/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Introducción
            </a>
            <a class="link" href="../grid-css-alinear/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Alinear elementos
            </a>
            <a class="link" href="../grid-css-areas/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Grid por áreas
            </a>
            <a class="link" href="../grid-css-celdas-irregulares/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Celdas irregulares
            </a>
            <a class="link" href="../grid-css-lineas-nombradas/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Líneas con nombre
            </a>
            <a class="link" href="../multi-column/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Multi-columnas CSS
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">La propiedad position</a></h1><h2 class="typewriter">Formas especiales de colocar o posicionar elementos</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../propiedad-display/index.htm">La propiedad display</a>
    <a class="current" href="index.htm">La propiedad position</a>
    <a href="../desplazamientos/index.htm">La propiedad float</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p>A grandes rasgos, y como aprendimos en temas anteriores, si tenemos varios <strong>elementos en línea</strong> (<em>uno detrás de otro</em>) aparecerán colocados de <strong>izquierda hacia derecha</strong>, mientras que si son <strong>elementos en bloque</strong> se verán colocados desde <strong>arriba hacia abajo</strong>. Estos elementos se pueden ir combinando y anidando (<em>incluyendo unos dentro de otros</em>), construyendo así esquemas más complejos.</p>
<p>Hasta ahora, hemos estado trabajando sin saberlo en lo que se denomina posicionamiento <strong>estático</strong> (<em>static</em>), donde todos los elementos aparecen con un orden natural según donde estén colocados en el HTML. Este es el <strong>modo por defecto</strong> en que un navegador renderiza una página.</p>
<p>Sin embargo, existen otros modos alternativos de posicionamiento, que podemos cambiar mediante la propiedad <code>position</code>, que nos pueden interesar para modificar la posición en donde aparecen los diferentes elementos y su contenido.</p>
<p>A la propiedad <code>position</code> se le pueden indicar los siguientes valores:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Significado</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>static</strong></td>
<td>Posicionamiento estático. Utiliza el orden natural de los elementos HTML.</td>
</tr>
<tr>
<td>relative</td>
<td>Posicionamiento relativo. Los elementos se mueven ligeramente en base a su posición estática.</td>
</tr>
<tr>
<td>absolute</td>
<td>Posicionamiento absoluto. Los elementos se colocan en base al contenedor padre.</td>
</tr>
<tr>
<td>fixed</td>
<td>Posicionamiento fijo. Idem al absoluto, pero aunque hagamos scroll no se mueve.</td>
</tr>
<tr>
<td>sticky</td>
<td>Posicionamiento «pegado». Similar al relativo, usado para pegar menús a la parte superior.</td>
</tr>
</tbody>
</table>
<p>Si utilizamos un modo de posicionamiento diferente al estático (<em>absolute, fixed, sticky o relative</em>), podemos utilizar una serie de propiedades para modificar la posición de un elemento. Estas propiedades son las siguientes:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
<th>Significado</th>
</tr>
</thead>
<tbody>
<tr>
<td>top:</td>
<td><strong>auto</strong> | <badge-type class="size"></badge-type></td>
<td>Empuja el elemento una distancia desde la parte superior hacia el inferior.</td>
</tr>
<tr>
<td>bottom:</td>
<td><strong>auto</strong> | <badge-type class="size"></badge-type></td>
<td>Empuja el elemento una distancia desde la parte inferior hacia la superior.</td>
</tr>
<tr>
<td>left:</td>
<td><strong>auto</strong> | <badge-type class="size"></badge-type></td>
<td>Empuja el elemento una distancia desde la parte izquierda hacia la derecha.</td>
</tr>
<tr>
<td>right:</td>
<td><strong>auto</strong> | <badge-type class="size"></badge-type></td>
<td>Empuja el elemento una distancia desde la parte derecha hacia la izquierda.</td>
</tr>
<tr>
<td>z-index:</td>
<td><strong>auto</strong> | <badge-type class="number"></badge-type></td>
<td>Coloca un elemento en el eje de profundidad, más cerca o más lejos del usuario.</td>
</tr>
</tbody>
</table>
<p>Antes de pasar a explicar los tipos de posicionamiento, debemos tener claras las propiedades <code>top</code>, <code>bottom</code>, <code>left</code> y <code>right</code>, que sirven para mover un elemento desde la orientación que su propio nombre indica hasta su extremo contrario. Esto es, si utilizamos <code>left</code> e indicamos <code>20px</code>, estaremos indicando mover <strong>desde la izquierda</strong> 20 píxeles <strong>hacia la derecha</strong>.</p>
<p>Pero pasemos a ver cada tipo de posicionamiento por separado y su comportamiento:</p>
<h3 id="posicionamiento-relativo" tabindex="-1"><a class="header-anchor" href="#posicionamiento-relativo">Posicionamiento relativo</a></h3>
<p>Si utilizamos la palabra clave <code>relative</code> activaremos el modo de <strong>posicionamiento relativo</strong>, que es el más sencillo de todos. En este modo, los elementos se colocan exactamente igual que en el posicionamiento estático (<em>permanecen en la misma posición</em>), pero dependiendo del valor de las propiedades <code>top</code>, <code>bottom</code>, <code>left</code> o <code>right</code> variaremos ligeramente la posición del elemento.</p>
<blockquote>
<p><strong>Ejemplo</strong>: Si establecemos <code>left:40px</code>, el elemento se colocará 40 píxeles a la derecha <strong>desde la izquierda</strong> donde estaba colocado en principio, mientras que si especificamos <code>right:40px</code>, el elemento se colocará 40 píxeles a la izquierda <strong>desde la derecha</strong> donde estaba colocado en principio.</p>
</blockquote>
<h3 id="posicionamiento-absoluto" tabindex="-1"><a class="header-anchor" href="#posicionamiento-absoluto">Posicionamiento absoluto</a></h3>
<p>Si utilizamos la palabra clave <code>absolute</code> estamos indicando que el elemento pasará a utilizar <strong>posicionamiento absoluto</strong>, que no es más que utilizar el documento completo como referencia. Esto no es exactamente el funcionamiento de este modo de posicionamiento, pero nos servirá como primer punto de partida para entenderlo.</p>
<blockquote>
<p><strong>Ejemplo</strong>: Si establecemos <code>left:40px</code>, el elemento se colocará 40 píxeles a la derecha del extremo izquierdo de la página. Sin embargo, si indicamos <code>right:40px</code>, el elemento se colocará 40 píxeles a la izquierda del extremo derecho de la página.</p>
</blockquote>
<p>Como mencionaba anteriormente, aunque este es el funcionamiento del posicionamiento absoluto, hay algunos detalles más complejos en su modo de trabajar. Realmente, este tipo de posicionamiento coloca los elementos <strong>utilizando como punto de origen el primer contenedor con posicionamiento diferente a estático</strong>.</p>
<p>Por ejemplo, si el contenedor padre tiene posicionamiento estático, pasamos a mirar el posicionamiento del padre del contenedor padre, y así sucesivamente hasta encontrar un contenedor con posicionamiento no estático o llegar a la etiqueta <code>&lt;body&gt;</code>, en el caso que se comportaría como el ejemplo anterior.</p>
<h3 id="posicionamiento-fijo" tabindex="-1"><a class="header-anchor" href="#posicionamiento-fijo">Posicionamiento fijo</a></h3>
<p>El <strong>posicionamiento fijo</strong> es hermano del <strong>posicionamiento absoluto</strong>. Funciona exactamente igual, salvo que hace que el elemento se muestre en una posición fija <strong>dependiendo de la región visual del navegador</strong>. Es decir, aunque el usuario haga scroll y se desplace hacia abajo en la página web, el elemento seguirá en el mismo sitio posicionado.</p>
<blockquote>
<p><strong>Ejemplo</strong>: Si establecemos <code>top:0</code> y <code>right:0</code>, el elemento se colocará justo en la esquina superior derecha y se mantendrá ahí aunque hagamos scroll hacia abajo en la página.</p>
</blockquote>
<h3 id="posicionamiento-sticky" tabindex="-1"><a class="header-anchor" href="#posicionamiento-sticky">Posicionamiento sticky</a></h3>
<p>El <strong>posicionamiento sticky</strong> se suele utilizar cuando queremos que un elemento se posicione en un lugar específico de forma fija (<em>«sticky», pegajoso</em>), como por ejemplo, cuando al hacer scroll llegamos a un elemento y queremos que ese elemento se quede fijo en la parte superior mientras continuamos haciendo scroll. Este comportamiento es muy habitual con los menús superiores de las páginas o las cabeceras de secciones.</p>
<h3 id="otros-posicionamientos" tabindex="-1"><a class="header-anchor" href="#otros-posicionamientos">Otros posicionamientos</a></h3>
<p>Existen otros valores de <code>position</code> como <code>page</code> o <code>center</code>, sin embargo, su soporte e implementación aún es muy temprana y no se sabe si su funcionalidad terminará ofreciéndose desde los diferentes navegadores.</p>
<h3 id="profundidad-niveles" tabindex="-1"><a class="header-anchor" href="#profundidad-niveles">Profundidad (niveles)</a></h3>
<p>Es interesante conocer también la existencia de la propiedad <code>z-index</code>, que establece el <strong>nivel de profundidad</strong> en el que está un elemento sobre los demás. De esta forma, podemos hacer que un elemento se coloque encima o debajo de otro.</p>
<p>Su funcionamiento es muy sencillo, sólo hay que indicar un número que representará el nivel de profundidad del elemento. Los elementos un número más alto estarán por encima de otros con un número más bajo, que permanecerán ocultos detrás de los primeros.</p>
<p><img src="z-index.png" alt="z-index CSS" width="1388" height="694" loading="lazy"></p>
<blockquote>
<blockquote>
<p><strong>Nota</strong>: Los niveles <code>z-index</code>, así como las propiedades <code>top</code>, <code>left</code>, <code>bottom</code> y <code>right</code> no funcionan con elementos que estén utilizando posicionamiento estático. Deben tener un tipo de posicionamiento diferente a estático.</p>
</blockquote>
</blockquote>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../propiedad-display/index.htm" title="La propiedad display">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>La propiedad display</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../desplazamientos/index.htm" title="La propiedad float">
  <div>
    <span>La propiedad float</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/984ry_jsExA" title="CÓMO hacer la ANIMACIÓN del header de Manz.dev">
  <img loading="lazy" src="../../../vi/984ry_jsExA/mqdefault.jpg" alt="CÓMO hacer la ANIMACIÓN del header de Manz.dev">
</a><a href="https://youtu.be/pJGEELsEM1w" title="Consejos y buenas prácticas (III): CSS">
  <img loading="lazy" src="../../../vi/pJGEELsEM1w/mqdefault.jpg" alt="Consejos y buenas prácticas (III): CSS">
</a><a href="https://youtu.be/q4WZUTfHt6o" title="Cómo crear GRADIENTES RADIALES en CSS">
  <img loading="lazy" src="../../../vi/q4WZUTfHt6o/mqdefault.jpg" alt="Cómo crear GRADIENTES RADIALES en CSS">
</a><a href="https://youtu.be/1TbS60Fu-_M" title="Variables CSS NATIVAS: ¿Qué son y cómo funcionan?">
  <img loading="lazy" src="../../../vi/1TbS60Fu-_M/mqdefault.jpg" alt="Variables CSS NATIVAS: ¿Qué son y cómo funcionan?">
</a><a href="https://youtu.be/lM4eufOnKVA" title="Especificidad CSS: ¿Cómo evitar los !important?">
  <img loading="lazy" src="../../../vi/lM4eufOnKVA/mqdefault.jpg" alt="Especificidad CSS: ¿Cómo evitar los !important?">
</a><a href="https://youtu.be/s_16bzmnGoY" title="Grid CSS: Líneas con nombre">
  <img loading="lazy" src="../../../vi/s_16bzmnGoY/mqdefault.jpg" alt="Grid CSS: Líneas con nombre">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="../../../postcss/index.htm" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/fundamentos/" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/javascript/" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/npm/" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/webcomponents/" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/vuejs/" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/automatizadores/" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/retos/" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
