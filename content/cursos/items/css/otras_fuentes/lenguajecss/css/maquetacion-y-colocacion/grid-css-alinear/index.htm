<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Grid CSS: Alinear elementos - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Con Grid CSS y las propiedades justify-items, align-items, justify-content y align-content, podrás alinear de cualquier forma una cuadricula CSS.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Grid CSS: Alinear elementos - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/maquetacion-y-colocacion/grid-css/grid-css.png">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Con Grid CSS y las propiedades justify-items, align-items, justify-content y align-content, podrás alinear de cualquier forma una cuadricula CSS.">
  <meta property="og:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/grid-css-alinear/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/grid-css-alinear/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Grid CSS: Alinear elementos - CSS en español">
  <meta property="twitter:description" content="Con Grid CSS y las propiedades justify-items, align-items, justify-content y align-content, podrás alinear de cualquier forma una cuadricula CSS.">
  <meta property="twitter:image" content="https://lenguajecss.com/css/maquetacion-y-colocacion/grid-css/grid-css.png">

  </head>

<body class="css menu-open " style="--logo-color: #1e7bbf"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje CSS</h1>

    <a class="cover" title="Lenguaje CSS (css)" href="../../index.htm" style="--image: url('../../../assets/css.jpg')"></a>

    <header>
      <a href="../../representacion-datos/tablas-css/index.htm" title="Tablas CSS">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../interacciones/contornos/index.htm" title="Contornos">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Maquetación y colocación
      </span>
            <a class="link" href="../propiedad-display/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La propiedad display
            </a>
            <a class="link" href="../posicionamiento-css/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La propiedad position
            </a>
            <a class="link" href="../desplazamientos/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La propiedad float
            </a>
            <a class="link" href="../flex/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Flex CSS: Introducción
            </a>
            <a class="link" href="../flex-alinear/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Flex CSS: Alinear elementos
            </a>
            <a class="link" href="../flex-organizar/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Flex CSS: Flexibilidad
            </a>
            <a class="link" href="../grid-css/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Introducción
            </a>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Alinear elementos
            </a>
            <a class="link" href="../grid-css-areas/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Grid por áreas
            </a>
            <a class="link" href="../grid-css-celdas-irregulares/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Celdas irregulares
            </a>
            <a class="link" href="../grid-css-lineas-nombradas/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Líneas con nombre
            </a>
            <a class="link" href="../multi-column/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Multi-columnas CSS
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Grid CSS: Alinear elementos</a></h1><h2 class="typewriter">O «cómo centrar un div con CSS Grid»</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../grid-css/index.htm">Grid CSS: Introducción</a>
    <a class="current" href="index.htm">Grid CSS: Alinear elementos</a>
    <a href="../grid-css-areas/index.htm">Grid CSS: Grid por áreas</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p>Al igual que con la maquetación <strong>Flex CSS</strong>, <strong>Grid</strong> incorpora un sistema para alinear elementos que se basa en <strong>Flex</strong> y es incluso más potente, ya que permite la alineación de elementos en <strong>dos dimensiones</strong>, así como centrar o colocar elementos hijos del contenedor <strong>Grid</strong>.</p>
<h3 id="propiedades-de-alineación" tabindex="-1"><a class="header-anchor" href="#propiedades-de-alineación">Propiedades de alineación</a></h3>
<p>Existen una serie de propiedades que se pueden utilizar para colocar y ajustar nuestra cuadrícula <strong>grid</strong> o ajustar los ítems a lo largo de ella, de forma sencilla y cómoda. Algunas de estas propiedades probablemente ya las conocerás del módulo CSS <strong>flex</strong>, sin embargo, en <strong>grid</strong> pueden tener un comportamiento diferente.</p>
<p>Dichas propiedades pueden afectar al 1️⃣ <strong>eje principal</strong> o al 2️⃣ <strong>eje secundario</strong> del grid y son las siguientes:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valores</th>
<th>Afecta a...</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>justify-items</code></td>
<td>start | end | center | <strong>stretch</strong></td>
<td>Elementos 1️⃣</td>
</tr>
<tr>
<td><code>align-items</code></td>
<td>start | end | center | <strong>stretch</strong></td>
<td>Elementos 2️⃣</td>
</tr>
<tr>
<td><code>justify-content</code></td>
<td>start | end | center | <strong>stretch</strong> | space-around | space-between | space-evenly</td>
<td>Contenido 1️⃣</td>
</tr>
<tr>
<td><code>align-content</code></td>
<td>start | end | center | <strong>stretch</strong> | space-around | space-between | space-evenly</td>
<td>Contenido 2️⃣</td>
</tr>
</tbody>
</table>
<p>Estas propiedades se aplican sobre el elemento contenedor padre, sin embargo, afectan tanto al contenedor como al comportamiento de los elementos hijos.</p>
<p><youtube-video v="Wou2koTiIyU" alt="Alinear, distribuir y centrar elementos con Grid CSS"></youtube-video></p>
<p>Antes de continuar, un pequeño resumen:</p>
<ul>
<li><code>justify-items</code>: Alinea los elementos (<em>hijos</em>) en <strong>horizontal</strong> (<em>eje principal</em>) dentro de cada celda.</li>
<li><code>align-items</code>: Alinea los elementos (<em>hijos</em>) en <strong>vertical</strong> (<em>eje principal</em>) dentro de cada celda.</li>
<li><code>justify-content</code>: Alinea el contenido (<em>la cuadricula</em>) en <strong>horizontal</strong> (<em>eje secundario</em>) en el contenedor padre.</li>
<li><code>align-content</code>: Alinea el contenido (<em>la cuadricula</em>) en <strong>vertical</strong> (<em>eje secundario</em>) en el contenedor padre.</li>
</ul>
<blockquote>
<p>Es importante tener en cuenta que el <strong>grid</strong> se define mediante las propiedades vistas en el tema anterior. Con estas cuatro propiedades veremos como colocar los ítems hijos dentro de cada celda de la cuadrícula, o la colocación de la cuadrícula en el elemento padre contenedor.</p>
</blockquote>
<p>De esta forma, podemos controlar prácticamente todos los aspectos de posicionamiento de grid. Mantén el valor <code>stretch</code> en todas las propiedades y ve variando una por una a diferentes valores, para ver las diferencias:</p>
<div class="example example-6">
  <strong>justify-items:</strong>
  <button class="mode" data-property="justify-items" data-value="start">start</button>
  <button class="mode" data-property="justify-items" data-value="end">end</button>
  <button class="mode" data-property="justify-items" data-value="center">center</button>
  <button class="mode" data-property="justify-items" data-value="stretch">stretch</button>
  <br>
  <strong>align-items:</strong>
  <button class="mode" data-property="align-items" data-value="start">start</button>
  <button class="mode" data-property="align-items" data-value="end">end</button>
  <button class="mode" data-property="align-items" data-value="center">center</button>
  <button class="mode" data-property="align-items" data-value="stretch">stretch</button>
  <br>
  <strong>justify-content:</strong>
  <button class="mode" data-property="justify-content" data-value="start">start</button>
  <button class="mode" data-property="justify-content" data-value="end">end</button>
  <button class="mode" data-property="justify-content" data-value="center">center</button>
  <button class="mode" data-property="justify-content" data-value="stretch">stretch</button>
  <button class="mode" data-property="justify-content" data-value="space-between">space-between</button>
  <button class="mode" data-property="justify-content" data-value="space-around">space-around</button>
  <button class="mode" data-property="justify-content" data-value="space-evenly">space-evenly</button>
  <br>
  <strong>align-content:</strong>
  <button class="mode" data-property="align-content" data-value="start">start</button>
  <button class="mode" data-property="align-content" data-value="end">end</button>
  <button class="mode" data-property="align-content" data-value="center">center</button>
  <button class="mode" data-property="align-content" data-value="stretch">stretch</button>
  <button class="mode" data-property="align-content" data-value="space-between">space-between</button>
  <button class="mode" data-property="align-content" data-value="space-around">space-around</button>
  <button class="mode" data-property="align-content" data-value="space-evenly">space-evenly</button>
  <div class="container">
    <div class="item item-1">1</div>
    <div class="item item-2">2</div>
    <div class="item item-3">3</div>
    <div class="item item-4">4</div>
  </div>
</div>
<style>
  .example-6 .container {
    display: grid;
    grid-template-areas: "head head" "menu main" "foot foot";
    background: steelblue;
    min-height: 200px;
  }
  .example-6 .item {
    border: 2px solid black;
    background-color: grey;
    color: white;
  }
  .example-6 .item-1 { grid-area: head; background: blue; }
  .example-6 .item-2 { grid-area: menu; background: red; }
  .example-6 .item-3 { grid-area: main; background: green; }
  .example-6 .item-4 { grid-area: foot; background: orange; }
</style>
<script>
  (() => {
    const buttons = Array.from(document.querySelectorAll(".example-6 button.mode"));
    const container = document.querySelector(".example-6 .container");
    buttons.forEach(button => button.onclick = () => container.style[button.dataset.property] = button.dataset.value);
  })();
</script>
<h3 id="alineación-de-elementos" tabindex="-1"><a class="header-anchor" href="#alineación-de-elementos">Alineación de elementos</a></h3>
<h4 id="la-propiedad-justify-items" tabindex="-1"><a class="header-anchor" href="#la-propiedad-justify-items">La propiedad <code>justify-items</code></a></h4>
<p>La primera propiedad, <code>justify-items</code> sirve para colocar los ítems de un contenedor <strong>grid</strong> a lo largo de sus celdas correspondientes, siempre en el <strong>eje principal</strong> (<em>por defecto, en horizontal</em>). Los valores que puede tomar esta propiedad son los siguientes:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>start</code></td>
<td>Coloca cada ítem al <strong>inicio</strong> de su celda en el eje principal.</td>
</tr>
<tr>
<td><code>end</code></td>
<td>Coloca cada ítem al <strong>final</strong> de su celda en el eje principal.</td>
</tr>
<tr>
<td><code>center</code></td>
<td>Coloca cada ítem en el <strong>centro</strong> de su celda en el eje principal.</td>
</tr>
<tr>
<td><strong>stretch</strong></td>
<td>Hace que cada ítem <strong>se estire</strong> y ocupe todo el espacio disponible de su celda en el eje principal.</td>
</tr>
</tbody>
</table>
<h4 id="la-propiedad-align-items" tabindex="-1"><a class="header-anchor" href="#la-propiedad-align-items">La propiedad <code>align-items</code></a></h4>
<p>De forma análoga, la propiedad <code>align-items</code> sirve para colocar los ítems de un contenedor <strong>grid</strong> a lo largo de sus celdas correspondientes, pero en lugar de el eje principal, las coloca en el <strong>eje secundario</strong> (<em>por defecto, en vertical</em>). Los valores que puede tomar son los mismos que la propiedad anterior.</p>
<h3 id="alineación-de-contenido" tabindex="-1"><a class="header-anchor" href="#alineación-de-contenido">Alineación de contenido</a></h3>
<h4 id="la-propiedad-justify-content" tabindex="-1"><a class="header-anchor" href="#la-propiedad-justify-content">La propiedad <code>justify-content</code></a></h4>
<p>La propiedad <code>justify-content</code> permite modificar la distribución del contenido de la cuadrícula en su contenedor padre, a lo largo de su eje principal (<em>por defecto, el horizontal</em>). Los valores que puede tomar son los siguientes:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>start</code></td>
<td>Coloca la cuadrícula en su conjunto al <strong>inicio</strong> del contenedor padre en su eje principal (<em>horizontal</em>).</td>
</tr>
<tr>
<td><code>end</code></td>
<td>Coloca la cuadrícula en su conjunto al <strong>final</strong> del contenedor padre en su eje principal (<em>horizontal</em>).</td>
</tr>
<tr>
<td><code>center</code></td>
<td>Coloca la cuadrícula en su conjunto al <strong>centro</strong> del contenedor padre en su eje principal (<em>horizontal</em>).</td>
</tr>
<tr>
<td><strong>stretch</strong></td>
<td><strong>Estira</strong> la cuadrícula ocupando todo el espacio disponible del contenedor padre en su eje principal (<em>horizontal</em>).</td>
</tr>
<tr>
<td><code>space-between</code></td>
<td>Establece espacios sólo entre las celdas, en su eje principal (<em>horizontal</em>).</td>
</tr>
<tr>
<td><code>space-around</code></td>
<td>Establece espacios alrededor de las celdas, en su eje principal (<em>horizontal</em>).</td>
</tr>
<tr>
<td><code>space-evenly</code></td>
<td>Idem al anterior, pero solapando los espacios, de modo que sean todos de tamaño equivalente.</td>
</tr>
</tbody>
</table>
<h4 id="la-propiedad-align-content" tabindex="-1"><a class="header-anchor" href="#la-propiedad-align-content">La propiedad <code>align-content</code></a></h4>
<p>De forma análoga, la propiedad <code>align-content</code> sirve para colocar el contenido de la cuadrícula en su contenedor padre, pero a lo largo de su contenedor secundario (<em>por defecto, el vertical</em>). Los valores que puede tomar son exactamente los mismos que la propiedad anterior.</p>
<hr>
<p>Vamos a partir de un escenario con el siguiente código HTML y CSS, donde planteamos unas bases y profundizaremos en las propiedades anteriormente mencionadas:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>2<span class="token punctuation">,</span> 250px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 50px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">gap</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>

  <span class="token property">justify-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Observa que tenemos <strong>6 elementos hijos</strong>, dentro de un contenedor donde hemos creado un grid de <strong>2 columnas x 3 filas</strong> (<em>en rojo, realmente es invisible</em>). Observa hemos aplicado las cuatro propiedades indicadas en la tabla de arriba con el valor <code>center</code>. A continuación, vamos a variar sólo una de ellas cada vez, colocando el valor <code>end</code> para observar su repercusión.</p>
<p>Este sería el resultado al aplicar cada una de las propiedades individuales anteriores:</p>
<p><img src="alinear-grid-css.png" alt="Alinear elementos en Grid CSS" width="968" height="709" loading="lazy"></p>
<h3 id="alineaciones-específicas" tabindex="-1"><a class="header-anchor" href="#alineaciones-específicas">Alineaciones específicas</a></h3>
<p>En el caso de que queramos que uno de los ítems hijos tenga una distribución diferente al resto, podemos aplicar en el elemento hijo la propiedad <code>justify-self</code> (<em>eje principal</em>) o <code>align-self</code> (<em>eje secundario</em>) sobreescribiendo su distribución su general, y aplicando una específica.</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>justify-self</code></td>
<td>Altera la alineación del ítem hijo en el eje horizontal y la sobreescribe con la indicada.</td>
</tr>
<tr>
<td><code>align-self</code></td>
<td>Altera la alineación del ítem hijo en el eje vertical y la sobreescribe con la indicada.</td>
</tr>
</tbody>
</table>
<p>Recuerda que estas propiedades funcionan exactamente igual que sus análogas <code>justify-items</code> o <code>align-items</code> y tienen los mismos valores, sólo que en lugar de indicarse en el elemento padre contenedor, se hace sobre un elemento hijo y repercute en dicho elemento hijo específicamente.</p>
<h3 id="atajo-alineaciones-grid" tabindex="-1"><a class="header-anchor" href="#atajo-alineaciones-grid">Atajo: Alineaciones Grid</a></h3>
<p>Si vamos a crear estructuras grid donde utilicemos los pares de propiedades <code>justify-items</code> y <code>align-items</code> por un lado, <code>justify-content</code> y <code>align-content</code> por otro, e incluso <code>justify-self</code> y <code>align-self</code> por otro, podemos utilizar las siguientes propiedades de atajo:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valores</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>place-items</code></td>
<td>[<em>align-items</em>] [<em>justify-items</em>]</td>
<td>Propiedad de atajo para *<strong>-items</strong></td>
</tr>
<tr>
<td><code>place-content</code></td>
<td>[<em>align-content</em>] [<em>justify-content</em>]</td>
<td>Propiedad de atajo para *<strong>-content</strong></td>
</tr>
<tr>
<td><code>place-self</code></td>
<td>[<em>align-self</em>] [<em>justify-self</em>]</td>
<td>Propiedad de atajo para *<strong>-self</strong></td>
</tr>
</tbody>
</table>
<p>Con ellas conseguiremos que nuestro código sea más simple, menos texto y más directo:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 1fr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>2<span class="token punctuation">,</span> 1fr<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token property">place-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token comment">/* Equivale a... */</span>
  <span class="token property">justify-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>

  <span class="token property">place-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token comment">/* Equivale a... */</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item:first-child</span> <span class="token punctuation">{</span>
  <span class="token property">place-self</span><span class="token punctuation">:</span> end<span class="token punctuation">;</span>
  <span class="token comment">/* Equivale a... */</span>
  <span class="token property">justify-self</span><span class="token punctuation">:</span> end<span class="token punctuation">;</span>
  <span class="token property">align-self</span><span class="token punctuation">:</span> end<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h3 id="orden-de-los-elementos" tabindex="-1"><a class="header-anchor" href="#orden-de-los-elementos">Orden de los elementos</a></h3>
<p>Por último, tenemos la propiedad <code>order</code>. Funciona exactamente igual que como funciona en <strong>flex</strong>. Es una propiedad mediante la cual podemos modificar y establecer un orden de los elementos mediante números que actuarán como «peso» del elemento:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valor</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>order</code></td>
<td><strong>0</strong> | <badge-type class="number"></badge-type></td>
<td>Número (peso) que indica el orden de aparición de los ítems.</td>
</tr>
</tbody>
</table>
<p>Por defecto, todos los elementos hijos de un contenedor flex tienen establecido un <code>order</code> por defecto al valor <code>0</code>. Si indicamos una propiedad <code>order</code> con un valor numérico diferente, recolocará los ítems según dicho número, colocando antes los elementos con un número <code>order</code> más pequeño (<em>incluso números negativos</em>) y los elementos con números más altos después.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../grid-css/index.htm" title="Grid CSS: Introducción">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Grid CSS: Introducción</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../grid-css-areas/index.htm" title="Grid CSS: Grid por áreas">
  <div>
    <span>Grid CSS: Grid por áreas</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/K-nE-kZKLRw" title="¡NOVEDADES CSS! ¿Cuánto de este código CSS eres CAPAZ de reconocer?">
  <img loading="lazy" src="../../../vi/K-nE-kZKLRw/mqdefault.jpg" alt="¡NOVEDADES CSS! ¿Cuánto de este código CSS eres CAPAZ de reconocer?">
</a><a href="https://youtu.be/lM4eufOnKVA" title="Especificidad CSS: ¿Cómo evitar los !important?">
  <img loading="lazy" src="../../../vi/lM4eufOnKVA/mqdefault.jpg" alt="Especificidad CSS: ¿Cómo evitar los !important?">
</a><a href="https://youtu.be/W6fAzw3HoWg" title="Cómo crear GRADIENTES LINEALES en CSS">
  <img loading="lazy" src="../../../vi/W6fAzw3HoWg/mqdefault.jpg" alt="Cómo crear GRADIENTES LINEALES en CSS">
</a><a href="https://youtu.be/toA0uqeuHXQ" title="¿Qué es el CSS NESTING? ¿Cómo funciona?">
  <img loading="lazy" src="../../../vi/toA0uqeuHXQ/mqdefault.jpg" alt="¿Qué es el CSS NESTING? ¿Cómo funciona?">
</a><a href="https://youtu.be/esjagdcozX0" title="Flex CSS: ¡Aprendiendo las bases!">
  <img loading="lazy" src="../../../vi/esjagdcozX0/mqdefault.jpg" alt="Flex CSS: ¡Aprendiendo las bases!">
</a><a href="https://youtu.be/Wou2koTiIyU" title="Grid CSS: Centrar, distribuir y alinear elementos">
  <img loading="lazy" src="../../../vi/Wou2koTiIyU/mqdefault.jpg" alt="Grid CSS: Centrar, distribuir y alinear elementos">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="../../../postcss/index.htm" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/fundamentos/" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/javascript/" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/npm/" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/webcomponents/" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/vuejs/" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/automatizadores/" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/retos/" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
