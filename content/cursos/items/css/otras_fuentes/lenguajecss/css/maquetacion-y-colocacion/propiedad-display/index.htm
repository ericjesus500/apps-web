<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>La propiedad display - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Todos los elementos HTML tienen un tipo de representación. Con display en CSS podemos cambiarlos por otros tipos (inline, block, flex, grid...).">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="La propiedad display - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Todos los elementos HTML tienen un tipo de representación. Con display en CSS podemos cambiarlos por otros tipos (inline, block, flex, grid...).">
  <meta property="og:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/propiedad-display/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/maquetacion-y-colocacion/propiedad-display/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="La propiedad display - CSS en español">
  <meta property="twitter:description" content="Todos los elementos HTML tienen un tipo de representación. Con display en CSS podemos cambiarlos por otros tipos (inline, block, flex, grid...).">
  <meta property="twitter:image" content="https://lenguajecss.com/large-summary.jpg">

  </head>

<body class="css menu-open " style="--logo-color: #1e7bbf"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje CSS</h1>

    <a class="cover" title="Lenguaje CSS (css)" href="../../index.htm" style="--image: url('../../../assets/css.jpg')"></a>

    <header>
      <a href="../../representacion-datos/tablas-css/index.htm" title="Tablas CSS">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../interacciones/contornos/index.htm" title="Contornos">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Maquetación y colocación
      </span>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La propiedad display
            </a>
            <a class="link" href="../posicionamiento-css/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La propiedad position
            </a>
            <a class="link" href="../desplazamientos/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La propiedad float
            </a>
            <a class="link" href="../flex/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Flex CSS: Introducción
            </a>
            <a class="link" href="../flex-alinear/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Flex CSS: Alinear elementos
            </a>
            <a class="link" href="../flex-organizar/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Flex CSS: Flexibilidad
            </a>
            <a class="link" href="../grid-css/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Introducción
            </a>
            <a class="link" href="../grid-css-alinear/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Alinear elementos
            </a>
            <a class="link" href="../grid-css-areas/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Grid por áreas
            </a>
            <a class="link" href="../grid-css-celdas-irregulares/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Celdas irregulares
            </a>
            <a class="link" href="../grid-css-lineas-nombradas/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Grid CSS: Líneas con nombre
            </a>
            <a class="link" href="../multi-column/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Multi-columnas CSS
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">La propiedad display</a></h1><h2 class="typewriter">Conceptos fundamentales de maquetación</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../../representacion-datos/contadores-css/index.htm">Contadores CSS</a>
    <a class="current" href="index.htm">La propiedad display</a>
    <a href="../posicionamiento-css/index.htm">La propiedad position</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p>Probablemente, una de las partes más complejas de CSS sea la creación de layouts, colocación y distribución de los elementos de una página. Sin embargo, es una parte fundamental dentro de CSS, y es necesario entenderla correctamente para que resulte más fácil de trabajar y crear nuestros diseños.</p>
<h3 id="qué-es-inline-y-block" tabindex="-1"><a class="header-anchor" href="#qué-es-inline-y-block">¿Qué es <code>inline</code> y <code>block</code>?</a></h3>
<p>Antes de comenzar, debemos saber que cada <strong>etiqueta HTML</strong> tiene un «tipo de representación visual» en el navegador, lo que habitualmente se suele denominar el <strong>tipo de caja</strong>. Si no sabes nada sobre esto, te aconsejo echarle un vistazo antes al apartado <a href="../../modelo-de-cajas/que-es/index.htm">Modelo de cajas</a>.</p>
<p>Volviendo al tema, todos los elementos de una página web deben tener un <strong>tipo de representación</strong>, que es la forma en la que se va a comportar. En principio, partimos de dos tipos básicos y fundamentales llamados <code>inline</code> y <code>block</code>.</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Denominación</th>
<th>Significado</th>
<th>Ejemplo</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>inline</code></td>
<td>Elemento en línea</td>
<td>El elemento se coloca a continuación del otro (en horizontal).</td>
<td><code>&lt;span&gt;</code></td>
</tr>
<tr>
<td><code>block</code></td>
<td>Elemento en bloque</td>
<td>El elemento se coloca encima de otro (en vertical).</td>
<td><code>&lt;div&gt;</code></td>
</tr>
</tbody>
</table>
<p>Como se menciona en la tabla anterior, por defecto, todos los elementos <code>&lt;div&gt;</code> se comportan como elementos de bloque (<em>block</em>) y todos los elementos <code>&lt;span&gt;</code> se comportan como elementos en línea (<em>inline</em>). Para entender esto facilmente, crea un documento HTML con 3 etiquetas <code>&lt;div&gt;</code> como las siguientes:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Elemento 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Elemento 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Elemento 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Con esto observaremos que en nuestro navegador nos aparecen 3 cajas azules colocadas en vertical (<em>una debajo de otra</em>) que cubren todo el ancho disponible de la página. Esto ocurre porque la etiqueta <code>&lt;div&gt;</code> es un elemento en bloque, o lo que es lo mismo, un elemento que se apila uno encima de otro y ocupan todo el ancho de su contenedor padre. Cada etiqueta HTML tiene un tipo de representación concreta.</p>
<p>El comportamiento de los elementos HTML puede cambiarse mediante la propiedad CSS <code>display</code>. Por ejemplo, añadir <code>display: inline</code> en el ejemplo anterior y veremos como pasan a ser 3 cajas azules colocadas en horizontal (<em>una al lado de la otra</em>), cubriendo sólamente el ancho del contenido de cada una. Esto ocurre porque los <code>&lt;div&gt;</code> han pasado a comportarse como <strong>elementos en línea</strong> (<em>el tipo de representación visual que tienen los <code>&lt;span&gt;</code> por defecto</em>).</p>
<h3 id="la-propiedad-display" tabindex="-1"><a class="header-anchor" href="#la-propiedad-display">La propiedad <code>display</code></a></h3>
<p>Recordemos que, por defecto, cada elemento HTML tiene un tipo de representación concreto. Como norma general (<em>con excepciones</em>) los elementos que se utilizan dentro de un párrafo, son de tipo <code>inline</code>, mientras que los que se utilizan para agrupar, son de tipo <code>block</code>. La propiedad <code>display</code> de CSS permite modificar el comportamiento de un elemento HTML, cambiándolo al que le indiquemos, como por ejemplo <code>inline</code> o <code>block</code> (<em>u otro de los que veremos más adelante</em>).</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valores</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>display</code></td>
<td>none | <em>tipo</em></td>
<td>Cambia el tipo de representación del elemento al indicado.</td>
</tr>
</tbody>
</table>
<p>Existe una amplia gama de tipos de representación de elementos HTML que podemos utilizar mediante la propiedad <code>display</code>. Veamos cuales son en la siguiente tabla:</p>
<table>
<thead>
<tr>
<th>Tipo de caja</th>
<th>Características</th>
<th>Ver</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>block</code></td>
<td>Se apila en vertical. Ocupa todo el ancho disponible de su etiqueta contenedora.</td>
<td></td>
</tr>
<tr>
<td colspan="3">Versión en línea</td>
</tr>
<tr>
<td><code>inline</code></td>
<td>Se coloca en horizontal. Se adapta al ancho de su contenido. Ignora <code>width</code> o <code>height</code>.</td>
<td></td>
</tr>
<tr>
<td><code>inline-block</code></td>
<td>Combinación de los dos anteriores. Se comporta como <code>inline</code> pero no ignora <code>width</code> o <code>height</code>.</td>
<td></td>
</tr>
<tr>
<td colspan="3">Versión flexible</td>
</tr>
<tr>
<td><code>flex</code></td>
<td>Utiliza el modelo de <strong>cajas flexibles</strong> de CSS. Ideal para estructuras de 1 dimensión.</td>
<td><a href="../flex/index.htm">Ver Flexbox CSS</a></td>
</tr>
<tr>
<td><code>inline-flex</code></td>
<td>Versión en línea (ocupa sólo su contenido) del modelo de cajas flexibles de CSS.</td>
<td><a href="../flex/index.htm">Ver Flexbox CSS</a></td>
</tr>
<tr>
<td colspan="3">Versión de cuadrículas</td>
</tr>
<tr>
<td><code>grid</code></td>
<td>Utiliza cuadrículas o rejillas con el modelo de cajas Grid CSS.</td>
<td><a href="../grid-css/index.htm">Ver Grid CSS</a></td>
</tr>
<tr>
<td><code>inline-grid</code></td>
<td>La versión en línea (ocupa sólo su contenido) del modelo de cajas grid css.</td>
<td><a href="../grid-css/index.htm">Ver Grid CSS</a></td>
</tr>
<tr>
<td colspan="3">Versión de listas y tablas</td>
</tr>
<tr>
<td><code>list-item</code></td>
<td>Actúa como un ítem de una lista. Es el comportamiento de etiquetas como <code>&lt;li&gt;</code>.</td>
<td><a href="https://lenguajehtml.com/html/semantica/etiquetas-html-de-agrupacion/#listas">Ver listas HTML</a></td>
</tr>
<tr>
<td><code>table</code></td>
<td>Actúa como una tabla. Es el comportamiento de etiquetas como <code>&lt;table&gt;</code>.</td>
<td><a href="https://lenguajehtml.com/html/semantica/etiquetas-html-de-tablas/">Ver tablas HTML</a></td>
</tr>
<tr>
<td><code>table-cell</code></td>
<td>Actúa como la celda de una tabla. Es el comportamiento de etiquetas como <code>&lt;th&gt;</code> o <code>&lt;td&gt;</code>.</td>
<td><a href="https://lenguajehtml.com/html/semantica/etiquetas-html-de-tablas/">Ver tablas HTML</a></td>
</tr>
<tr>
<td><code>table-row</code></td>
<td>Actúa como la fila de una tabla. Es el comportamiento de etiquetas como <code>&lt;tr&gt;</code>.</td>
<td><a href="https://lenguajehtml.com/html/semantica/etiquetas-html-de-tablas/">Ver tablas HTML</a></td>
</tr>
<tr>
<td colspan="3">Otros</td>
</tr>
<tr>
<td><code>contents</code></td>
<td>Ignora la caja del elemento. Útil para mantener Grid/Flex aún teniendo un wrapper intermedio.</td>
<td></td>
</tr>
<tr>
<td><code>none</code></td>
<td>Oculta el elemento visualmente, como si no existiera en el HTML.</td>
<td></td>
</tr>
</tbody>
</table>
<p>Como se puede observar, mediante la propiedad <code>display</code> podemos establecer diferentes mecanismos de maquetación, desde los básicos <code>block</code> e <code>inline</code> que hemos mencionado, pero tenemos muchos más.</p>
<h4 id="el-valor-inline-block" tabindex="-1"><a class="header-anchor" href="#el-valor-inline-block">El valor <code>inline-block</code></a></h4>
<p>Si utilizamos la propiedad <code>display</code> con el valor <code>inline-block</code>, conseguiremos un elemento que funcionará como si fuera un elemento <code>inline</code>, pero haciendo caso a las propiedades <code>width</code> y <code>height</code>, las cuales se ignoran si estamos utilizando un <code>display: inline</code>.</p>
<pre class="language-css "><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> steelblue<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Elemento 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Elemento 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Esto nos puede venir muy bien cuando necesitamos una mezcla de los dos tipos básicos.</p>
<h4 id="el-valor-contents" tabindex="-1"><a class="header-anchor" href="#el-valor-contents">El valor <code>contents</code></a></h4>
<p>Para este ejemplo, necesitaremos conocer previamente <code>flex</code> o <code>grid</code>. Utilizando <code>display</code> se puede conseguir un comportamiento muy especial, que puede ser realmente útil en algunas ocasiones, sobre todo cuando trabajamos con librerías de terceros, WebComponents o con Javascript (<em>o ciertos frameworks</em>).</p>
<p>Hay situaciones donde se puede arruinar el diseño de maquetaciones <strong>Grid</strong> o <strong>Flex</strong>, porque son sistemas que funcionan relacionando un elemento padre con su hijo, por lo que si se cambia el marcado HTML de forma que se rompa esa relación, el diseño deja de ser efectivo.</p>
<p>Imaginemos la siguiente situación, donde tenemos un layout creado con <strong>Grid</strong>:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.grid</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 200px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>2<span class="token punctuation">,</span> 100px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">gap</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> deeppink<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item-5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item item-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Si introducimos un elemento con clase <code>.middle</code> dentro del <code>.grid</code>, que envuelva a todos los <code>.item</code>, el <strong>grid</strong> dejaría de funcionar porque se ha eliminado la relación padre-hijo entre <code>.grid</code> y los elementos <code>.item</code>. Sin embargo, si añadimos un <code>.middle</code> con un CSS asociado <code>.middle { display: contents }</code>, el navegador ignorará ese elemento intermedio que insertamos por razones de funcionalidad (<em>normalmente en situaciones de sólo diseño no ocurre</em>) y hará como que no existe.</p>
<h4 id="otros-valores" tabindex="-1"><a class="header-anchor" href="#otros-valores">Otros valores</a></h4>
<p>Mediante la propiedad <code>display</code> también podemos utilizar <code>flex</code>, <code>grid</code>, <code>list-item</code> o <code>table</code> (<em>o cualquiera de sus derivados</em>). Para comprender como funcionan, es recomendable acceder a su sección específica, donde se explicará más en profundidad.</p>
<h3 id="visibilidad" tabindex="-1"><a class="header-anchor" href="#visibilidad">Visibilidad</a></h3>
<p>Existen múltiples formas de ocultar elementos del HTML, de forma que se ocultan visualmente pero el marcado de etiquetas HTML continua existiendo en la página. Vamos a explicar cada una de ellas:</p>
<table>
<thead>
<tr>
<th>Propiedad</th>
<th>Valores</th>
<th>Descripción</th>
<th>Más info</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>display</code></td>
<td>none</td>
<td>Oculta de forma visual y por completo el elemento indicado.</td>
<td></td>
</tr>
<tr>
<td><code>visibility</code></td>
<td><strong>visible</strong> | hidden | collapse<sup>*</sup></td>
<td>Oculta un elemento manteniendo su espacio visual.</td>
<td></td>
</tr>
<tr>
<td><code>opacity</code></td>
<td><strong>1</strong> | <badge-type class="percent"></badge-type></td>
<td>Opacidad del elemento, medido en valores numéricos o porcentajes.</td>
<td><a href="../../imagenes-y-fondos/propiedad-opacity/index.htm">Ver opacity</a></td>
</tr>
</tbody>
</table>
<h4 id="la-propiedad-display-none" tabindex="-1"><a class="header-anchor" href="#la-propiedad-display-none">La propiedad <code>display: none</code></a></h4>
<p>Quizás, la forma más habitual de ocultar un elemento es utilizar el valor <code>none</code> de la propiedad <code>display</code>. Esto hace que el navegador ignore por completo ese elemento, no mostrándolo visualmente. Sin embargo, existen algunas otras formas con ciertas diferencias y matices.</p>
<h4 id="la-propiedad-visibility" tabindex="-1"><a class="header-anchor" href="#la-propiedad-visibility">La propiedad <code>visibility</code></a></h4>
<p>Existe una propiedad CSS llamada <code>visibility</code> que podemos utilizar con el valor <code>hidden</code>. Realiza una acción similar a <code>display: none</code> con la ligera diferencia de que no sólo oculta el elemento, sino que además mantiene el «hueco», el espacio vacío (<em>con el mismo tamaño que cuando se mostraba</em>).</p>
<p>Dicha propiedad <code>visibility</code> tiene los siguientes valores posibles:</p>
<table>
<thead>
<tr>
<th>Valor</th>
<th>Significado</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>visible</strong></td>
<td>El elemento es visible. Valor por defecto.</td>
</tr>
<tr>
<td><code>hidden</code></td>
<td>El elemento no es visible pero sigue ocupando su espacio y posición.</td>
</tr>
<tr>
<td><code>collapse</code></td>
<td>Sólo para tablas. El elemento se contrae para no ocupar espacio.</td>
</tr>
</tbody>
</table>
<p>Utilizar <code>visibility: hidden</code> es muy interesante si queremos que un elemento y su contenido se vuelva invisible, pero siga ocupando su espacio y así evitar que los elementos adyacentes se desplacen, lo que suele ser un comportamiento no deseado en muchas ocasiones.</p>
<h4 id="la-propiedad-opacity" tabindex="-1"><a class="header-anchor" href="#la-propiedad-opacity">La propiedad <code>opacity</code></a></h4>
<p>Por otro lado, otra opción interesante y relacionada podría ser la posibilidad de utilizar la propiedad <code>opacity</code>, especialmente útil si se utiliza junto a transiciones o animaciones.</p>
<p>La propiedad <code>opacity</code> permite indicar valores numéricos desde <strong>0</strong> a <strong>1</strong>, pudiendo indicar decimales. Si lo prefieres, puedes utilizar valores en porcentaje, de modo que el valor <strong>0.5</strong> es equivalente a usar <strong>50%</strong>. Estos valores, al ser cuantificables, el navegador sabe perfectamente como transicionarlos o animarlos y se pueden hacer efectos donde elementos aparezcan o se desvanezcan gradualmente.</p>
<blockquote>
<blockquote>
<p>Tienes más información detallada en el artículo dedicado a la <a href="../../imagenes-y-fondos/propiedad-opacity/index.htm">propiedad opacity</a> y el artículo donde hablamos de las <a href="../../animaciones/transiciones/index.htm">transiciones CSS</a>.</p>
</blockquote>
</blockquote>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../../representacion-datos/contadores-css/index.htm" title="Contadores CSS">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Contadores CSS</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../posicionamiento-css/index.htm" title="La propiedad position">
  <div>
    <span>La propiedad position</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/984ry_jsExA" title="CÓMO hacer la ANIMACIÓN del header de Manz.dev">
  <img loading="lazy" src="../../../vi/984ry_jsExA/mqdefault.jpg" alt="CÓMO hacer la ANIMACIÓN del header de Manz.dev">
</a><a href="https://youtu.be/hju7SXmiK7Y" title="Cómo crear SOMBRAS DE TEXTO (text-shadow)">
  <img loading="lazy" src="../../../vi/hju7SXmiK7Y/mqdefault.jpg" alt="Cómo crear SOMBRAS DE TEXTO (text-shadow)">
</a><a href="https://youtu.be/8tTMYgHBQPI" title="Analizando las preguntas del STATE OF CSS 2022">
  <img loading="lazy" src="../../../vi/8tTMYgHBQPI/mqdefault.jpg" alt="Analizando las preguntas del STATE OF CSS 2022">
</a><a href="https://youtu.be/esjagdcozX0" title="Flex CSS: ¡Aprendiendo las bases!">
  <img loading="lazy" src="../../../vi/esjagdcozX0/mqdefault.jpg" alt="Flex CSS: ¡Aprendiendo las bases!">
</a><a href="https://youtu.be/0sFtRnbe0fo" title="Novedades de CSS: Dr. CSStrange y el multiverso">
  <img loading="lazy" src="../../../vi/0sFtRnbe0fo/mqdefault.jpg" alt="Novedades de CSS: Dr. CSStrange y el multiverso">
</a><a href="https://youtu.be/Wou2koTiIyU" title="Grid CSS: Centrar, distribuir y alinear elementos">
  <img loading="lazy" src="../../../vi/Wou2koTiIyU/mqdefault.jpg" alt="Grid CSS: Centrar, distribuir y alinear elementos">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="../../../postcss/index.htm" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/fundamentos/" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/javascript/" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/npm/" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/webcomponents/" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/vuejs/" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/automatizadores/" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/retos/" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
