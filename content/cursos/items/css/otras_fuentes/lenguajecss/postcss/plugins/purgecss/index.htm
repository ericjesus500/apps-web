<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>PurgeCSS: CSS no utilizado - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="En CSS es muy común olvidarse de eliminar código CSS que ya no se usa. PurgeCSS es una herramienta para eliminar código CSS muerto de nuestros proyectos.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="PurgeCSS: CSS no utilizado - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/postcss/plugins/purgecss/purgecss.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="En CSS es muy común olvidarse de eliminar código CSS que ya no se usa. PurgeCSS es una herramienta para eliminar código CSS muerto de nuestros proyectos.">
  <meta property="og:url" content="https://lenguajecss.com/postcss/plugins/purgecss/">
  <meta property="twitter:url" content="https://lenguajecss.com/postcss/plugins/purgecss/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="PurgeCSS: CSS no utilizado - CSS en español">
  <meta property="twitter:description" content="En CSS es muy común olvidarse de eliminar código CSS que ya no se usa. PurgeCSS es una herramienta para eliminar código CSS muerto de nuestros proyectos.">
  <meta property="twitter:image" content="https://lenguajecss.com/postcss/plugins/purgecss/purgecss.jpg">

  </head>

<body class="css menu-open " style="--logo-color: #972321"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje CSS</h1>

    <a class="cover" title="Lenguaje CSS (postcss)" href="../../index.htm" style="--image: url('../../../assets/postcss.jpg')"></a>

    <header>
      <a href="../../introduccion/que-es/index.htm" title="¿Qué es PostCSS?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="" title="">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Plugins de PostCSS
      </span>
            <a class="link" href="../autoprefixer/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Autoprefixer: Prefijos CSS
            </a>
            <a class="link" href="../css-nesting/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              CSS Nesting: CSS anidado
            </a>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              PurgeCSS: CSS no utilizado
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/postcss.jpg')">
    <h1><a href="index.htm">PurgeCSS: CSS no utilizado</a></h1></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../css-nesting/index.htm">CSS Nesting: CSS anidado</a>
    <a class="current" href="index.htm">PurgeCSS: CSS no utilizado</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p>La <strong>naturaleza de CSS</strong> (<em>sobre todo cuando no se usan estrategias de organización o arquitecturas</em>) unida a los frenéticos <strong>ritmos de desarrollo</strong>, suelen provocar que los desarrolladores adquieran muy malas prácticas que hacen que el código CSS se vuelva <strong>muy difícil de mantener</strong>.</p>
<p><img src="purgecss.jpg" alt="PurgeCSS: Código CSS no utilizado" width="1024" height="600" loading="lazy"></p>
<h3 id="qué-es-el-código-muerto" tabindex="-1"><a class="header-anchor" href="#qué-es-el-código-muerto">¿Qué es el código muerto?</a></h3>
<p>A medida que van creciendo nuestros proyectos y realizamos modificaciones en los elementos HTML y estructuras de páginas de nuestro proyecto, es muy habitual que el código CSS permanezca y no se borre del proyecto (<em>el clásico «lo dejo por si acaso»</em>), generando el denominado <strong>código CSS muerto</strong> (<em>código CSS no utilizado</em>).</p>
<blockquote>
<p>El <strong>código CSS muerto</strong> engorda el tamaño de los ficheros de CSS, no es de utilidad y, por si fuera poco, dependiendo de la especificidad y nombrado de elementos CSS es muy posible que introduzca potenciales errores. Hay que intentar ser muy organizado y evitarlo.</p>
</blockquote>
<h3 id="cómo-detecto-código-muerto" tabindex="-1"><a class="header-anchor" href="#cómo-detecto-código-muerto">¿Cómo detecto código muerto?</a></h3>
<p>En pequeños proyectos puede resultar sencillo (<em>incluso podemos revisarlo manualmente</em>), pero en proyectos grandes <strong>detectar código muerto</strong> puede ser una tarea muy complicada, sobretodo si utilizamos enfoques de CSS global sin una arquitectura concreta.</p>
<blockquote>
<blockquote>
<p>Uno de los mejores métodos para <strong>prevenir la creación de código muerto</strong> que mejor funcionan hoy en día, es crear <a href="https://lenguajejs.com/webcomponents/">componentes</a>, ya que vuelve mucho más fácil mantener código HTML, CSS y Javascript asociado a estructuras relacionadas.</p>
</blockquote>
</blockquote>
<p>Una de las formas rápidas de visualizar el código CSS o Javascript que está siendo utilizado al navegar por una página, es la característica <strong>CSS/JS Coverage</strong> (<em>Cubrimiento CSS/JS</em>) de Google Chrome.</p>
<p>Para acceder a esta sección, pulsamos <kbd>CTRL</kbd>+<kbd>SHIFT</kbd>+<kbd>I</kbd> y accedemos al <strong>Inspector de Elementos</strong>. El menú de los <strong>tres puntos</strong>, seleccionamos <strong>More tools</strong> / <strong>Coverage</strong>. Nos aparecerá un nuevo panel, donde deberemos pulsar el botón para volver a recargar la página utilizando esta funcionalidad.</p>
<p><img src="google-chrome-coverage.png" alt="Google Chrome: Coverage" width="1277" height="777" loading="lazy"></p>
<p>Observaremos que nos aparecen una lista de archivos (<em>CSS y Javascript</em>) junto a unas franjas donde se nos muestra en <strong>rojo</strong> la cantidad de código no utilizado y en <strong>azul</strong> el código utilizado.</p>
<blockquote>
<blockquote>
<blockquote>
<p>Hay que tener mucho cuidado con esto, ya que el navegador va actualizando esta información a medida que usamos la página (<em>scroll, botones, acciones...</em>), por lo que es muy probable que haya código que se va «<strong>descubriendo</strong>» y reflejando a medida que lo utilizamos.</p>
</blockquote>
</blockquote>
</blockquote>
<h3 id="eliminación-de-código-css-muerto" tabindex="-1"><a class="header-anchor" href="#eliminación-de-código-css-muerto">Eliminación de código CSS muerto</a></h3>
<p>Sin embargo, aunque la funcionalidad <strong>Coverage</strong> es una forma genial de hacernos una idea de si algún fragmento de código se utiliza al realizar una acción en una parte concreta de nuestra web, probablemente nos gustaría alguna forma un poco más automática de eliminar código muerto de nuestra página.</p>
<p>Existen varias herramientas que analizan el código HTML/JS de nuestro proyecto y luego comparan con el CSS en busca de <strong>código CSS no utilizado</strong>. Esto es especialmente útil cuando se utilizan frameworks pesados que tienen gran cantidad de reglas que muchas veces no se utilizan.</p>
<p>Los plugins de <strong>eliminación de código CSS no utilizado</strong> más populares son los siguientes:</p>
<table>
<thead>
<tr>
<th>Plugin</th>
<th>Autor</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/FullHuman/purgecss">PurgeCSS</a></td>
<td>FullHuman</td>
<td>Elimina código CSS no utilizado. Plugins para PostCSS, Webpack, Gulp, Grunt y Gatsby.</td>
</tr>
<tr>
<td><a href="https://github.com/uncss/uncss">UnCSS</a></td>
<td>uncss</td>
<td>Elimina código CSS no utilizado. Usa PostCSS. Plugins para Grunt, Gulp y Broccoli.</td>
</tr>
<tr>
<td><a href="https://github.com/purifycss/purifycss">PurifyCSS</a></td>
<td>purifycss</td>
<td>Elimina código CSS no utilizado. Plugins para Grunt, Gulp y Webpack.</td>
</tr>
</tbody>
</table>
<p>La herramienta que parece tener mejor soporte y que más se actualiza es <strong>PurgeCSS</strong>, que es la que utilizaremos en este artículo.</p>
<h3 id="instalación-de-purgecss" tabindex="-1"><a class="header-anchor" href="#instalación-de-purgecss">Instalación de PurgeCSS</a></h3>
<p>Para instalar y configurar <strong>PurgeCSS</strong>, primero debemos instalar el paquete en nuestro proyecto, como dependencia de desarrollo:</p>
<pre class="language-bash "><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev postcss-purgecss</code></pre>
<p>Una vez hecho esto, editaremos nuestro fichero de configuración <code>postcss.config.js</code> y añadimos el plugin. Generalmente, <code>purgecss</code> es un plugin que se aplica al principio, para eliminar el máximo posible de CSS no utilizado y agilizar el trabajo con él:</p>
<pre class="language-js "><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">"plugins"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">"postcss-purgecss"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/**/*.html"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/**/*.css"</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>En la variable <code>css</code> podemos incluir las rutas de nuestro framework CSS. <strong>PurgeCSS</strong> es muy utilizado con frameworks como <a href="https://tailwindcss.com/">TailwindCSS</a>, por ejemplo. Observa, que al contrario de muchos plugins que hemos visto, <code>purgecss</code> no sólo se establece un <code>true</code> para activarlo, sino que hay que indicar varios parámetros de configuración:</p>
<table>
<thead>
<tr>
<th>Parámetro</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><badge-type class="array"></badge-type> <code>content</code></td>
<td>Indica las rutas donde tenemos contenido HTML o similar: <code>.jsx</code>, <code>.js</code>, <code>.vue</code>, etc...</td>
</tr>
<tr>
<td><badge-type class="array"></badge-type> <code>css</code></td>
<td>Indica las rutas donde tenemos nuestro contenido CSS a revisar.</td>
</tr>
<tr>
<td><badge-type class="function"></badge-type> <code>defaultExtractor</code></td>
<td>Permite definir un extractor de CSS personalizado.</td>
</tr>
<tr>
<td><badge-type class="array"></badge-type> <code>extractors</code></td>
<td>Permite definir un array de extractores de CSS personalizados.</td>
</tr>
<tr>
<td><badge-type class="boolean"></badge-type> <code>fontFace</code></td>
<td>Elimina reglas <code>@font-face</code> no utilizadas. Por defecto, <strong>false</strong>.</td>
</tr>
<tr>
<td><badge-type class="boolean"></badge-type> <code>keyframes</code></td>
<td>Elimina reglas <code>@keyframes</code> no utilizadas. Por defecto, <strong>false</strong>.</td>
</tr>
<tr>
<td><badge-type class="boolean"></badge-type> <code>variables</code></td>
<td>Elimina <a href="../../../css/cascada-css/css-custom-properties/index.htm">custom properties</a> no utilizadas. Por defecto, <strong>false</strong>.</td>
</tr>
<tr>
<td><badge-type class="boolean"></badge-type> <code>rejected</code></td>
<td>Analiza el código eliminado para detectar errores. Por defecto, <strong>false</strong>.</td>
</tr>
<tr>
<td><badge-type class="array"></badge-type> <code>whitelist</code></td>
<td>Indica selectores CSS que no deben ser eliminados.</td>
</tr>
</tbody>
</table>
<p>Además de <code>whitelist</code>, también tenemos <code>whitelistPatterns</code> y <code>whitelistPatternsChildren</code>, que son <badge-type class="array"></badge-type> de <badge-type class="regexp"></badge-type> que permiten aprovechar la potencia de las expresiones regulares para crear <strong>whitelists</strong> más flexibles.</p>
<h3 id="eliminando-css-no-utilizado" tabindex="-1"><a class="header-anchor" href="#eliminando-css-no-utilizado">Eliminando CSS no utilizado</a></h3>
<p>Una vez lo tengamos todo instalado y configurado, vamos a hacer una prueba para comprobar si funciona correctamente. Creamos un archivo <code>src/css/index.css</code> (<em>que realmente es PostCSS</em>):</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.warning</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.notused</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>En este archivo, existen tres clases: <code>.item</code>, <code>.warning</code> y <code>.notused</code>. Las dos primeras existirán en nuestro proyecto, pero la última no. Vamos a comprobar si <code>purgecss</code> elimina ese código muerto del proyecto. Creamos el fichero <code>src/index.html</code>:</p>
<pre class="language-html "><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>PostCSS example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/index.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item #1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Warning!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>
<blockquote>
<blockquote>
<p>Recuerda que es muy importante asegurarse de tener las opciones <code>content</code> y <code>css</code> indicando todas las rutas con los ficheros implicados en el fichero <code>postcss.config.js</code>.</p>
</blockquote>
</blockquote>
<p>Ahora, solo tendríamos que ejecutar <strong>PostCSS</strong> para ponerlo a funcionar todo:</p>
<pre class="language-bash "><code class="language-bash">$ npx postcss src/css/index.css --no-map</code></pre>
<p>Si todo ha ido bien, esto nos devolverá el siguiente código CSS:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.warning</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Como vemos, ha suprimido la clase <code>.notused</code> porque no ha encontrado ninguna referencia en el código HTML de <code>content</code>. Recuerda que si trabajas con framework o librerías como <code>Vue</code> o <code>React</code>, debes también incluir los archivos <code>.jsx</code> o <code>.vue</code>, ya que pueden incluir clases en ellos.</p>
<h3 id="eliminar-css-sólo-en-producción" tabindex="-1"><a class="header-anchor" href="#eliminar-css-sólo-en-producción">Eliminar CSS sólo en producción</a></h3>
<p>El proceso de eliminar el CSS no utilizado se realiza cada vez que creamos una nueva versión de nuestro proyecto, y cuando tenemos un servidor de desarrollo, esto suele ocurrir cada vez que modificamos nuestro código. Si nuestro código CSS es muy extenso, es muy posible que este proceso de eliminación de CSS no utilizado sea lento, por lo que puede ser molesto que se realice frecuentemente.</p>
<p>En principio, en desarrollo, eliminar el CSS no utilizado no nos aporta demasiado por lo que podríamos hacer algo para eliminarlo sólo cuando generemos la versión de producción. Esto es muy sencillo si estamos utilizando el fichero de configuración <code>postcss.config.js</code>:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">const</span> purgecssOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/**/*.html"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/**/*.css"</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">"plugins"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">"postcss-purgecss"</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"production"</span> <span class="token operator">?</span> purgecssOptions <span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>Observa que lo que hemos hecho es extraer las opciones de <code>purgecss</code> a un objeto <code>purgecssOptions</code>. En su lugar, utilizamos un <a href="https://lenguajejs.com/javascript/introduccion/estructuras-de-control/#operador-ternario">operador ternario</a>, que comprueba el valor de <code>process.env.NODE_ENV</code> que es una variable de entorno de Node que indica si estamos en modo de desarrollo o en modo de producción.</p>
<blockquote>
<blockquote>
<p>La variable de entorno <code>NODE_ENV</code> es un convenio que se suele utilizar, donde se suele tener valores como <code>production</code> o <code>prod</code> cuando estamos realizando tareas de producción, y <code>development</code> o <code>dev</code> cuando estamos realizando tareas de desarrollo. No obstante, esto depende de nosotros y de como configuremos estas fases.</p>
</blockquote>
</blockquote>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../css-nesting/index.htm" title="CSS Nesting: CSS anidado">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>CSS Nesting: CSS anidado</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="../../../css/index.htm" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/fundamentos/" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/javascript/" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/npm/" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/webcomponents/" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/vuejs/" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/automatizadores/" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/retos/" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/984ry_jsExA" title="CÓMO hacer la ANIMACIÓN del header de Manz.dev">
  <img loading="lazy" src="../../../vi/984ry_jsExA/mqdefault.jpg" alt="CÓMO hacer la ANIMACIÓN del header de Manz.dev">
</a><a href="https://youtu.be/esjagdcozX0" title="Flex CSS: ¡Aprendiendo las bases!">
  <img loading="lazy" src="../../../vi/esjagdcozX0/mqdefault.jpg" alt="Flex CSS: ¡Aprendiendo las bases!">
</a><a href="https://youtu.be/bMiXLfOnuUA" title="ECSStatic: Librería CSS-in-JS">
  <img loading="lazy" src="../../../vi/bMiXLfOnuUA/mqdefault.jpg" alt="ECSStatic: Librería CSS-in-JS">
</a><a href="https://youtu.be/mNTj6KfYeXc" title="Cómo crear GRADIENTES CÓNICOS en CSS">
  <img loading="lazy" src="../../../vi/mNTj6KfYeXc/mqdefault.jpg" alt="Cómo crear GRADIENTES CÓNICOS en CSS">
</a><a href="https://youtu.be/pJGEELsEM1w" title="Consejos y buenas prácticas (III): CSS">
  <img loading="lazy" src="../../../vi/pJGEELsEM1w/mqdefault.jpg" alt="Consejos y buenas prácticas (III): CSS">
</a><a href="https://youtu.be/0sFtRnbe0fo" title="Novedades de CSS: Dr. CSStrange y el multiverso">
  <img loading="lazy" src="../../../vi/0sFtRnbe0fo/mqdefault.jpg" alt="Novedades de CSS: Dr. CSStrange y el multiverso">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="../../../css/index.htm" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/fundamentos/" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/javascript/" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/npm/" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/webcomponents/" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/vuejs/" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/automatizadores/" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/retos/" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
