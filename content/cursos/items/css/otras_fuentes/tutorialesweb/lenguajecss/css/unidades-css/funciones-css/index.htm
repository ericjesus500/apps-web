<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Funciones matemáticas CSS - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="En CSS existen expresiones como calc(), min(), max() o clamp() que permiten realizan operaciones interesantes con unidades de forma muy cómoda.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Funciones matemáticas CSS - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/css/unidades-css/unidades-css.png">
  <meta property="og:type" content="article">
  <meta property="og:description" content="En CSS existen expresiones como calc(), min(), max() o clamp() que permiten realizan operaciones interesantes con unidades de forma muy cómoda.">
  <meta property="og:url" content="https://lenguajecss.com/css/unidades-css/funciones-css/">
  <meta property="twitter:url" content="https://lenguajecss.com/css/unidades-css/funciones-css/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Funciones matemáticas CSS - CSS en español">
  <meta property="twitter:description" content="En CSS existen expresiones como calc(), min(), max() o clamp() que permiten realizan operaciones interesantes con unidades de forma muy cómoda.">
  <meta property="twitter:image" content="https://lenguajecss.com/css/unidades-css/unidades-css.png">

  </head>

<body class="css menu-open " style="--logo-color: #1e7bbf"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje CSS</h1>

    <a class="cover" title="Lenguaje CSS (css)" href="../../index.htm" style="--image: url('../../../assets/css.jpg')"></a>

    <header>
      <a href="../../cascada-css/herencia-css/index.htm" title="Herencia en CSS">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../modelo-de-cajas/que-es/index.htm" title="Modelo de cajas">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Unidades CSS
      </span>
            <a class="link" href="../que-son/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              ¿Qué son y para que sirven?
            </a>
            <a class="link" href="../absolutas/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Unidades absolutas
            </a>
            <a class="link" href="../relativas/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Unidades relativas
            </a>
            <a class="link" href="../relativas-viewport/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Unidades del viewport
            </a>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Funciones matemáticas CSS
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#css"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeCSS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/css.jpg')">
    <h1><a href="index.htm">Funciones matemáticas CSS</a></h1><h2 class="typewriter">Funciones CSS para calcular cantidades específicas</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../relativas-viewport/index.htm">Unidades del viewport</a>
    <a class="current" href="index.htm">Funciones matemáticas CSS</a>
    <a href="../../modelo-de-cajas/que-es/index.htm">Modelo de cajas</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <h3 id="qué-es-una-función-css" tabindex="-1"><a class="header-anchor" href="#qué-es-una-función-css">¿Qué es una función CSS?</a></h3>
<p>En CSS muchas veces necesitamos utilizar un mismo valor en varios lugares diferentes de nuestro código. Si lo hacemos indicando el valor en cuestión en cada uno de esos lugares, si en algún momento necesitamos cambiarlo, tendremos que cambiarlo en todos los lugares donde aparece, cuidando que no se nos olvide alguno o modifiquemos de forma errónea (<em>algo bastante habitual</em>). Por esta razón, con el tiempo, se han ido añadiendo mejoras, como las custom properties, un mecanismo similar a unas <a href="../../cascada-css/css-custom-properties/index.htm">variables CSS</a>.</p>
<p>Sin embargo, también tenemos un sistema de apoyo para realizar operaciones donde el navegador realiza los cálculos, en lugar de indicarlo de forma manual nosotros. Es un método más cercano a un lenguaje de programación que a un lenguaje de estilos, como pueden ser realizar <strong>cálculos</strong> o utilizar <strong>valores precalculados</strong>.</p>
<h3 id="funciones-css-matemáticas" tabindex="-1"><a class="header-anchor" href="#funciones-css-matemáticas">Funciones CSS matemáticas</a></h3>
<p>En este artículo vamos a ver ciertas <strong>funciones CSS</strong> matemáticas, que no son más que funciones de apoyo que podemos utilizar en CSS para realizar cálculos u operaciones sencillas de una forma fácil y sencilla, sin tener que abandonar CSS y/o recurrir a Javascript.</p>
<p>Un resumen rápido de las <strong>funciones CSS</strong> que veremos:</p>
<table>
<thead>
<tr>
<th>Función CSS</th>
<th>Descripción</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td colspan="4"><strong>Funciones de cálculos</strong></td>
</tr>
<tr>
<td><code>calc()</code></td>
<td colspan="2">Permite <strong>calcular operaciones</strong> con unidades CSS como <code>px</code>, <code>%</code>, <code>vw</code>, <code>vh</code> u otras (incluso combinadas)</td>
</tr>
<tr>
<td colspan="4"><strong>Funciones de comparación</strong></td>
</tr>
<tr>
<td><code>min()</code> / <code>max()</code></td>
<td colspan="2">Permite calcular el valor <strong>mínimo</strong> o <strong>máximo</strong> de las unidades indicadas.</td>
</tr>
<tr>
<td><code>clamp()</code></td>
<td colspan="2">Permite calcular valores «ajustados». Equivalente a <code>max(</code>MIN<code>, min(</code>VAL<code>, </code>MAX<code>))</code>.</td>
</tr>
<tr>
<td colspan="4"><strong>Funciones escalonadas</strong></td>
</tr>
<tr>
<td><code>round()</code> / <code>mod()</code> / <code>rem()</code></td>
<td colspan="2">Funciones que permiten redondear, obtener el módulo o el resto.</td>
</tr>
<tr>
<td colspan="4"><strong>Funciones trigonométricas</strong></td>
</tr>
<tr>
<td><code>sin()</code> / <code>cos()</code> / <code>tan()</code></td>
<td colspan="2">Permite obtener el <strong>seno</strong>, <strong>coseno</strong> o <strong>tangente</strong> de un valor.</td>
</tr>
<tr>
<td><code>asin()</code> / <code>acos()</code> / <code>atan()</code></td>
<td colspan="2">Permite obtener el <strong>arcoseno</strong>, <strong>arcocoseno</strong> o <strong>arcotangente</strong> de un valor.</td>
</tr>
<tr>
<td><code>atan2()</code></td>
<td colspan="2">Aplica la función <strong>arcotangente de dos parámetros</strong>.</td>
</tr>
<tr>
<td colspan="4"><strong>Funciones exponenciales</strong></td>
</tr>
<tr>
<td><code>pow()</code> / <code>sqrt()</code> / <code>hypot()</code></td>
<td colspan="2">Permite realizar potenciación, raíces cuadradas o hipotenusa.</td>
</tr>
<tr>
<td><code>log()</code> / <code>exp()</code></td>
<td colspan="2">Permite realizar logaritmos o potencias de <code>e</code>.</td>
</tr>
<tr>
<td colspan="4"><strong>Funciones de signo</strong></td>
</tr>
<tr>
<td><code>abs()</code></td>
<td colspan="2">Función para obtener el valor absoluto (sin signo) de un número.</td>
</tr>
<tr>
<td><code>sign()</code></td>
<td colspan="2">Función para saber que signo tiene un valor numérico.</td>
</tr>
<tr>
<td colspan="3"><strong>Otras</strong></td>
</tr>
<tr>
<td><code>e</code> / <code>pi</code> / <code>Infinity</code> / <code>NaN</code></td>
<td>Palabras clave que representan valores matemáticos.</td>
<td><a href="https://lenguajejs.com/javascript/number/objeto-math/">Ver constantes</a> o <a href="https://lenguajejs.com/javascript/number/que-es-nan/">NaN</a></td>
</tr>
<tr>
<td><code>attr()</code></td>
<td colspan="2">Permite obtener el <strong>valor de un atributo</strong> desde CSS.</td>
</tr>
</tbody>
</table>
<p>Comencemos a analizarlas detalladamente.</p>
<h3 id="cálculos-función-calc" tabindex="-1"><a class="header-anchor" href="#cálculos-función-calc">Cálculos: Función <code>calc()</code></a></h3>
<p>Es posible que en algunas ocasiones necesitemos indicar <strong>valores precalculados</strong> por el navegador, ya porque sea más cómodo o porque simplemente queremos hacer el código más organizado o fácil de mantener. Por ejemplo, la suma de dos valores que a priori desconocemos o no sabemos exactamente cuanto suman, pero que el navegador si puede calcularlo facilmente.</p>
<p>Esto es posible hacerlo con la función <code>calc()</code> de CSS, como se muestra a continuación:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.elemento</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>200px + 1em<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>elemento<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Como se puede ver, se pueden usar operaciones como sumas ( <code>+</code> ), restas ( <code>-</code> ), multiplicaciones ( <code>*</code> ) o divisiones ( <code>/</code> ) que utilicen alguna de las unidades soportadas por CSS, como por ejemplo, números, dimensiones, porcentajes, tiempos, ángulos, etc... Observa que incluso podemos mezclarlas. De la misma forma, también podemos utilizar <strong>variables CSS</strong>.</p>
<p><caniuse-support title="calc() as CSS unit value" feature="calc" edge="12/y" firefox="4/y" chrome="19/y" safari="6/y" opera="15/y" ios_saf="6.0-6.1/y" and_chr="118/y" and_ff="118/y">
</caniuse-support></p>
<p>Ten en cuenta que se pueden anidar funciones <code>calc()</code> una dentro de otra, o incluso crear nuevas variables aprovechando los ámbitos de las <a href="../../cascada-css/css-custom-properties/index.htm">Custom Properties</a>:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">:root</span> <span class="token punctuation">{</span>
  <span class="token property">--width</span><span class="token punctuation">:</span> 550px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">header</span> <span class="token punctuation">{</span>
  <span class="token property">--header-width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">var</span><span class="token punctuation">(</span>--width<span class="token punctuation">,</span> 500px<span class="token punctuation">)</span> / 2<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--header-width<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> indigo<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>Cabecera<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Párrafo de texto.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Observa que creamos una variable local <code>--header-width</code> con un valor basado en la variable global <code>--width</code>, por lo que si cambiamos el valor de <code>--width</code> se actualizarán los valores que dependan de ella automáticamente, y solo tendrán valor en el lugar que especifiquemos (<em>en este ejemplo, en los elementos <code>header</code></em>). En el caso de que no exista el valor <code>--width</code>, establece un valor base de <code>500px</code>.</p>
<h3 id="funciones-de-comparación" tabindex="-1"><a class="header-anchor" href="#funciones-de-comparación">Funciones de comparación</a></h3>
<h4 id="valor-mínimo-función-min" tabindex="-1"><a class="header-anchor" href="#valor-mínimo-función-min">Valor mínimo: Función <code>min()</code></a></h4>
<p>En algunas ocasiones, necesitaremos que en una propiedad se aplique un valor entre varias posibilidades posibles, y lo que te interesa es el valor <strong>más pequeño</strong>.</p>
<p>CSS permite realizar esto utilizando la función <code>min()</code> que nos permite elegir el valor más pequeño de 2 o más posibilidades aplicadas por parámetro:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 225px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.elemento</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">min</span><span class="token punctuation">(</span>200px<span class="token punctuation">,</span> 25%<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>elemento<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Esto aplicaría un <code>width</code> de <code>200px</code>, siempre y cuando el <code>25%</code> del elemento padre sea más grande de <code>200px</code>. Todo este cálculo, generalmente realizado en Javascript debido a su cualidad de lógica de cálculo, puede realizarse desde CSS si sólo se utiliza exclusivamente para esta finalidad.</p>
<blockquote>
<p>Recuerda que tanto la función <code>min()</code> como la función <code>max()</code> permite tener más de 2 parámetros, no tiene que tener obligatoriamente 2 parámetros.</p>
</blockquote>
<h4 id="valor-máximo-función-max" tabindex="-1"><a class="header-anchor" href="#valor-máximo-función-max">Valor máximo: Función <code>max()</code></a></h4>
<p>De la misma forma que tenemos una función <code>min()</code>, también tenemos una función <code>max()</code>. Como podemos imaginar, dicha función sirve para lo opuesto de la función <code>min()</code>: obtener el valor máximo entre varias posibilidades. Observa el siguiente ejemplo, donde utilizamos en este caso <strong>más de 2 parámetros</strong>:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 225px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.elemento</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span>200px - 100px<span class="token punctuation">,</span> 25%<span class="token punctuation">,</span> 14vw<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>elemento<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<blockquote>
<p>Observa que como se ve en el ejemplo en <code>200px - 100px</code>, tanto en <code>min()</code> como en <code>max()</code>, puedes realizar operaciones directamente en su interior sin necesidad de utilizar la función <code>calc()</code>.</p>
</blockquote>
<h4 id="valor-ajustado-función-clamp" tabindex="-1"><a class="header-anchor" href="#valor-ajustado-función-clamp">Valor ajustado: Función <code>clamp()</code></a></h4>
<p>Ahora pensemos en un nuevo caso que podría ocurrir. Imagina que necesitas indicar un valor específico, con una unidad relativa, pero a la que le quieres establecer un mínimo y un máximo. Con la función <code>clamp()</code> podemos realizar, de forma concisa la operación <code>max(MIN, min(VAL, MAX))</code> y crear valores flexibles pero con un mínimo y un máximo establecido.</p>
<p>Veamos un ejemplo:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 225px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.element</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">clamp</span><span class="token punctuation">(</span>100px<span class="token punctuation">,</span> 25%<span class="token punctuation">,</span> 300px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span>100px<span class="token punctuation">,</span> <span class="token function">min</span><span class="token punctuation">(</span>25%<span class="token punctuation">,</span> 300px<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> navy<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>elemento<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Observa que existen dos líneas con un <code>width</code>. Ambas líneas son equivalentes. El primer valor de <code>clamp()</code> sería el <strong>valor mínimo</strong>, mientras que el tercero es el <strong>valor máximo</strong>. De esta forma, el navegador realiza lo siguiente:</p>
<ul>
<li>Obtiene el <strong>valor mínimo</strong> entre el segundo y tercer parámetro.</li>
<li>Obtiene el <strong>valor máximo</strong> entre el primer parámetro y el resultado anterior.</li>
<li>Utiliza el resultado de la operación anterior en el <code>width</code>.</li>
</ul>
<p>El soporte en navegadores de estas 3 últimas <strong>funciones de comparación</strong> es el siguiente:</p>
<p><caniuse-support title="CSS math functions min(), max() and clamp()" feature="css-math-functions" edge="79/y" firefox="75/y" chrome="79/y" safari="13.1/y" opera="66/y" ios_saf="13.4-13.7/y" and_chr="118/y" and_ff="118/y">
</caniuse-support></p>
<h3 id="funciones-escalonadas" tabindex="-1"><a class="header-anchor" href="#funciones-escalonadas">Funciones escalonadas</a></h3>
<h4 id="redondeo-función-round" tabindex="-1"><a class="header-anchor" href="#redondeo-función-round">Redondeo: Función <code>round()</code></a></h4>
<p>La función <code>round()</code> permite redondear valores, es decir, prescindir de pequeñas diferencias en las cantidades, teniendo en cuenta sólo unidades superiores.</p>
<table>
<thead>
<tr>
<th>Función CSS</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>round(value, interval)</code></td>
<td>Redondea <code>value</code> con el número de decimales de <code>interval</code>.</td>
</tr>
<tr>
<td><code>round(mode, value, interval)</code></td>
<td>Idem, utilizando la estrategia <code>mode</code> de redondeo.</td>
</tr>
</tbody>
</table>
<p>Observa el siguiente ejemplo, donde puedes ver como funciona la función <code>round()</code>:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.element</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>124.75px<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* 125px */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>124.75px<span class="token punctuation">,</span> 10px<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">/* 120px */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>124.75px<span class="token punctuation">,</span> 100px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/* 100px */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>124.75px<span class="token punctuation">,</span> 0.1px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/* 124.7px */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>124.75px<span class="token punctuation">,</span> 0.01px<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/* 124.75px */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>124.75px<span class="token punctuation">,</span> 0.001px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 124.75px */</span>
<span class="token punctuation">}</span></code></pre>
<blockquote>
<p>Ten en cuenta que, si indicamos un valor de <code>interval</code> igual a <code>0</code>, entonces el redondeo no será válido (<em>realmente devuelve <code>NaN</code></em>), por lo que ignora la propiedad..</p>
</blockquote>
<p>Si queremos un tipo de redondeo específico, podemos indicar un primer parámetro en la función <code>round()</code> y establecer la <strong>estrategia de redondeo</strong>:</p>
<table>
<thead>
<tr>
<th>Estrategia</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>nearest</code></td>
<td>Redondea al extremo más próximo. Si es igual, redondeo superior. Equivale a <code>Math.round()</code></td>
</tr>
<tr>
<td><code>up</code></td>
<td>Redondeo superior. Equivalente a <code>Math.ceil()</code></td>
</tr>
<tr>
<td><code>down</code></td>
<td>Redondeo inferior. Equivalente a <code>Math.floor()</code></td>
</tr>
<tr>
<td><code>to-zero</code></td>
<td>Trunca el valor. Equivalente a <code>Math.trunc()</code>.</td>
</tr>
</tbody>
</table>
<blockquote>
<p>Si no se especifica ninguna estrategia de redondeo en <code>round()</code>, por defecto se usa <code>nearest</code>.</p>
</blockquote>
<p>Veamos algunos ejemplos:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.element</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>nearest<span class="token punctuation">,</span> 124.75px<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">/* 125px */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>nearest<span class="token punctuation">,</span> 124.25px<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">/* 124px */</span>

  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>up<span class="token punctuation">,</span> 124.75px<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* 125px */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>up<span class="token punctuation">,</span> 124.25px<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* 125px */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>down<span class="token punctuation">,</span> 124.75px<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/* 124px */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>down<span class="token punctuation">,</span> 124.25px<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/* 124px */</span>

  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>to-zero<span class="token punctuation">,</span> -25px<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/* 0px */</span>

  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">round</span><span class="token punctuation">(</span>124.75px<span class="token punctuation">,</span> 1px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">/* 125px, nearest por defecto */</span>
<span class="token punctuation">}</span></code></pre>
<p><caniuse-support title="Css types round" feature="mdn-css_types_round" edge="✗/n" firefox="118/y" chrome="✗/n" safari="15.4/y" opera="✗/n" ios_saf="15.4/y" and_chr="✗/n" and_ff="118/y">
</caniuse-support></p>
<h4 id="módulo-función-mod" tabindex="-1"><a class="header-anchor" href="#módulo-función-mod">Módulo: Función <code>mod()</code></a></h4>
<p>La función <code>mod()</code> de CSS, permite realizar el módulo, que no es más que obtener el resto de la división de un número entre otro. Veamos un ejemplo utilizándolo en CSS:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.element</span> <span class="token punctuation">{</span>
  <span class="token property">translate</span><span class="token punctuation">:</span> <span class="token function">mod</span><span class="token punctuation">(</span>500px<span class="token punctuation">,</span> 200px<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/* 100px */</span>
  <span class="token property">translate</span><span class="token punctuation">:</span> <span class="token function">mod</span><span class="token punctuation">(</span>-500px<span class="token punctuation">,</span> 200px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 100px */</span>
<span class="token punctuation">}</span></code></pre>
<p>Esta operación suele ser muy utilizada en programación para realizar cálculos incrementales y acotar los límites, de modo que cuando se superen, se vuelvan al valor inicial. De esta forma siempre te encuentras del rango deseado:</p>
<pre class="language-bash "><code class="language-bash"><span class="token number">0</span> + <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span>       <span class="token number">1</span> % <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token number">1</span> + <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">2</span>       <span class="token number">2</span> % <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">2</span>
<span class="token number">2</span> + <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">3</span>       <span class="token number">3</span> % <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">3</span>
<span class="token number">3</span> + <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">4</span>       <span class="token number">4</span> % <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">4</span>
<span class="token number">4</span> + <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">5</span>       <span class="token number">5</span> % <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token number">5</span> + <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">6</span>       <span class="token number">6</span> % <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token number">6</span> + <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">7</span>       <span class="token number">7</span> % <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">2</span>
<span class="token number">7</span> + <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">8</span>       <span class="token number">8</span> % <span class="token number">5</span> <span class="token operator">=</span> <span class="token number">3</span></code></pre>
<p><caniuse-support title="Css types mod" feature="mdn-css_types_mod" edge="✗/n" firefox="118/y" chrome="✗/n" safari="15.4/y" opera="✗/n" ios_saf="15.4/y" and_chr="✗/n" and_ff="118/y">
</caniuse-support></p>
<h4 id="resto-función-rem" tabindex="-1"><a class="header-anchor" href="#resto-función-rem">Resto: Función <code>rem()</code></a></h4>
<p>La función <code>rem()</code> de CSS, permite realizar el resto. Funciona de forma muy similar al módulo, sin embargo, hay diferencias cuando utilizamos números negativos.</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.element</span> <span class="token punctuation">{</span>
  <span class="token property">translate</span><span class="token punctuation">:</span> <span class="token function">rem</span><span class="token punctuation">(</span>500px<span class="token punctuation">,</span> 200px<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">/* 100px */</span>
  <span class="token property">translate</span><span class="token punctuation">:</span> <span class="token function">rem</span><span class="token punctuation">(</span>-500px<span class="token punctuation">,</span> 200px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* -100px */</span>
<span class="token punctuation">}</span></code></pre>
<p><caniuse-support title="Css types rem" feature="mdn-css_types_rem" edge="✗/n" firefox="118/y" chrome="✗/n" safari="15.4/y" opera="✗/n" ios_saf="15.4/y" and_chr="✗/n" and_ff="118/y">
</caniuse-support></p>
<h3 id="funciones-trigonométricas" tabindex="-1"><a class="header-anchor" href="#funciones-trigonométricas">Funciones trigonométricas</a></h3>
<p>Recientemente se han añadido una serie de funciones CSS que permiten realizar calculos trigonométricos básicos sin necesidad de utilizar Javascript. Esto nos da una gran cantidad de posibilidades a la hora de realizar tareas geométricas.</p>
<p>Las <strong>funciones CSS trigonométricas</strong> disponibles actualmente son las siguientes:</p>
<table>
<thead>
<tr>
<th>Función CSS</th>
<th>Descripción</th>
<th>Un ejemplo</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>sin()</code></td>
<td>Función matemática <strong>seno</strong>.</td>
<td><code>sin(45deg) ~ 0.8509</code></td>
</tr>
<tr>
<td><code>cos()</code></td>
<td>Función matemática <strong>coseno</strong>.</td>
<td><code>cos(45deg) ~ 0.5253</code></td>
</tr>
<tr>
<td><code>tan()</code></td>
<td>Función matemática <strong>tangente</strong>.</td>
<td><code>tan(45deg) ~ 1.6197</code></td>
</tr>
<tr>
<td><code>asin()</code></td>
<td>Función matemática <strong>arcoseno</strong>.</td>
<td><code>asin(-1) ~ -PI/2</code></td>
</tr>
<tr>
<td><code>acos()</code></td>
<td>Función matemática <strong>arcocoseno</strong>.</td>
<td><code>acos(-1) ~ PI</code></td>
</tr>
<tr>
<td><code>atan()</code></td>
<td>Función matemática <strong>arcotangente</strong>.</td>
<td><code>atan(-1) ~ -PI/4</code></td>
</tr>
<tr>
<td><code>atan2()</code></td>
<td>Función matemática <strong>arcotangente</strong> de 2 parámetros.</td>
<td><code>atan2(90, 90) ~ PI/4</code></td>
</tr>
</tbody>
</table>
<p>La forma de utilizarlas es muy similar a las que hemos visto anteriormente:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">sin</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span> * 100px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> indigo<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p><caniuse-support title="Css types sin" feature="mdn-css_types_sin" edge="111/y" firefox="108/y" chrome="111/y" safari="15.4/y" opera="97/y" ios_saf="15.4/y" and_chr="111/y" and_ff="108/y">
</caniuse-support></p>
<h3 id="funciones-exponenciales" tabindex="-1"><a class="header-anchor" href="#funciones-exponenciales">Funciones exponenciales</a></h3>
<p>En el caso de que necesitamos funciones CSS para jugar con valores exponenciales, también podemos utilizar la siguiente familia de funciones, que nos permiten realizar cálculos de potenciación, raíces cuadradas, hipotenusa, logaritmos, etc.</p>
<table>
<thead>
<tr>
<th>Función CSS</th>
<th>Descripción</th>
<th>Un ejemplo</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>pow()</code></td>
<td>Devuelve la base <code>A</code> elevada al exponente <code>B</code>.</td>
<td><code>pow(A, B)</code></td>
</tr>
<tr>
<td><code>sqrt()</code></td>
<td>Devuelve la raíz cuadrada de <code>A</code>.</td>
<td><code>sqrt(A) ~ pow(A, 0.5)</code></td>
</tr>
<tr>
<td><code>hypot()</code></td>
<td>Devuelve la raíz cuadrada de <code>A²</code>+<code>B² + …</code></td>
<td><code>hypot(A, B, …) ~ sqrt(pow(A, 2) + pow(B, 2) + …)</code></td>
</tr>
<tr>
<td><code>log()</code></td>
<td>Devuelve el logaritmo de <code>A</code> en base <code>B</code> (si se omite, es <code>e</code>)</td>
<td><code>log(A, B)</code></td>
</tr>
<tr>
<td><code>exp()</code></td>
<td>Devuelve el valor exponencial de <code>A</code>.</td>
<td><code>exp(A) ~ pow(e, A)</code></td>
</tr>
</tbody>
</table>
<blockquote>
<p>Ten en cuenta, que la función <code>hypot()</code>, al contrario que el resto de funciones anteriores, permite indicar valores con unidades como <code>px</code> o <code>em</code>.</p>
</blockquote>
<p><caniuse-support title="Css types pow" feature="mdn-css_types_pow" edge="✗/n" firefox="118/y" chrome="✗/n" safari="15.4/y" opera="✗/n" ios_saf="15.4/y" and_chr="✗/n" and_ff="118/y">
</caniuse-support></p>
<h3 id="funciones-de-signo" tabindex="-1"><a class="header-anchor" href="#funciones-de-signo">Funciones de signo</a></h3>
<p>Cerramos la lista de funciones matemáticas CSS con las funciones <code>abs()</code> y <code>sign()</code>. Estas funciones nos permiten jugar con los signos de valores, de modo que la función <code>abs()</code> obtiene el valor absoluto de un número, mientras que la función <code>sign()</code> nos devuelve <code>-1</code>, <code>1</code> o <code>0</code>, dependiendo del valor del signo:</p>
<table>
<thead>
<tr>
<th>Función CSS</th>
<th>Descripción</th>
<th>Un ejemplo</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>abs()</code></td>
<td>Devuelve el valor absoluto de <code>A</code></td>
<td><code>abs(-5) = 5</code></td>
</tr>
<tr>
<td><code>sign()</code></td>
<td>Devuelve <code>-1</code>, <code>0</code> o <code>1</code> dependiendo del signo de <code>A</code></td>
<td><code>sign(-5) = -1</code></td>
</tr>
</tbody>
</table>
<p><caniuse-support title="Css types abs" feature="mdn-css_types_abs" edge="✗/n" firefox="118/y" chrome="✗/n" safari="15.4/y" opera="✗/n" ios_saf="15.4/y" and_chr="✗/n" and_ff="118/y">
</caniuse-support></p>
<h3 id="otros-valores" tabindex="-1"><a class="header-anchor" href="#otros-valores">Otros valores</a></h3>
<h4 id="valor-del-atributo-función-attr" tabindex="-1"><a class="header-anchor" href="#valor-del-atributo-función-attr">Valor del atributo: Función <code>attr()</code></a></h4>
<p>Aunque no es de género matemático como las anteriores, existe la función CSS <code>attr()</code>, que es algo más particular, ya que permite obtener el <strong>valor de un atributo HTML</strong> y utilizarlo desde CSS, generalmente para temas de decoración.</p>
<p>Por ejemplo, observa el siguiente fragmento de código:</p>
<pre class="language-css "><code class="language-css"><span class="token selector">.element::before</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">attr</span><span class="token punctuation">(</span>data-author<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #444<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<pre class="language-html demo"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span> <span class="token attr-name">data-author</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Manz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Elemento<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>Por medio de una <a href="../../selectores/pseudoclases/index.htm">pseudoclase CSS</a>, utilizando la propiedad <code>content</code>, le pedimos al navegador que utilice el <a href="https://lenguajehtml.com/html/introduccion/atributos-comunes-html/">metadato</a> del atributo <code>data-author</code> del elemento donde se le está aplicando el CSS para mostrarlo como contenido.</p>
<p>Esta función CSS es la más antigua y la mejor soportada en navegadores:</p>
<p><caniuse-support title="CSS Generated content for pseudo-elements" feature="css-gencontent" edge="12/y" firefox="2/y" chrome="4/y" safari="3.1/y" opera="9/y" ios_saf="3.2/y" and_chr="118/y" and_ff="118/y">
</caniuse-support></p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../relativas-viewport/index.htm" title="Unidades del viewport">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Unidades del viewport</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../../modelo-de-cajas/que-es/index.htm" title="Modelo de cajas">
  <div>
    <span>Modelo de cajas</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/8Jh2K3tq5n0" title="Tutorial para aprender Animaciones CSS">
  <img loading="lazy" src="../../../vi/8Jh2K3tq5n0/mqdefault.jpg" alt="Tutorial para aprender Animaciones CSS">
</a><a href="https://youtu.be/pJGEELsEM1w" title="Consejos y buenas prácticas (III): CSS">
  <img loading="lazy" src="../../../vi/pJGEELsEM1w/mqdefault.jpg" alt="Consejos y buenas prácticas (III): CSS">
</a><a href="https://youtu.be/oou7K8QEMSE" title="¡Zoom en CSS! La propiedad object-view-box">
  <img loading="lazy" src="../../../vi/oou7K8QEMSE/mqdefault.jpg" alt="¡Zoom en CSS! La propiedad object-view-box">
</a><a href="https://youtu.be/9jea2qDdw7Y" title="Cómo crear SOMBRAS IDÉNTICAS (drop-shadow)">
  <img loading="lazy" src="../../../vi/9jea2qDdw7Y/mqdefault.jpg" alt="Cómo crear SOMBRAS IDÉNTICAS (drop-shadow)">
</a><a href="https://youtu.be/s_16bzmnGoY" title="Grid CSS: Líneas con nombre">
  <img loading="lazy" src="../../../vi/s_16bzmnGoY/mqdefault.jpg" alt="Grid CSS: Líneas con nombre">
</a><a href="https://youtu.be/hiRIjRf2QD8" title="FUNCIONES de TIEMPO en CSS: ¡Controla el ritmo de tus animaciones!">
  <img loading="lazy" src="../../../vi/hiRIjRf2QD8/mqdefault.jpg" alt="FUNCIONES de TIEMPO en CSS: ¡Controla el ritmo de tus animaciones!">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="../../../postcss/index.htm" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/fundamentos/" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/javascript/" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/npm/" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/webcomponents/" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/vuejs/" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/automatizadores/" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="https://lenguajejs.com/retos/" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
