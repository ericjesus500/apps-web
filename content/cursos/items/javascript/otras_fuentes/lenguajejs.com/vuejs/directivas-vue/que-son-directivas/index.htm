<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#42b883">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>¿Qué son las directivas de Vue? - Javascript en español - Lenguaje JS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Las directivas de Vue son atributos especiales en etiquetas HTML que permiten realizar acciones dinámicas muy potentes desde el HTML.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="¿Qué son las directivas de Vue? - Javascript en español">
  <meta property="og:image" content="https://lenguajejs.com/vuejs/directivas-vue/que-son-directivas/directivas-vue.png">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Las directivas de Vue son atributos especiales en etiquetas HTML que permiten realizar acciones dinámicas muy potentes desde el HTML.">
  <meta property="og:url" content="https://lenguajejs.com/vuejs/directivas-vue/que-son-directivas/">
  <meta property="twitter:url" content="https://lenguajejs.com/vuejs/directivas-vue/que-son-directivas/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="¿Qué son las directivas de Vue? - Javascript en español">
  <meta property="twitter:description" content="Las directivas de Vue son atributos especiales en etiquetas HTML que permiten realizar acciones dinámicas muy potentes desde el HTML.">
  <meta property="twitter:image" content="https://lenguajejs.com/vuejs/directivas-vue/que-son-directivas/directivas-vue.png">

  </head>

<body class="js menu-open " style="--logo-color: #287853"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje JS</h1>

    <a class="cover" title="Lenguaje JS (vuejs)" href="../../index.htm" style="--image: url('../../../assets/vuejs.jpg')"></a>

    <header>
      <a href="../../componentes/que-es-un-componente/index.htm" title="¿Qué es un componente?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../../automatizadores/introduccion/que-es-un-automatizador/index.htm" title="¿Qué es un automatizador?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Directivas Vue
      </span>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              ¿Qué son las directivas de Vue?
            </a>
            <a class="link" href="../v-show-y-v-if/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Directivas v-show y v-if (condicionales)
            </a>
            <a class="link" href="../v-for/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Directiva v-for (bucles)
            </a>
            <a class="link" href="../v-bind/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Directiva v-bind (enlace)
            </a>
            <a class="link" href="../v-on/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Directiva v-on (eventos)
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#js"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeJS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/vuejs.jpg')">
    <h1><a href="index.htm">¿Qué son las directivas de Vue?</a></h1></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../../componentes/reactividad-api/index.htm">API de Reactividad (Vue 3)</a>
    <a class="current" href="index.htm">¿Qué son las directivas de Vue?</a>
    <a href="../v-show-y-v-if/index.htm">Directivas v-show y v-if (condicionales)</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p>Una de las ventajas de la sección <code>&lt;template&gt;</code> de los <strong>componentes SFC de Vue</strong> es que no sólo puedes escribir HTML clásico, sino que además también tienes una sintaxis avanzada para realizar algunas características interesantes que lo hacen mucho más potente que el HTML puro, como por ejemplo, el uso de <strong>directivas</strong>.</p>
<h3 id="directivas-de-vue" tabindex="-1"><a class="header-anchor" href="#directivas-de-vue">Directivas de Vue</a></h3>
<p>Las <strong>directivas de Vue</strong> son atributos especiales que se colocan en las etiquetas HTML y están prefijados por <code>v-</code>, como por ejemplo, <code>v-for</code>, <code>v-bind</code> o <code>v-on</code>, entre muchas otras. Estas directivas permiten realizar <strong>acciones dinámicas potentes</strong> (<em>bucles, condicionales, etc...</em>) que no se pueden realizar  en HTML por si solo, pero que <strong>Vue</strong> permite utilizar en sus etiquetas <code>&lt;template&gt;</code>.</p>
<p><img src="directivas-vue.png" alt="Directivas de Vue" width="1024" height="425" loading="lazy"></p>
<p>Dichas <strong>directivas</strong> están formadas por varias partes:</p>
<ul>
<li><strong>Directiva</strong>: El nombre de la directiva, que a veces, es posible abreviarlo con un carácter.</li>
<li><strong>Argumento</strong>: En ciertas directivas se indica un parámetro.</li>
<li><strong>Modificador</strong>: En ciertas directivas se puede modificar el comportamiento.</li>
<li><strong>Valor</strong>: En ciertas directivas, se requiere establecer un valor. Se escribe como el valor de un atributo HTML.</li>
</ul>
<p>Existen varias <strong>directivas en Vue</strong>, las he dividido en varios grupos e iremos profundizando en ellas a lo largo de los siguientes capítulos y temas:</p>
<table>
<thead>
<tr>
<th>Tipos de directivas</th>
<th>Ejemplos</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Directivas básicas</strong></td>
<td><code>v-pre</code>, <code>v-once</code>, <code>v-model</code>...</td>
<td>Permite realizar tareas simples.</td>
</tr>
<tr>
<td><strong>Directivas condicionales</strong></td>
<td><code>v-show</code>, <code>v-if</code>, <code>v-else</code>...</td>
<td>Permiten realizar acciones según condiciones.</td>
</tr>
<tr>
<td><strong>Directivas de bucles</strong></td>
<td><code>v-for</code></td>
<td>Permiten realizar operaciones varias veces.</td>
</tr>
<tr>
<td><strong>Directivas avanzadas</strong></td>
<td><code>v-bind</code>, <code>v-on</code>, <code>v-slot</code></td>
<td>Permiten realizar tareas más específicas.</td>
</tr>
<tr>
<td><strong>Directivas personalizadas</strong></td>
<td></td>
<td>Directivas propias definidas por el usuario.</td>
</tr>
</tbody>
</table>
<p>Empezaremos por las <strong>directivas básicas</strong>, ya que son las más sencillas de comprender y continuaremos con el resto a lo largo de los siguientes temas. Observa que en este primer bloque de directivas, no todas requieren aplicar un valor:</p>
<table>
<thead>
<tr>
<th>Directiva vue</th>
<th>Valor</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>v-text</code></td>
<td><strong>Sí</strong></td>
<td>Equivalente a <code>{{ texto }}</code>. Usa <code>.textContent</code> internamente.</td>
</tr>
<tr>
<td><code>v-html</code></td>
<td><strong>Sí</strong></td>
<td>Inserta HTML en un elemento sin procesarlo. Usa <code>.innerHTML</code> internamente.</td>
</tr>
<tr>
<td><code>v-pre</code></td>
<td>No</td>
<td>Mantiene las <code>{{ templates }}</code> del elemento intactas, sin renderizar.</td>
</tr>
<tr>
<td><code>v-once</code></td>
<td>No</td>
<td>Renderiza las <code>{{ templates }}</code> solo la primera vez, y no lo hace más.</td>
</tr>
<tr>
<td><code>v-cloak</code></td>
<td>No</td>
<td>Directiva que permanece hasta que la <code>{{ template }}</code> se renderiza con contenido.</td>
</tr>
<tr>
<td><code>v-model</code></td>
<td><strong>Sí</strong></td>
<td>Enlaza el valor de una variable con un <code>&lt;input&gt;</code>, <code>&lt;select&gt;</code>, <code>&lt;textarea&gt;</code> o un componente.</td>
</tr>
</tbody>
</table>
<p>En la práctica, recuerda que en nuestros componentes de Vue existirá una parte visual que reside en la etiqueta <code>&lt;template&gt;</code> y una parte funcional en la etiqueta <code>&lt;script&gt;</code>. Si estamos trabajando con la versión <strong>Vue 2</strong>, probablemente estemos utilizando la <strong>Options API</strong>, por lo que tendremos un objeto con <strong>propiedades de Vue</strong>: <code>name</code> (<em>nombre del componente</em>), <code>data</code> (<em>variables de Vue</em>), <code>methods</code> (<em>funciones de Vue</em>), etc...</p>
<h3 id="sintaxis-de-plantillas-mustache" tabindex="-1"><a class="header-anchor" href="#sintaxis-de-plantillas-mustache">Sintaxis de plantillas (mustache)</a></h3>
<p><strong>Vue</strong> nos permite hacer referencia a las variables (<em>o métodos, propiedades computadas, etc...</em>) de <strong>Vue</strong> desde la parte de templates, simplemente escribiéndolo entre <code>{{ dobles llaves }}</code>, lo que se conoce como <strong>sintaxis de plantillas</strong> o <strong>formato mustache</strong>, en referencia a uno de los primeros sistemas de plantillas de Javascript: <a href="https://mustache.github.io/">mustache</a>.</p>
<p>En el siguiente fragmento de código, puedes ver un ejemplo con <code>{{ nickname }}</code>, donde estamos haciendo referencia a la variable <code>nickname</code> del apartado <code>data</code>:</p>
<pre class="language-html "><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{ nickname }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- Equivalente al anterior --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Example"</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">nickname</span><span class="token operator">:</span> <span class="token string">"Manz"</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>Como se observa, la directiva <code>v-text</code> hace exactamente lo mismo, ya que es realmente lo que utiliza <strong>Vue</strong> por debajo, utilizando el método nativo <a href="../../../javascript/dom/insertar-elementos-dom/index.htm">.textContent</a> de Javascript.</p>
<p>No obstante, nosotros utilizaremos el formato <strong>mustache</strong> para hacer referencia a datos y que sea más flexible y fácil de leer. La directiva <code>v-text</code> no se suele utilizar en la práctica.</p>
<h3 id="la-directiva-v-html" tabindex="-1"><a class="header-anchor" href="#la-directiva-v-html">La directiva v-html</a></h3>
<p>Si quisieramos incluir código HTML en una de esas variables, se mostrarían las etiquetas literalmente. La directiva <code>v-html</code> funciona exactamente igual que <code>v-text</code>, solo que en lugar de mostrar las etiquetas, las procesa y renderiza.</p>
<pre class="language-html "><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- Se muestra la etiqueta HTML literalmente --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{ nickname }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- Utilizando directiva v-html, se renderiza el HTML --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>htmlNickname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Example"</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">nickname</span><span class="token operator">:</span> <span class="token string">"&lt;strong>Manz&lt;/strong>"</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>Aún así, lo habitual es no añadir etiquetado HTML en las variables, sino sólo mantener los datos y el etiquetado dejarlo en la parte de las plantillas o crear nuevos componentes para dar formato.</p>
<blockquote>
<p><strong>OJO</strong>: Si el código <strong>HTML es malintencionado</strong> (<em>o se puede manipular por parte del usuario</em>), podrían existir problemas de seguridad, ya que podría insertar HTML/CSS/JS no deseado.</p>
</blockquote>
<h3 id="la-directiva-v-pre" tabindex="-1"><a class="header-anchor" href="#la-directiva-v-pre">La directiva v-pre</a></h3>
<p>En algunas raras ocasiones, podríamos necesitar escribir literal y textualmente el texto <code>{{ nickname }}</code>, por ejemplo, y no querer que se renderice con el valor de la variable <code>nickname</code>. Para conseguir esto, podemos utilizar la directiva <code>v-pre</code>, la cuál evita que se rendericen las plantillas que contenga y las de todos los hijos:</p>
<pre class="language-html "><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{ nickname }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- Se renderiza al valor de nickname --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-pre</span><span class="token punctuation">></span></span>{{ nickname }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- No se renderiza --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre>
<h3 id="la-directiva-v-once" tabindex="-1"><a class="header-anchor" href="#la-directiva-v-once">La directiva v-once</a></h3>
<p>Muy similar es la directiva <code>v-once</code>, la cuál permite que se renderice la plantilla que contenga una etiqueta, pero <strong>sólo la primera vez</strong>. <strong>Vue</strong> incorpora una característica muy deseable denominada <strong>reactividad</strong>. Dicha característica permite que, si una de las variables de Vue cambian de valor o contenido, se autoactualizarán en todas las plantillas que hagan referencia a ella, haciendo la actualización de información mucho más cómoda y automática.</p>
<p>Por esa razón, la directiva <code>v-once</code> puede ser interesante en las situaciones en las que solo desees que tome el valor que tiene la primera vez, aunque estos casos suelen ser casos límites muy particulares que se usan muy pocas veces.</p>
<h3 id="la-directiva-v-cloak" tabindex="-1"><a class="header-anchor" href="#la-directiva-v-cloak">La directiva v-cloak</a></h3>
<p>La directiva <code>v-cloak</code> es un atributo que podemos ponerle a un elemento HTML para que Vue, lo elimine automáticamente cuando las plantillas que contenga, se haya procesado. Es decir, el atributo <code>v-cloak</code> permanecerá y cuando se haya cargado completamente, se eliminará de la etiqueta.</p>
<p>Esto puede resultar interesante para darle estilo mediante CSS con un selector del tipo <code>[v-cloak]</code> y realizar operaciones como ocultar el elemento mientras no esté listo (<em>o cosas similares</em>).</p>
<h3 id="la-directiva-v-model" tabindex="-1"><a class="header-anchor" href="#la-directiva-v-model">La directiva v-model</a></h3>
<p>Probablemente, una de las directivas básicas más interesantes sea <code>v-model</code>. Esta directiva permite crear <strong>un modelo de datos bidireccional</strong> entre un elemento HTML concreto y una variable de Vue. ¿Qué significa esto? Significa que podemos <strong>sincronizar</strong> el contenido de una variable con el contenido que tenga un elemento HTML <code>&lt;input&gt;</code> (<em>por ejemplo</em>) en su atributo <code>value</code>.</p>
<p>Veamos un ejemplo utilizando la directiva <code>v-model</code> con una etiqueta de campo de datos <code>&lt;input&gt;</code>:</p>
<pre class="language-html "><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{ userdata }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userdata<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Example"</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">userdata</span><span class="token operator">:</span> <span class="token string">"Valor de ejemplo"</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>Observa que tenemos una <strong>template mustache</strong> con la variable <code>userdata</code> y en el <code>&lt;input&gt;</code> usamos la directiva <code>v-model</code> apuntando también a <code>userdata</code>. Lo interesante de este ejemplo es que podemos modificar el campo del <code>&lt;input&gt;</code> y veremos que se modifica automáticamente el contenido del <code>&lt;div&gt;</code> anterior al detectar cambios. Esto es un ejemplo de una de las características estrella de <strong>Vue</strong>, la <strong>reactividad</strong>.</p>
<blockquote>
<p>Igual que hemos utilizado la directiva con una etiqueta <code>&lt;input&gt;</code> por defecto (<em>de tipo texto</em>), podemos usarla con <a href="https://lenguajehtml.com/html/formularios/controles-casillas-o-botones/">otras modalidades</a> como podrían ser <code>&lt;input type=&quot;radio&quot;&gt;</code>, <code>&lt;input type=&quot;checkbox&quot;&gt;</code> los cuales se guardarían como <badge-type class="boolean"></badge-type> o <code>&lt;input type=&quot;color&quot;&gt;</code>, que se guardaría en un <badge-type class="string"></badge-type>.</p>
</blockquote>
<p>Además, esta directiva tiene ciertos <strong>modificadores</strong> con los que puedes cambiar el comportamiento por defecto de la directiva (<em>se colocaría justo después de <code>v-model</code></em>):</p>
<table>
<thead>
<tr>
<th>Modificador</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>.lazy</code></td>
<td>En lugar de actualizar en cada tecla (onInput), lo hace cuando el usuario cambia el foco (onChange).</td>
</tr>
<tr>
<td><code>.number</code></td>
<td>Traduce el contenido de <badge-type class="string"></badge-type> a <badge-type class="number"></badge-type> (sólo si es un número válido).</td>
</tr>
<tr>
<td><code>.trim</code></td>
<td>Recorta los espacios en blanco a los lados del contenido de texto.</td>
</tr>
</tbody>
</table>
<p>La directiva <code>v-model</code> puede funcionar con elementos <code>&lt;input&gt;</code>, pero también con elementos <code>&lt;select&gt;</code>, <code>&lt;textarea&gt;</code> e incluso con <strong>componentes</strong> definidos por nosotros (<em>que veremos un poco más adelante</em>). Veamos un nuevo ejemplo, ahora con una etiqueta <code>&lt;textarea&gt;</code>, para campos de texto más extensos:</p>
<pre class="language-html "><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{ userdata }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">v-model.lazy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userdata<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Example"</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">userdata</span><span class="token operator">:</span> <span class="token string">"Valor de ejemplo"</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>Aquí vemos que hemos utilizado el modificador <code>.lazy</code>, por lo que el texto que escribamos en el <code>&lt;textarea&gt;</code> no se irá modificando en cada pulsación, sino que se actualizará cuando pulsemos <kbd>TAB</kbd> o salgamos del campo de texto (<em>pierda el foco</em>). Esto puede ser útil en algunas situaciones donde no queremos que dispare una función asociada muchas veces, o simplemente queremos que se actualice el texto sólo al salir del campo.</p>
<h4 id="listas-de-selección-con-v-model" tabindex="-1"><a class="header-anchor" href="#listas-de-selección-con-v-model">Listas de selección con v-model</a></h4>
<p>Veamos ahora un ejemplo utilizando la directiva <code>v-model</code> con una etiqueta de selección de opciones <code>&lt;select&gt;</code>. En este caso, la directiva <code>v-model</code> hará referencia a una variable que guardará el valor (<em>atributo <code>value</code></em>) de la <strong>opción seleccionada</strong>:</p>
<pre class="language-html "><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>listItems<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Product A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>B<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Product B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>C<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Product C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"Example"</span><span class="token punctuation">,</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">listItems</span><span class="token operator">:</span> <span class="token string">"C"</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>Más adelante, cuando veamos las directivas de bucle <code>v-for</code> veremos como separar la lógica (<em>con los datos</em>) del etiquetado de código, manteniendo la información en las variables de Vue y recorriendo dicha estructura desde el etiquetado de plantillas de Vue.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../../componentes/reactividad-api/index.htm" title="API de Reactividad (Vue 3)">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>API de Reactividad (Vue 3)</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../v-show-y-v-if/index.htm" title="Directivas v-show y v-if (condicionales)">
  <div>
    <span>Directivas v-show y v-if (condicionales)</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/KE2xRDM4Amg" title="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
  <img loading="lazy" src="../../../vi/KE2xRDM4Amg/mqdefault.jpg" alt="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
</a><a href="https://youtu.be/EiKYr5vjs48" title="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
  <img loading="lazy" src="../../../vi/EiKYr5vjs48/mqdefault.jpg" alt="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
</a><a href="https://youtu.be/Xi07tHFzqR8" title="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
  <img loading="lazy" src="../../../vi/Xi07tHFzqR8/mqdefault.jpg" alt="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
</a><a href="https://youtu.be/sU4e6_i_ExU" title="Consejos y buenas prácticas (IV): Javascript + Imágenes">
  <img loading="lazy" src="../../../vi/sU4e6_i_ExU/mqdefault.jpg" alt="Consejos y buenas prácticas (IV): Javascript + Imágenes">
</a><a href="https://youtu.be/UVauEId-jJ0" title="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
  <img loading="lazy" src="../../../vi/UVauEId-jJ0/mqdefault.jpg" alt="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
</a><a href="https://youtu.be/S0YA8BadVbM" title="Cambiar clases CSS desde Javascript con classList">
  <img loading="lazy" src="../../../vi/S0YA8BadVbM/mqdefault.jpg" alt="Cambiar clases CSS desde Javascript con classList">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../../javascript/index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../../npm/index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../../webcomponents/index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../../automatizadores/index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-6', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
