<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#42b883">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Estructura de carpetas de VueJS - Javascript en español - Lenguaje JS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="¿Para qué sirve ese fichero que está dentro de la estructura de carpetas del proyecto Vue.js que creamos con el asistente create-vue? Sigue leyendo.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Estructura de carpetas de VueJS - Javascript en español">
  <meta property="og:image" content="https://lenguajejs.com/vuejs/introduccion/estructura-carpetas/vue-estructura-carpetas.png">
  <meta property="og:type" content="article">
  <meta property="og:description" content="¿Para qué sirve ese fichero que está dentro de la estructura de carpetas del proyecto Vue.js que creamos con el asistente create-vue? Sigue leyendo.">
  <meta property="og:url" content="https://lenguajejs.com/vuejs/introduccion/estructura-carpetas/">
  <meta property="twitter:url" content="https://lenguajejs.com/vuejs/introduccion/estructura-carpetas/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Estructura de carpetas de VueJS - Javascript en español">
  <meta property="twitter:description" content="¿Para qué sirve ese fichero que está dentro de la estructura de carpetas del proyecto Vue.js que creamos con el asistente create-vue? Sigue leyendo.">
  <meta property="twitter:image" content="https://lenguajejs.com/vuejs/introduccion/estructura-carpetas/vue-estructura-carpetas.png">

  </head>

<body class="js menu-open " style="--logo-color: #287853"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje JS</h1>

    <a class="cover" title="Lenguaje JS (vuejs)" href="../../index.htm" style="--image: url('../../../assets/vuejs.jpg')"></a>

    <header>
      <a href="../../../webcomponents/atomico/introduccion-a-atomico/index.htm" title="Introducción: ¿Qué es Atomico?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../componentes/que-es-un-componente/index.htm" title="¿Qué es un componente?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Introducción a Vue.js
      </span>
            <a class="link" href="../que-es-un-framework/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Frameworks Javascript
            </a>
            <a class="link" href="../que-es-vue/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              ¿Qué es Vue?
            </a>
            <a class="link" href="../create-vue/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Crear una aplicación de Vue 3
            </a>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Estructura de carpetas de VueJS
            </a>
            <a class="link" href="../primeros-pasos/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Primeros pasos con VueJS
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#js"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeJS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/vuejs.jpg')">
    <h1><a href="index.htm">Estructura de carpetas de VueJS</a></h1><h2 class="typewriter">Ficheros de configuración de un proyecto Vue 3</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../create-vue/index.htm">Crear una aplicación de Vue 3</a>
    <a class="current" href="index.htm">Estructura de carpetas de VueJS</a>
    <a href="../primeros-pasos/index.htm">Primeros pasos con VueJS</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p>Tanto si utilizamos <a href="../create-vue/index.htm">el asistente de Vue por línea de comandos</a> para crear un proyecto como si lo hacemos de forma manual, necesitaremos conocer la estructura de carpetas donde residen los diferentes archivos de nuestro proyecto.</p>
<p>Así, a la hora de hacer cambios, sabremos si lo estamos haciendo el sitio adecuado (<em>o que otras posibilidades tenemos</em>), de forma que el proyecto sigue siendo <strong>fácil de mantener</strong> por otros miembros del equipo de desarrollo o por alguien externo que quiera trabajar en el proyecto.</p>
<p><img src="vue-estructura-carpetas.png" alt="Estructura de ficheros y carpetas de VueJS" width="1124" height="632" loading="lazy"></p>
<p>En este artículo vamos a dar un repaso a todos los <strong>archivos</strong> y <strong>carpetas</strong> del proyecto y aprender para que sirve cada uno de ellos.</p>
<h3 id="la-carpeta-raíz" tabindex="-1"><a class="header-anchor" href="#la-carpeta-raíz">La carpeta raíz</a></h3>
<p>En primer lugar, vamos a centrarnos en la <strong>estructura de carpetas</strong> de la <strong>carpeta raíz</strong>, profundizando en cada uno de sus ficheros, así como con que herramientas están relacionados.</p>
<p>El primer nivel de carpetas (<em>carpeta raíz del proyecto</em>) suele tener una pinta similar a la siguiente (<em>puede variar dependiendo de la elección del asistente al crear el proyecto</em>):</p>
<pre class="language-bash "><code class="language-bash">├── node_modules/
├── public/
├── index.html
├── src/
├── .eslintrc.js
├── .gitignore
├── .prettierrc.json
├── .vscode/
├── e2e/
├── .env
├── package.json
├── package-lock.json
├── playwright.config.js
├── vitest.config.js
└── vite.config.js</code></pre>
<p>Las tres primeras carpetas, <code>public</code>, <code>src</code> y <code>node_modules</code> las abordaremos más adelante. Primero vamos a centrarnos en los ficheros, que suelen ser ficheros de configuración. Ten en cuenta que algunos archivos (<em>los que empiezan por punto</em>) son ficheros ocultos:</p>
<table>
<thead>
<tr>
<th>Fichero o carpeta</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>index.html</code></td>
<td>Fichero <a href="https://lenguajehtml.com/">HTML</a> principal de la página o aplicación.</td>
</tr>
<tr>
<td><code>.eslintrc.cjs</code></td>
<td>Fichero de configuración del linter de Javascript <strong>ESLint</strong>.</td>
</tr>
<tr>
<td><code>.gitignore</code></td>
<td>Fichero que indica los archivos que <strong>Git</strong> debe ignorar al hacer el versionado.</td>
</tr>
<tr>
<td><code>.prettierrc.json</code></td>
<td>Fichero de configuración del formateador de código <strong>Prettier</strong>.</td>
</tr>
<tr>
<td><code>README.md</code></td>
<td>Fichero <strong>Markdown</strong> donde se documenta información sobre el proyecto.</td>
</tr>
<tr>
<td><code>.env</code></td>
<td>Fichero de variables de entorno del proyecto.</td>
</tr>
<tr>
<td><code>package.json</code></td>
<td>Fichero de configuración del proyecto, usando <strong>NPM</strong>. <a href="../../../npm/index.htm">Más info en NPM</a>.</td>
</tr>
<tr>
<td><code>package-lock.json</code></td>
<td>Fichero histórico de versionado de apoyo para el <code>package.json</code>. <a href="../../../npm/index.htm">Más info en NPM</a>.</td>
</tr>
<tr>
<td><code>playwright.config.js</code></td>
<td>Fichero de configuración de <strong>Playwright</strong>, framework de tests end-to-end.</td>
</tr>
<tr>
<td><code>tsconfig.json</code></td>
<td>Fichero de configuración de <strong>TypeScript</strong>, un metalenguaje de Javascript con tipos.</td>
</tr>
<tr>
<td><code>vitest.config.js</code></td>
<td>Fichero de configuración de <strong>Vitest</strong>, framework de tests unitarios para usar con Vite.</td>
</tr>
<tr>
<td><code>vite.config.js</code></td>
<td>Fichero de configuración de <strong>Vite</strong>, automatizador de aplicaciones web Javascript.</td>
</tr>
</tbody>
</table>
<p>Veamos cada uno de ellos para saber sus particularidades.</p>
<h4 id="el-fichero-eslintrccjs" tabindex="-1"><a class="header-anchor" href="#el-fichero-eslintrccjs">El fichero <code>.eslintrc.cjs</code></a></h4>
<p>El linter de Javascript <a href="https://eslint.org/">ESLint</a> es una magnífica herramienta que nos avisa en tiempo real (<em>mientras escribimos en el editor</em>) de, no solo posibles <strong>errores</strong> en nuestro código, sino también de <strong>problemas de estilo</strong> que pueden provocar que, a la larga, nuestro código sea menos legible o mantenible.</p>
<p>Con toda probabilidad tendremos un fichero con el nombre <code>.eslintrc.js</code> o <code>.eslintrc.cjs</code> (<em>Javascript</em>) o <code>.eslintrc.json</code> / <code>.eslintrc</code> (<em>JSON</em>). En dicho fichero tendremos la configuración de nuestro linter, que, si hemos utilizado el asistente <code>create-vue</code>, habrá configurado con reglas especiales para que nos aconseje no sólo sobre Javascript, sino como mejorar el código de nuestros componentes <code>.vue</code>.</p>
<blockquote>
<p>Si quieres más información sobre <strong>ESLint</strong> y su configuración, puedes echar un ojo al artículo <a href="../../../javascript/calidad-de-codigo/eslint/index.htm">ESLint</a>.</p>
</blockquote>
<h4 id="el-fichero-env" tabindex="-1"><a class="header-anchor" href="#el-fichero-env">El fichero <code>.env</code></a></h4>
<p>EL archivo <code>.env</code> es un fichero de configuración del sistema que guarda una serie de <strong>variables de entorno</strong> relacionadas con el proyecto. Se suelen utilizar para establecer <strong>variables importantes</strong> (<em>nombres de usuario, contraseñas, etc...</em>) que se utilizarán en varias partes del proyecto y así sea mucho más sencillo modificarlas y mantenerlas.</p>
<p>Es especialmente útil cuando trabajamos con sistemas mixtos con <strong>frontend</strong> y <strong>backend</strong>, necesitamos utilizar credenciales para alguna API o cuando utilizamos contenedores de <a href="https://docker.com/">Docker</a>, por ejemplo.</p>
<h4 id="el-fichero-gitignore" tabindex="-1"><a class="header-anchor" href="#el-fichero-gitignore">El fichero <code>.gitignore</code></a></h4>
<p>El fichero <code>.gitignore</code> es un archivo donde podemos escribir, linea por linea, los nombres de archivos (<em>o patrones o comodines</em>) que queremos que <code>Git</code>, nuestro sistema de control de versiones, ignore y no tenga en cuenta a la hora de guardar cambios en el repositorio.</p>
<p>Se trata de un simple fichero de texto que es <strong>obligatorio</strong> utilizar en nuestros proyectos, como mínimo para ignorar <a href="../../../npm/administracion/carpeta-node_modules/index.htm">la carpeta node_modules</a>. Si no sabes que ficheros y carpetas puede ser interesante añadir, puedes echar un vistazo a <a href="https://www.toptal.com/developers/gitignore">gitignore.io</a>, donde te pueden aconsejar un <code>.gitignore</code> indicando el editor o sistema operativo que uses.</p>
<h4 id="el-fichero-prettierrc" tabindex="-1"><a class="header-anchor" href="#el-fichero-prettierrc">El fichero <code>.prettierrc</code></a></h4>
<p>El archivo <code>.prettierrc</code> es un fichero de configuración que pertenece a <a href="https://prettier.io/">Prettier</a>, un formateador de código Javascript automático, que a pesar de ser bastante <strong>opinionated</strong>, permite modificar ciertos parámetros de comportamiento a través de este fichero y de algunas <a href="https://prettier.io/docs/en/options.html">opciones</a>.</p>
<h4 id="la-carpeta-vscode" tabindex="-1"><a class="header-anchor" href="#la-carpeta-vscode">La carpeta <code>.vscode/</code></a></h4>
<p>La carpeta <code>.vscode</code> es una carpeta que puede existir en algunos proyectos. Se trata de configuración del editor <strong>Visual Studio Code</strong>, pero que sólo se aplica a este proyecto.</p>
<p>En su interior suele tener ficheros como <code>settings.json</code>, donde se guarda dicha configuración, y/o el fichero <code>extensions.json</code>, que guarda recomendaciones de extensiones útiles, como por ejemplo <a href="https://marketplace.visualstudio.com/items?itemName=Vue.volar">Volar</a>.</p>
<h4 id="el-fichero-playwrightconfigjs" tabindex="-1"><a class="header-anchor" href="#el-fichero-playwrightconfigjs">El fichero <code>playwright.config.js</code></a></h4>
<p>El framework de testing <a href="https://playwright.dev/">Playwright</a> permite realizar <strong>tests end-to-end</strong> (<em>e2e</em>), un tipo de tests que se realizan en un entorno de navegador, pudiendo comprobar aspectos más ligados al navegador del usuario. El fichero <code>playwright.config.js</code> permite indicar ciertos detalles de configuración, que en el caso de Vue, simplemente hace algunas configuraciones y referencia a la carpeta <code>e2e/</code>.</p>
<h4 id="el-fichero-vitestconfigjs" tabindex="-1"><a class="header-anchor" href="#el-fichero-vitestconfigjs">El fichero <code>vitest.config.js</code></a></h4>
<p>El framework <a href="https://vitest.dev/">Vitest</a> es una herramienta para crear tests unitarios en un proyecto de forma agnóstica, y que pueden funcionar tanto en proyectos con Javascript vanilla, como con frameworks como <code>React</code>, <code>Angular</code> o <code>Vue</code>, que utilizan <strong>Vite</strong> como automatizador.</p>
<p>Está basada en ser compatible con la sintaxis de <a href="https://jestjs.io/es-ES/">Jest</a>, que es otro framework desarrollado por Facebook, ya que su API es bastante práctica y muy fácil de leer.</p>
<h4 id="el-fichero-packagejson" tabindex="-1"><a class="header-anchor" href="#el-fichero-packagejson">El fichero <code>package.json</code></a></h4>
<p>Los ficheros <code>package.json</code> y <code>package-lock.json</code> son los que utiliza <a href="https://www.npmjs.com/">NPM</a> para crear y gestionar una aplicación o proyecto y sus dependencias. Si quieres más información sobre estos ficheros, echa un vistazo al artículo <a href="../../../npm/administracion/package-json/index.htm">El archivo package.json</a>.</p>
<h4 id="el-fichero-tsconfigjson" tabindex="-1"><a class="header-anchor" href="#el-fichero-tsconfigjson">El fichero <code>tsconfig.json</code></a></h4>
<p>El fichero <code>tsconfig.json</code> tiene todos los detalles de configuración de <a href="https://www.typescriptlang.org/">TypeScript</a> localizados en un mismo sitio. Vue lo utiliza para especificar los detalles de compilación que utilizará, así como la forma de actuar al procesar ficheros <code>.ts</code> o código Typescript incluído dentro de la etiqueta <code>&lt;script lang=&quot;ts&quot;&gt;</code> que utilizaremos en los ficheros SFC <code>.vue</code>.</p>
<p>En el caso de utilizar <strong>Typescript</strong> en nuestro proyecto, todos los archivos con extensión <code>.js</code> los cambiaremos por <code>.ts</code>. Los ficheros con extensión <code>.d.ts</code> se utilizan para proporcionar información a TypeScript de la API de una librería o archivo escrito en Javascript.</p>
<h4 id="el-fichero-viteconfigjs" tabindex="-1"><a class="header-anchor" href="#el-fichero-viteconfigjs">El fichero <code>vite.config.js</code></a></h4>
<p>El fichero <code>vite.config.js</code> permite incluir detalles de configuración adicionales para <strong>Vite</strong>, el automatizador Javascript que utilizamos en una aplicación de Vue. Podemos configurar detalles como por ejemplo: rutas, plugins, alias, construcción para el despliegue, etc...</p>
<h3 id="la-carpeta-public" tabindex="-1"><a class="header-anchor" href="#la-carpeta-public">La carpeta <code>public/</code></a></h3>
<p>Probablemente, observarás una carpeta denominada <code>public/</code> en la carpeta raíz del proyecto. Esta carpeta se utiliza para almacenar ficheros estáticos que no serán procesados por el framework:</p>
<pre class="language-bash "><code class="language-bash">├── public/
│   ├── img/
│   ├── favicon.ico
│   ├── index.html
│   └── robots.txt</code></pre>
<p><strong>Vite</strong> copiará directamente el contenido de esta carpeta para utilizar en la versión definitiva de la web, por lo que es un lugar ideal para almacenar ficheros estáticos como <code>robots.txt</code>, <code>favicon.ico</code>, tipografías, imágenes o en general, recursos estáticos que necesitamos que se copien directamente.</p>
<blockquote>
<p>Ten en cuenta que estos archivos siempre serán públicos y cualquier usuario podrá acceder a ellos, ya que no pasa antes por el framework.</p>
</blockquote>
<h3 id="la-carpeta-src" tabindex="-1"><a class="header-anchor" href="#la-carpeta-src">La carpeta <code>src/</code></a></h3>
<p>La carpeta <code>src</code> es probablemente una de las más importantes. En ella se almacena el código fuente (<em>source</em>) de nuestro proyecto, el que estaremos modificando desde nuestro editor de texto o IDE. Es muy importante tener presente que dentro de <code>src</code> siempre vamos a encontrar los <strong>archivos originales sin procesar</strong>:</p>
<pre class="language-bash "><code class="language-bash">├── src/
│   ├── assets/
│   ├── components/
│   ├── router/
│   ├── stores/
│   ├── views/
│   ├── App.vue
│   └── main.js</code></pre>
<p>Por ejemplo, en el caso de estar utilizando <strong>TypeScript</strong> o <strong>Sass</strong>, en <code>src/</code> encontrarás ficheros <code>.ts</code> y <code>.scss</code> (<em>los cuales no son capaces de ser leídos por un navegador</em>). Mientras, en otra carpeta fuera de <code>src/</code>, denominada comunmente <code>dist/</code> o <code>build/</code> se suelen almacenar los archivos finales procesados por <strong>Vite</strong>, como <code>.js</code> o <code>.css</code>, por ejemplo.</p>
<h4 id="el-fichero-mainjs-o-maints" tabindex="-1"><a class="header-anchor" href="#el-fichero-mainjs-o-maints">El fichero <code>main.js</code> o <code>main.ts</code></a></h4>
<p>En Vue, encontraremos siempre un fichero <code>main.ts</code> (<em>TypeScript</em>) o <code>main.js</code> (<em>Javascript</em>). Se trata del fichero principal que arranca el proyecto Vue y que se cargará desde la plantilla <code>index.html</code> que se incluye en el raíz del proyecto.</p>
<p>Este archivo se encargará de cargar <strong>Vue</strong> y todos sus plugins asociados, como iremos viendo en posteriores artículos de esta página. Generalmente, <code>main.js</code> o <code>main.ts</code> cargan el framework y sus plugins y leen el fichero <strong>SFC</strong> <code>App.vue</code>, donde comienza a crearse la aplicación <strong>Vue</strong>.</p>
<h4 id="el-fichero-appvue" tabindex="-1"><a class="header-anchor" href="#el-fichero-appvue">El fichero <code>App.vue</code></a></h4>
<p>Los ficheros <code>.vue</code> son los denominados <strong>SFC de Vue</strong> (<em>Single File Components</em>), se trata de un archivo especial de <strong>Vue</strong>, muy similar a un <code>.html</code> que incluye 3 etiquetas HTML especiales: <code>&lt;template&gt;</code>, <code>&lt;script&gt;</code> y <code>&lt;style&gt;</code>.</p>
<p>A primera vista, parecen ficheros <code>.html</code>, por lo que la curva de aprendizaje es muy sencilla, sin embargo, hay varias diferencias que veremos más adelante en el capítulo de <a href="../../componentes/archivos-vue/index.htm">Single File Components</a>. De hecho, el fichero <code>App.vue</code> es un fichero <strong>SFC</strong> especial, el componente inicial de la aplicación, desde donde se irán cargando los demás componentes.</p>
<h4 id="la-carpeta-assets" tabindex="-1"><a class="header-anchor" href="#la-carpeta-assets">La carpeta <code>assets/</code></a></h4>
<p>En el interior de la carpeta <code>src</code> normalmente podemos encontrar una carpeta <code>assets</code>. Dicha carpeta se utiliza para guardar archivos estáticos como imágenes, audio, tipografías, video, etc... La diferencia con la carpeta <code>assets</code> o <code>img</code> que existe en la carpeta <code>public</code> es que, generalmente, los archivos estáticos que tenemos en <code>public</code> son para permitir un acceso directo a la URL.</p>
<p>Por otro lado, los archivos que tenemos en la carpeta <code>src/assets</code> se utilizan en nuestro código de la aplicación, importándolos, y muchas veces no queremos que se pueda acceder directamente a ellos mediante una URL concreta. Al utilizar imágenes de <code>src/assets</code>, la imagen suele ser procesada por la herramienta que utilice el framework para procesar el Javascript (<em>Vite en este caso</em>) y se suele renombrar.</p>
<h4 id="la-carpeta-router" tabindex="-1"><a class="header-anchor" href="#la-carpeta-router">La carpeta <code>router/</code></a></h4>
<p>Dentro de la carpeta <code>src</code> nos encontraremos una carpeta <code>router</code> si hemos elegido utilizar <a href="https://router.vuejs.org/">Vue Router</a> en nuestra aplicación para crear rutas desde el frontend. En su interior tendremos un archivo <code>index.js</code> o <code>index.ts</code> donde podremos gestionar las rutas de la aplicación y los componentes que cargaremos.</p>
<blockquote>
<p>Más adelante veremos más sobre rutas de aplicación web y <strong>Vue Router</strong>.</p>
</blockquote>
<h4 id="la-carpeta-stores" tabindex="-1"><a class="header-anchor" href="#la-carpeta-stores">La carpeta <code>stores/</code></a></h4>
<p>En el interior de <code>src</code> es posible encontrar una carpeta <code>stores</code>. Dicha carpeta existe si hemos seleccionado la opción de utilizar <a href="https://pinia.vuejs.org/">Pinia</a>, un gestor o <strong>almacén de estados</strong> para Vue. Las aplicaciones web de tipo SPA suelen utilizar un <strong>store</strong> o almacén donde se guarda información centralizada para que cualquier componente o parte de la aplicación pueda acceder a ella, almacenar o recuperar información y gestionarla de forma segura.</p>
<p>Antiguamente, se utilizaba <a href="https://vuex.vuejs.org/">Vuex</a>, sin embargo, desde <strong>Vue 3</strong>, la opción preferida para gestores de estado es utilizar <strong>Pinia</strong>, ya que tiene un enfoque mucho más simple y una filosofía más parecida a <strong>Vue 3</strong>.</p>
<blockquote>
<p>Más adelante profundizaremos en <strong>Pinia</strong>.</p>
</blockquote>
<h4 id="la-carpeta-components" tabindex="-1"><a class="header-anchor" href="#la-carpeta-components">La carpeta <code>components/</code></a></h4>
<p>También en el interior de la carpeta <code>src</code> podremos encontrar <code>components</code>, probablemente una de las carpetas más importantes de nuestro proyecto Vue. En ella colocaremos los componentes <code>.vue</code> que iremos creando durante nuestro proyecto. Los componentes <code>.vue</code> son archivos que contienen el <strong>HTML</strong>, <strong>CSS</strong> y <strong>Javascript</strong> que está relacionado con una determinada parte de la página, como podría ser un botón, un panel desplegable o un comparador de imágenes.</p>
<p>En el caso de haber activado <strong>Vue Router</strong>, existirá una carpeta <code>views</code> donde también se guardan componentes. La diferencia respecto a la carpeta <code>components</code>, es que en <code>views</code> se guardan componentes que definen la estructura general de una página, mientras que en <code>components</code> se guardan partes reutilizables que podemos utilizar en múltiples lugares de nuestra web.</p>
<blockquote>
<p>Más adelante veremos más sobre los <strong>componentes de Vue</strong>.</p>
</blockquote>
<p>Es posible que nos encontremos algunos otros ficheros no mencionados en otros proyectos:</p>
<h4 id="el-fichero-browserslistrc" tabindex="-1"><a class="header-anchor" href="#el-fichero-browserslistrc">El fichero <code>.browserslistrc</code></a></h4>
<p>El archivo <code>.browserslistrc</code> es un fichero en el que podemos establecer una serie de reglas para indicar un conjunto de navegadores. Estas reglas pueden ser leídas por ciertas herramientas (<em>deben soportar <strong>Browserslist</strong>, como por ejemplo: Babel, PostCSS, etc...</em>), y harán lo posible para ser compatibles con los navegadores indicados.</p>
<p>En algunos casos, en lugar de utilizar el fichero <code>.browserslistrc</code>, la información se incluye en un <badge-type class="array"></badge-type> de Javascript, dentro del campo <code>browserslist</code> del <a href="../../../npm/administracion/package-json/index.htm">package.json</a>. Tienes más información sobre como funciona en el artículo <a href="https://lenguajecss.com/postcss/introduccion/browserslist/">BrowsersList</a>.</p>
<h4 id="el-fichero-editorconfig" tabindex="-1"><a class="header-anchor" href="#el-fichero-editorconfig">El fichero <code>.editorconfig</code></a></h4>
<p>En algunos casos, la estructura de carpetas puede contener un archivo <code>.editorconfig</code>. Este archivo es un intento de indicar características genéricas del código, para que se representen igual independientemente del editor que utilicen, ya sea <strong>VSCode</strong>, <strong>Atom</strong>, <strong>IntelliJ IDEA WebStorm</strong>, etc...</p>
<p>Este fichero incorpora convenciones utilizadas como el tipo de indentado (<em>tabuladores o espacios</em>), el tamaño del indentado, si hay que eliminar los espacios en blancos del final de las líneas, añadir una línea en blanco al final, etc...</p>
<blockquote>
<p>Tienes más información en la página oficial de <a href="https://editorconfig.org/">EditorConfig</a>.</p>
</blockquote>
<h4 id="el-fichero-readmemd" tabindex="-1"><a class="header-anchor" href="#el-fichero-readmemd">El fichero <code>README.md</code></a></h4>
<p>El fichero <code>README.md</code> es un fichero en formato <strong>Markdown</strong>, que es un tipo de formato de texto que permite convertirse a HTML. Mediante <strong>Markdown</strong>, con una serie de símbolos, podemos formatear un documento utilizando <strong>negritas</strong>, <em>cursivas</em>, encabezados, imágenes, etc...</p>
<p>Se suele incluir en los repositorios de Git, con el nombre en mayúsculas y la extensión en minúsculas: <code>README.md</code>. Este fichero servirá como primero punto de información sobre el repositorio.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../create-vue/index.htm" title="Crear una aplicación de Vue 3">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Crear una aplicación de Vue 3</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../primeros-pasos/index.htm" title="Primeros pasos con VueJS">
  <div>
    <span>Primeros pasos con VueJS</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/Xi07tHFzqR8" title="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
  <img loading="lazy" src="../../../vi/Xi07tHFzqR8/mqdefault.jpg" alt="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
</a><a href="https://youtu.be/sU4e6_i_ExU" title="Consejos y buenas prácticas (IV): Javascript + Imágenes">
  <img loading="lazy" src="../../../vi/sU4e6_i_ExU/mqdefault.jpg" alt="Consejos y buenas prácticas (IV): Javascript + Imágenes">
</a><a href="https://youtu.be/UVauEId-jJ0" title="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
  <img loading="lazy" src="../../../vi/UVauEId-jJ0/mqdefault.jpg" alt="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
</a><a href="https://youtu.be/S0YA8BadVbM" title="Cambiar clases CSS desde Javascript con classList">
  <img loading="lazy" src="../../../vi/S0YA8BadVbM/mqdefault.jpg" alt="Cambiar clases CSS desde Javascript con classList">
</a><a href="https://youtu.be/A11eG1o611M" title="Creador de historias con Javascript y ChatGPT">
  <img loading="lazy" src="../../../vi/A11eG1o611M/mqdefault.jpg" alt="Creador de historias con Javascript y ChatGPT">
</a><a href="https://youtu.be/EiKYr5vjs48" title="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
  <img loading="lazy" src="../../../vi/EiKYr5vjs48/mqdefault.jpg" alt="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../../javascript/index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../../npm/index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../../webcomponents/index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../../automatizadores/index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-6', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
