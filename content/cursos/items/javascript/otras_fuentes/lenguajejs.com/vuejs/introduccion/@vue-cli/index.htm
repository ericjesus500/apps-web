<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#42b883">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>El asistente CLI (@vue/cli) de Vue 2 - Javascript en español - Lenguaje JS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Vue CLI es el asistente oficial de Vue para crear y gestionar proyectos y aplicaciones SPA de forma práctica y sencilla.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="El asistente CLI (@vue/cli) de Vue 2 - Javascript en español">
  <meta property="og:image" content="https://lenguajejs.com/vuejs/introduccion/@vue-cli/vue-cli.png">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Vue CLI es el asistente oficial de Vue para crear y gestionar proyectos y aplicaciones SPA de forma práctica y sencilla.">
  <meta property="og:url" content="https://lenguajejs.com/vuejs/introduccion/@vue-cli/">
  <meta property="twitter:url" content="https://lenguajejs.com/vuejs/introduccion/@vue-cli/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="El asistente CLI (@vue/cli) de Vue 2 - Javascript en español">
  <meta property="twitter:description" content="Vue CLI es el asistente oficial de Vue para crear y gestionar proyectos y aplicaciones SPA de forma práctica y sencilla.">
  <meta property="twitter:image" content="https://lenguajejs.com/vuejs/introduccion/@vue-cli/vue-cli.png">

  </head>

<body class="js menu-open " style="--logo-color: #287853"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje JS</h1>

    <a class="cover" title="Lenguaje JS (vuejs)" href="../../index.htm" style="--image: url('../../../assets/vuejs.jpg')"></a>

    <header>
      <a href="../../../webcomponents/atomico/introduccion-a-atomico/index.htm" title="Introducción: ¿Qué es Atomico?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../componentes/que-es-un-componente/index.htm" title="¿Qué es un componente?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Introducción a Vue.js
      </span>
            <a class="link" href="../que-es-un-framework/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Frameworks Javascript
            </a>
            <a class="link" href="../que-es-vue/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              ¿Qué es Vue?
            </a>
            <a class="link" href="../create-vue/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Crear una aplicación de Vue 3
            </a>
            <a class="link" href="../estructura-carpetas/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Estructura de carpetas de VueJS
            </a>
            <a class="link" href="../primeros-pasos/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Primeros pasos con VueJS
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#js"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeJS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/vuejs.jpg')">
    <h1><a href="index.htm">El asistente CLI (@vue/cli) de Vue 2</a></h1><h2 class="typewriter">Asistente de terminal para crear proyectos en Vue 2 (legacy)</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a class="current" href="index.htm">El asistente CLI (@vue/cli) de Vue 2</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <blockquote>
<blockquote>
<blockquote>
<p>¡Atención! Este artículo se centra en el asistente CLI para crear aplicaciones <strong>Vue 2</strong>. Para crear aplicaciones <strong>Vue 3</strong> es mejor utilizar <a href="../create-vue/index.htm">create-vue</a>.</p>
</blockquote>
</blockquote>
</blockquote>
<p>Un proyecto creado con <strong>Vue</strong> puede tener múltiples formas de crearse, pero existen unas pautas, recomendaciones y buenas prácticas para crear proyectos similares bajo los mismos criterios.</p>
<p>Para ello, existe una herramienta de <a href="https://terminaldelinux.com/">línea de comandos</a> llamada <a href="https://github.com/vuejs/vue-cli">@vue/cli</a> (<em>no confundir con vue-cli, la versión anterior</em>) que actúa de asistente y permite crear una estructura de carpetas con un proyecto Vue inicial, con todas las herramientas que necesitemos instaladas y listo para comenzar a trabajar con él.</p>
<blockquote>
<p>Existe una forma alternativa de <strong>nueva generación</strong> de crear proyectos con una herramienta llamada <strong>Vite</strong>. Cambian muchas cosas respecto a este artículo, pero es interesante porque es extremadamente rápido. Para inicializar un proyecto, escribe en una terminal: <code>npm init vite@latest project-name -- --template vue</code>. Si quieres más información sobre esta herramienta: <a href="../../../automatizadores/vite/guia-tutorial-inicial-de-vite/index.htm">Guía rápida inicial de Vite</a>.</p>
</blockquote>
<h3 id="instalación-de-vuecli" tabindex="-1"><a class="header-anchor" href="#instalación-de-vuecli">Instalación de @vue/cli</a></h3>
<p>En primer lugar, necesitaremos instalar dicho asistente. Podemos hacerlo mediante <a href="../../../npm/introduccion/instalaciones-globales/index.htm">una instalación global de npm</a>, ya que utilizaremos el parámetro <code>-g</code>:</p>
<pre class="language-bash "><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue/cli</code></pre>
<p>Si todo ha ido bien, debería instalarse el paquete <code>@vue/cli</code> en el sistema, por lo que nos debería mostrar la versión del asistente si escribimos lo siguiente en una terminal:</p>
<pre class="language-bash "><code class="language-bash">$ vue <span class="token parameter variable">--version</span>
@vue/cli <span class="token number">4.5</span>.15</code></pre>
<blockquote>
<blockquote>
<blockquote>
<p>Si tienes algún problema de permisos (<em>o no nos encuentra el comando <code>vue</code></em>), lo más probable es que sea problema de la instalación de <strong>Node/NPM</strong> o no tengamos las variables <code>PATH</code> bien configuradas para que nos encuentren los comandos instalados globalmente. Para solucionarlo, puedes echar un vistazo al artículo: <a href="../../../npm/introduccion/problemas-permisos-npm/index.htm">Problemas de permisos con NPM</a>, o si quieres algo más sencillo y práctico, <a href="../../../npm/introduccion/instalacion-node-con-nvm/index.htm">Instalar Node/NPM con NVM</a>.</p>
</blockquote>
</blockquote>
</blockquote>
<h3 id="configuración-de-un-proyecto" tabindex="-1"><a class="header-anchor" href="#configuración-de-un-proyecto">Configuración de un proyecto</a></h3>
<p>Una vez instalado el asistente y comprobado que funciona correctamente, nos colocamos en nuestro <strong>workspace</strong>. Un <strong>workspace</strong> es el nombre que recibe la carpeta donde guardamos todos los proyectos en los que trabajamos, por ejemplo, <code>/home/manz/workspace</code>. Una vez situados en dicha ruta, escribimos lo siguiente:</p>
<pre class="language-bash "><code class="language-bash">$ vue create project-name</code></pre>
<blockquote>
<p>Ojo, no crees la carpeta del proyecto manualmente, ya que el propio <code>vue create</code> creará una carpeta <code>project-name</code> por nosotros. En su interior, estarán todos los ficheros necesarios para iniciar un proyecto con los elementos del ecosistema que seleccionemos en el asistente.</p>
</blockquote>
<p>Actualmente, el CLI nos proporciona tres opciones para elegir:</p>
<ul>
<li><code>Default Vue 2</code> (<em>babel + eslint</em>)</li>
<li><code>Default Vue 3 Preview</code> (<em>babel + eslint</em>)</li>
<li><code>Manually select features</code></li>
</ul>
<p>Vamos a seleccionar la última opción, puesto que es la más flexible y con la que podemos crear cualquier combinación, incluso las anteriores.</p>
<h4 id="características-del-proyecto" tabindex="-1"><a class="header-anchor" href="#características-del-proyecto">Características del proyecto</a></h4>
<p>Una vez comenzamos la selección manual de características de nuestro proyecto Vue, el asistente nos mostrará el mensaje <code>Check the features needed for your project</code>. Con la tecla <kbd>SPACE</kbd> podremos marcar las características individuales que queramos incorporar, para finalmente confirmar nuestras elecciones pulsando la tecla <kbd>ENTER</kbd>:</p>
<p><img src="vue-cli.png" alt="Asistente @vue/cli" width="1012" height="415" loading="lazy"></p>
<p>Las opciones disponibles son:</p>
<table>
<thead>
<tr>
<th>Opción</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Vue version</code></td>
<td>Nos permite elegir entre <strong>Vue 2</strong> (opción por defecto) o Vue 3.</td>
</tr>
<tr>
<td><code>Babel</code></td>
<td>Transforma código Javascript <strong>moderno</strong> a versiones anteriores para mejorar compatibilidad.</td>
</tr>
<tr>
<td><code>TypeScript</code></td>
<td>Metalenguaje que amplia las capacidades de Javascript añadiendo <strong>tipado</strong> y otras mejoras.</td>
</tr>
<tr>
<td><code>PWA</code></td>
<td>Añade soporte <strong>PWA</strong> (Progressive Web App) a nuestro proyecto Vue.</td>
</tr>
<tr>
<td><code>Router</code></td>
<td>Añade la posibilidad de usar <strong>rutas URL</strong> en nuestra aplicación.</td>
</tr>
<tr>
<td><code>Vuex</code></td>
<td>Permite utilizar un <strong>almacén centralizado de estados</strong> en la aplicación Vue.</td>
</tr>
<tr>
<td><code>CSS Pre-processors</code></td>
<td>Añade un <strong>preprocesador CSS</strong> a nuestra aplicación Vue.</td>
</tr>
<tr>
<td><code>Linter/Formatter</code></td>
<td>Permite añadir y configurar un <strong>linter o formateador</strong> de código.</td>
</tr>
<tr>
<td><code>Unit Testing</code></td>
<td>Añade un framework para realizar <strong>tests unitarios</strong> en el proyecto.</td>
</tr>
<tr>
<td><code>E2E Testing</code></td>
<td>Añade un framework para realizar <strong>tests end-to-end</strong> en el proyecto.</td>
</tr>
</tbody>
</table>
<p>Quizás, la diferencia principal entre elegir <strong>Vue 2</strong> y <strong>Vue 3</strong> es que la segunda introduce la posibilidad de utilizar la <strong>Composition API</strong>, indicada para crear componentes mucho más versátiles y escalables, y de la que hablaremos más adelante.</p>
<h4 id="usar-sintaxis-de-clase" tabindex="-1"><a class="header-anchor" href="#usar-sintaxis-de-clase">Usar sintaxis de Clase</a></h4>
<p>En algún momento del asistente se nos preguntará si queremos utilizar <a href="https://class-component.vuejs.org/">componentes con sintaxis de clase</a> (<code>Use class-style component syntax?</code>). Se trata de una sintaxis en la que utilizamos <strong>decoradores</strong>, y que puede ser especialmente atractiva para los usuarios que provienen de frameworks como <strong>Angular</strong> o lenguajes de backend como <strong>Java</strong>:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">import</span> Component <span class="token keyword">from</span> <span class="token string">'vue-class-component'</span>

@Component
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token keyword">extends</span> <span class="token class-name">Vue</span> <span class="token punctuation">{</span>
  count <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span> <span class="token punctuation">}</span>
  <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">--</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<p>Si esta sintaxis te interesa, puedes activarla. Lo habitual es utilizar la API de objetos (<em>Vue 2/3</em>) o la nueva API de composición (<em>Vue 3</em>), por lo que la opción por defecto será <strong>No</strong>.</p>
<h4 id="typescript-o-babel" tabindex="-1"><a class="header-anchor" href="#typescript-o-babel">¿TypeScript o Babel?</a></h4>
<p>Si hemos marcado tanto <code>TypeScript</code> como <code>Babel</code> en el asistente, se nos preguntará: <code>Use Babel alongside TypeScript (required for modern mode, auto-detected polyfills, transpiling JSX)?</code>.</p>
<p>Vue utiliza <strong>Babel</strong> en los proyectos para transpilar el código <strong>Javascript moderno</strong> en versiones más antiguas y ampliar así la compatibilidad en navegadores o dispositivos antiguos, permitiendo escribir código moderno. Además, añade <strong>polyfills</strong> automáticamente (<em>pequeñas librerías para añadir soporte a funcionalidades no soportadas en navegadores antiguos</em>) o la capacidad de <strong>transpilar JSX</strong>, que aunque es algo más habitual en <strong>React</strong>, no es imposible utilizarlo en Vue.</p>
<p>Sin embargo, algunos desarrolladores pueden preferir utilizar uno de los dos, ya que sus finalidades son muy similares, o incluso ninguno de los dos. Por defecto, se aconseja utilizar uno de los dos (<em>o ambos</em>).</p>
<h4 id="modo-historial-para-vue-router" tabindex="-1"><a class="header-anchor" href="#modo-historial-para-vue-router">Modo historial para Vue Router</a></h4>
<p>Con <strong>Vue Router</strong> en nuestro proyecto, podemos crear una aplicación que nos permita simular la creación de rutas URL (<em>realmente, pseudo-rutas</em>) para navegar por diferentes secciones de la página. Si necesitamos dicha característica, tendremos que incluir <strong>Vue Router</strong> en nuestro proyecto, y al hacerlo tenemos que utilizar una de las siguientes modalidades:</p>
<table>
<thead>
<tr>
<th>Modalidad</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>hash</code></td>
<td>Vue utilizará <code>#</code> para crear pseudorutas URL. Buen soporte en navegadores. Malo para SEO.</td>
</tr>
<tr>
<td><code>history</code></td>
<td>Vue utilizará la API History de HTML5 para crear rutas URL. Es necesario un server-side.</td>
</tr>
</tbody>
</table>
<p>Si activamos <strong>Vue Router</strong> en nuestro proyecto, en algún momento nos preguntará <code>Use history mode for router? (Requires proper server setup for index fallback in production)</code>, donde nos permitirá elegirlo. Por defecto, la respuesta es <strong>Sí</strong>.</p>
<h4 id="usar-un-preprocesador-css" tabindex="-1"><a class="header-anchor" href="#usar-un-preprocesador-css">Usar un preprocesador CSS</a></h4>
<p>Por defecto, Vue integra <a href="https://lenguajecss.com/postcss/">PostCSS</a> para utilizar <a href="https://lenguajecss.com/postcss/plugins/autoprefixer/">Autoprefixer</a> y <a href="https://github.com/css-modules/postcss-modules">CSS Modules</a> en los proyectos de Vue, por lo que si quieres utilizar <strong>PostCSS</strong> no es necesario. Pero si además quieres utilizar un preprocesador CSS como <strong>Sass</strong> o <strong>LESS</strong>, puedes activarlo.</p>
<p>Las opciones disponibles son:</p>
<table>
<thead>
<tr>
<th>Opción</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Sass/SCSS (with dart-sass)</code></td>
<td>Preprocesador Sass. Utiliza <code>dart-sass</code>.</td>
</tr>
<tr>
<td><code>Sass/SCSS (with node-sass)</code></td>
<td>Preprocesador Sass. Utiliza <code>node-sass</code>.</td>
</tr>
<tr>
<td><code>Less</code></td>
<td>Preprocesador LESS.</td>
</tr>
<tr>
<td><code>Stylus</code></td>
<td>Preprocesador Stylus.</td>
</tr>
</tbody>
</table>
<p>El preprocesador más utilizado es <code>Sass</code> (<em>en la versión <code>node-sass</code></em>).</p>
<h4 id="buscar-problemas-con-eslint" tabindex="-1"><a class="header-anchor" href="#buscar-problemas-con-eslint">Buscar problemas con ESLint</a></h4>
<p>Otra de las opciones del asistente de <code>@vue/cli</code> es la posibilidad de activar un linter y/o formateador de código. En Javascript, el linter por excelencia es <a href="../../../javascript/calidad-de-codigo/eslint/index.htm">ESLint</a>, que es el que se utiliza en Vue. Las opciones que nos ofrecen son las siguientes:</p>
<ul>
<li><code>ESLint with error prevention only</code></li>
<li><code>ESLint + Airbnb config</code></li>
<li><code>ESLint + Standard config</code></li>
<li><code>ESLint + Prettier</code></li>
</ul>
<p>Básicamente, la primera opción sólo realiza revisión para prevenir errores, mientras que las dos siguientes hacen eso y además siguen una guía de estilos para asegurar coherencia y buen estilo al escribir código Javascript, una basada en las directrices de <a href="https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb">Airbnb para ESLint</a> y otra la considerada directrices <a href="https://github.com/standard/eslint-config-standard">estándar para ESLint</a>.</p>
<p>La última permite utilizar <strong>ESLint</strong> como linter y <strong>Prettier</strong> como formateador de código, lo cuál es una opción algo más automática, pero un poco más «opinionated».</p>
<blockquote>
<blockquote>
<blockquote>
<p>Recuerda que <code>TSLint</code> (<em>el antiguo linter de TypeScript</em>) está marcado como <strong>obsoleto</strong>, ya que actualmente se utiliza y recomienda ESLint también para TypeScript.</p>
</blockquote>
</blockquote>
</blockquote>
<p>Tras realizar nuestra elección, nos preguntará la modalidad de linter que queremos utilizar:</p>
<ul>
<li>Revisar código al guardar (<code>Lint on save</code>)</li>
<li>Revisar código al hacer un commit (<code>Lint and fix on commit</code>).</li>
</ul>
<h4 id="tests-unitarios-y-end-to-end" tabindex="-1"><a class="header-anchor" href="#tests-unitarios-y-end-to-end">Tests unitarios y end-to-end</a></h4>
<p>Para la parte de <strong>testing</strong>, tenemos los <strong>tests unitarios</strong> y los <strong>tests E2E</strong>. En el primer grupo, <code>@vue/cli</code> nos permitirá elegir entre utilizar dos populares frameworks para tests unitarios:</p>
<table>
<thead>
<tr>
<th>Frameworks de tests unitarios</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://mochajs.org/">Mocha</a> + <a href="https://www.chaijs.com/">Chai</a></td>
<td>Framework de testing (MochaJS) junto a librería de BDD/TDD (ChaiJS).</td>
</tr>
<tr>
<td><a href="https://jestjs.io/">Jest</a></td>
<td>Framework de testing de Facebook, agnóstico y enfocado en la simplicidad.</td>
</tr>
</tbody>
</table>
<p>Por otro lado, para los <strong>tests E2E</strong> (<em>end-to-end</em>), <code>@vue/cli</code> nos aconsejará elegir entre los siguientes frameworks Javascript de testing mediante navegador:</p>
<table>
<thead>
<tr>
<th>Frameworks de tests e2e</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.cypress.io/">Cypress</a></td>
<td>Framework para e2e que permite ejecutar tests en un Google Chrome.</td>
</tr>
<tr>
<td><a href="https://nightwatchjs.org/">Nightwatch</a></td>
<td>Framework para e2e que permite ejecutar tests desde Node contra un WebDriver W3C.</td>
</tr>
<tr>
<td><a href="https://webdriver.io/">WebdriverIO</a></td>
<td>Framework para e2e que permite ejecutar tests mediante WebDriver W3C y DevTools.</td>
</tr>
</tbody>
</table>
<p>Por último, el asistente nos preguntará si preferimos colocar la configuración en archivos separados (<code>In dedicated config files</code>) o en el <a href="../../../npm/administracion/package-json/index.htm">package.json</a>. Se aconseja elegir el primero, ya que suele ser el estándar.</p>
<p>Finalmente, podemos guardar nuestras elecciones con la opción <code>Save this as a preset for future projects?</code> y generar un <strong>perfil</strong> con las opciones escogidas en futuros proyectos.</p>
<blockquote>
<blockquote>
<p><strong>Truco</strong>: Si no te gustan las terminales de texto, puedes ejecutar el comando <code>vue ui</code> desde tu carpeta <strong>workspace</strong>. Esto levantará un servidor web donde puedes gestionar tus proyectos (<em>o incluso crear nuevos proyectos</em>) desde un interfaz web gráfico.</p>
</blockquote>
</blockquote>
<h3 id="añadir-plugins-o-extensiones" tabindex="-1"><a class="header-anchor" href="#añadir-plugins-o-extensiones">Añadir plugins o extensiones</a></h3>
<p>Es posible que en algunos casos queramos añadir <strong>plugins</strong> o ciertas características a proyectos ya creados de Vue y que no queremos volver a crear desde cero nuevamente. Para ello, <code>@vue/cli</code> tiene un parámetro <code>add</code> que permite añadir ciertas librerías o componentes que han sido preparados para trabajar conjuntamente con <code>@vue/cli</code>.</p>
<p>Para ello, debemos asegurarnos de que exista un paquete relacionado que empiece por <a href="https://www.npmjs.com/search?q=vue%2Dcli%2Dplugin%2D"><code>vue-cli-plugin-</code> en NPMjs</a>. Por ejemplo, sistemas como <code>i18n</code> (<em>internacionalización</em>), <code>apollo</code> (<em>GraphQL</em>), <code>vuetify</code> (<em>framework CSS para Vue</em>) u otros, ya están adaptados.</p>
<p>Para instalarlos en nuestro proyecto, solo tendremos que escribir desde una terminal:</p>
<pre class="language-bash "><code class="language-bash">$ vue <span class="token function">add</span> i18n</code></pre>
<p>Esto buscará el paquete <code>vue-cli-plugin-i18n</code>, lo instalará en el proyecto y realizará las tareas correspondientes de configuración e instalación para añadirlo a nuestro proyecto actual.</p>
<h3 id="comenzar-el-proyecto" tabindex="-1"><a class="header-anchor" href="#comenzar-el-proyecto">Comenzar el proyecto</a></h3>
<p>Una vez hemos terminado el asistente, tras un rato descargando dependencias, instalándolas y configurandolas, tendremos el proyecto preparado, listo para ver en un navegador o comenzar a modificarlo. Lo primero será acceder a la carpeta creada (<em>el nombre que le dimos al proyecto en <code>vue create</code></em>):</p>
<pre class="language-bash "><code class="language-bash">$ <span class="token builtin class-name">cd</span> project-name</code></pre>
<p>Una vez dentro, podremos utilizar <code>npm</code> para realizar acciones que el asistente nos ha dejado preparadas:</p>
<table>
<thead>
<tr>
<th>Tarea NPM</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>npm run serve</code></td>
<td>Arranca el proyecto en el navegador en <strong>modo desarrollo</strong> en vivo.</td>
</tr>
<tr>
<td><code>npm run build</code></td>
<td>Genera la versión definitiva de <strong>producción</strong> para subir o desplegar al servidor donde se aloje.</td>
</tr>
<tr>
<td><code>npm run test:unit</code></td>
<td>Lanza los <strong>tests unitarios</strong> con el framework de testing seleccionado en el asistente.</td>
</tr>
<tr>
<td><code>npm run test:e2e</code></td>
<td>Lanza los <strong>tests end-to-end</strong> con el framework de testing seleccionado en el asistente.</td>
</tr>
<tr>
<td><code>npm run lint</code></td>
<td>Ejecuta <strong>ESLint</strong> para analizar el código de nuestro proyecto en busca de problemas.</td>
</tr>
</tbody>
</table>
<p>En el siguiente artículo veremos detalladamente la estructura de ficheros y carpetas del proyecto creada por el asistente <code>@vue/cli</code>.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    
    
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../../javascript/index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../../npm/index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../../webcomponents/index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../../automatizadores/index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/EiKYr5vjs48" title="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
  <img loading="lazy" src="../../../vi/EiKYr5vjs48/mqdefault.jpg" alt="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
</a><a href="https://youtu.be/UVauEId-jJ0" title="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
  <img loading="lazy" src="../../../vi/UVauEId-jJ0/mqdefault.jpg" alt="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
</a><a href="https://youtu.be/Xi07tHFzqR8" title="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
  <img loading="lazy" src="../../../vi/Xi07tHFzqR8/mqdefault.jpg" alt="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
</a><a href="https://youtu.be/S0YA8BadVbM" title="Cambiar clases CSS desde Javascript con classList">
  <img loading="lazy" src="../../../vi/S0YA8BadVbM/mqdefault.jpg" alt="Cambiar clases CSS desde Javascript con classList">
</a><a href="https://youtu.be/sU4e6_i_ExU" title="Consejos y buenas prácticas (IV): Javascript + Imágenes">
  <img loading="lazy" src="../../../vi/sU4e6_i_ExU/mqdefault.jpg" alt="Consejos y buenas prácticas (IV): Javascript + Imágenes">
</a><a href="https://youtu.be/A11eG1o611M" title="Creador de historias con Javascript y ChatGPT">
  <img loading="lazy" src="../../../vi/A11eG1o611M/mqdefault.jpg" alt="Creador de historias con Javascript y ChatGPT">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../../javascript/index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../../npm/index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../../webcomponents/index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../../automatizadores/index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-6', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
