<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#be3535">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Crear nuevo proyecto con NPM - Javascript en español - Lenguaje JS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="NPM permite crear proyectos web en una carpeta, organizando sus ficheros y administrando sus dependencias de forma fácil y rápida. ¡Empecemos!">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Crear nuevo proyecto con NPM - Javascript en español">
  <meta property="og:image" content="https://lenguajejs.com/npm/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="NPM permite crear proyectos web en una carpeta, organizando sus ficheros y administrando sus dependencias de forma fácil y rápida. ¡Empecemos!">
  <meta property="og:url" content="https://lenguajejs.com/npm/administracion/crear-nuevo-proyecto/">
  <meta property="twitter:url" content="https://lenguajejs.com/npm/administracion/crear-nuevo-proyecto/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Crear nuevo proyecto con NPM - Javascript en español">
  <meta property="twitter:description" content="NPM permite crear proyectos web en una carpeta, organizando sus ficheros y administrando sus dependencias de forma fácil y rápida. ¡Empecemos!">
  <meta property="twitter:image" content="https://lenguajejs.com/npm/large-summary.jpg">

  </head>

<body class="js menu-open " style="--logo-color: #cb3837"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje JS</h1>

    <a class="cover" title="Lenguaje JS (npm)" href="../../index.htm" style="--image: url('../../../assets/npm.jpg')"></a>

    <header>
      <a href="../../introduccion/que-es/index.htm" title="¿Qué es NPM?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../../webcomponents/componentes/que-son-webcomponents/index.htm" title="¿Qué son los WebComponents?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Administración de proyectos
      </span>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Crear nuevo proyecto con NPM
            </a>
            <a class="link" href="../instalar-paquetes-npm/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Instalar paquetes con NPM
            </a>
            <a class="link" href="../package-json/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              El archivo package.json
            </a>
            <a class="link" href="../actualizar-dependencias-npm/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Actualizar dependencias NPM
            </a>
            <a class="link" href="../scripts-de-npm/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Scripts de NPM
            </a>
            <a class="link" href="../carpeta-node_modules/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              La carpeta node_modules
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#js"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeJS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/npm.jpg')">
    <h1><a href="index.htm">Crear nuevo proyecto con NPM</a></h1><h2 class="typewriter">Creación de un proyecto Javascript para trabajar</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../../introduccion/problemas-permisos-npm/index.htm">Problemas de permisos con NPM</a>
    <a class="current" href="index.htm">Crear nuevo proyecto con NPM</a>
    <a href="../instalar-paquetes-npm/index.htm">Instalar paquetes con NPM</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p><strong>NPM</strong> (<em>Node Package Manager</em>) nos permite, entre otras cosas, <strong>gestionar las dependencias</strong> de un proyecto de modo que no tenemos que hacerlo manualmente, sino de una forma relativamente automática y controlada, acelerando el desarrollo y reduciendo el tiempo necesario para mantener nuestros proyectos.</p>
<p>En este primer artículo vamos a repasar el <strong>scaffolding</strong> (<em>estructura de carpetas</em>) de un proyecto de frontend y como crear desde cero un proyecto con NPM.</p>
<h3 id="inicializar-el-proyecto" tabindex="-1"><a class="header-anchor" href="#inicializar-el-proyecto">Inicializar el proyecto</a></h3>
<p>El primer paso será acceder a nuestra carpeta de proyectos (<em>por ejemplo, <code>/home/manz/workspace</code></em>) y una vez allí, crear la carpeta del proyecto actual e inicializarlo. Por lo tanto, nuestro primer paso debe ser elegir un <strong>buen nombre</strong> para la carpeta de nuestro proyecto:</p>
<pre class="language-bash "><code class="language-bash"><span class="token comment"># Accedemos a la carpeta de todos nuestros proyectos</span>
$ <span class="token builtin class-name">cd</span> /home/manz/workspace

<span class="token comment"># Creamos la carpeta de nuestro proyecto</span>
$ <span class="token function">mkdir</span> frontend-project

<span class="token comment"># Accedemos a su carpeta raíz (carpeta inicial)</span>
$ <span class="token builtin class-name">cd</span> frontend-project</code></pre>
<blockquote>
<p>Aunque pueda parecer una tontería, es muy importante escoger un <strong>buen nombre</strong> para la carpeta del proyecto. Ese nombre se suele utilizar en el repositorio de GitHub o en la URL para publicarlo si lo subimos a <strong>GitHub Pages</strong>, por ejemplo.</p>
</blockquote>
<p>Algunos buenos consejos sobre el nombre del proyecto:</p>
<ul>
<li><strong>A)</strong> Utiliza siempre minúsculas.</li>
<li><strong>B)</strong> No utilices espacios en el nombre. Usa guiones en su lugar.</li>
<li><strong>C)</strong> Evita el uso de carácteres especiales, signos de puntuación, etc...</li>
</ul>
<p>Una vez en la <strong>carpeta raíz</strong> del proyecto, sería una buena idea preparar <strong>git</strong> con un <code>git init</code> para llevar el <strong>control de versiones</strong> del proyecto cuanto antes. Esto creará una carpeta oculta <code>.git</code> donde se guardará toda la información relativa a <strong>git</strong>:</p>
<pre class="language-bash "><code class="language-bash"><span class="token comment"># Inicializamos el control de versiones</span>
$ <span class="token function">git</span> init
Inicializado repositorio Git vacío en /home/manz/workspace/frontend-project/.git/

<span class="token comment"># Añadimos la URL de GitHub (u otro servicio) como repositorio remoto</span>
$ <span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/ManzDev/frontend-project.git</code></pre>
<p>También sería un buen momento para crear un archivo <a href="https://www.toptal.com/developers/gitignore">.gitignore</a>, que indique las carpetas que vamos a ignorar con <code>git</code>. La carpeta <code>node_modules/</code> debe estar obligatoriamente en dicho fichero.</p>
<p>Una vez hecho esto, inicializamos el proyecto con NPM, escribiendo <code>npm init -y</code>. Esto creará un fichero llamado <code>package.json</code> del que hablaremos más adelante y que contendrá toda la información del proyecto:</p>
<pre class="language-bash "><code class="language-bash"><span class="token comment"># Inicializamos el proyecto con NPM</span>
$ <span class="token function">npm</span> init <span class="token parameter variable">-y</span>
Wrote to /home/manz/workspace/frontend-project/package.json:

<span class="token punctuation">{</span>
  <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"frontend-project"</span>,
  <span class="token string">"version"</span><span class="token builtin class-name">:</span> <span class="token string">"1.0.0"</span>,
  <span class="token string">"description"</span><span class="token builtin class-name">:</span> <span class="token string">""</span>,
  <span class="token string">"main"</span><span class="token builtin class-name">:</span> <span class="token string">"index.js"</span>,
  <span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">"test"</span><span class="token builtin class-name">:</span> <span class="token string">"echo <span class="token entity" title="\&quot;">\"</span>Error: no test specified<span class="token entity" title="\&quot;">\"</span> &amp;&amp; exit 1"</span>
  <span class="token punctuation">}</span>,
  <span class="token string">"repository"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">"type"</span><span class="token builtin class-name">:</span> <span class="token string">"git"</span>,
    <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"git+https://github.com/ManzDev/test.git"</span>
  <span class="token punctuation">}</span>,
  <span class="token string">"keywords"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
  <span class="token string">"author"</span><span class="token builtin class-name">:</span> <span class="token string">""</span>,
  <span class="token string">"license"</span><span class="token builtin class-name">:</span> <span class="token string">"ISC"</span>,
  <span class="token string">"bugs"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"https://github.com/ManzDev/test/issues"</span>
  <span class="token punctuation">}</span>,
  <span class="token string">"homepage"</span><span class="token builtin class-name">:</span> <span class="token string">"https://github.com/ManzDev/test#readme"</span>
<span class="token punctuation">}</span></code></pre>
<p>El parámetro <code>-y</code> de <code>npm init</code> omite el asistente interactivo, creando el <code>package.json</code> con los valores por defecto directamente y sin preguntarnos. Si prefieres utilizar el asistente, omite ese parámetro.</p>
<blockquote>
<p>Observa que es interesante crear primero el repositorio de git y añadir el <code>remote</code>, puesto que así el <code>package.json</code> generado con NPM ya tendrá las entradas <code>repository</code>, <code>bugs</code> y <code>homepage</code>. De hacerlo posteriormente, tendríamos que añadirlas a mano.</p>
</blockquote>
<h3 id="crear-la-estructura-de-carpetas" tabindex="-1"><a class="header-anchor" href="#crear-la-estructura-de-carpetas">Crear la estructura de carpetas</a></h3>
<p>Para trabajar en un proyecto, es necesario conocer bien el <strong>scaffolding</strong> (<em>o estructura de carpetas</em>). Aunque esta estructura puede variar de un proyecto a otro, utilizaremos la siguiente, ya que considero que es bastante estándar y que puede servir como punto de partida:</p>
<pre><code>- frontend-project/       # Carpeta raíz del proyecto
  - .git/                 # Carpeta oculta de datos de git
  - node_modules/         # Carpeta de paquetes de Node/NPM
  - dist/                 # Carpeta de código generado (cuando se usan preprocesadores)
  - src/                  # Carpeta de código fuente (código editable)
    - assets/             # Carpeta de estáticos (imágenes, audio, video, fuentes...)
    - js/                 # Carpeta de Javascript
      - index.js
    - css/                # Carpeta de CSS
      - index.css
    - index.html
  - package.json          # Archivo del proyecto NPM
  - package-lock.json     # Histórico de versiones de dependencias
  - .gitignore            # Ficheros y carpetas a ignorar por git
</code></pre>
<p>Hasta ahora, solo deberíamos tener la carpeta <code>.git</code>, el archivo <code>package.json</code> y el archivo <code>.gitignore</code> (<em>si lo hemos creado</em>). La carpeta <code>node_modules</code> se creará desde que instalemos al menos un paquete en el proyecto (<em>no de forma global</em>), por lo que no nos preocuparemos de ella de momento.</p>
<p>La carpeta <code>dist</code> se suele crear sólo en proyectos donde estamos utilizando preprocesadores, transpiladores o herramientas consideradas «build tools», que de momento no estamos usando.</p>
<p>Así pues, vamos a crear la estructura de carpetas <code>src</code>, de la que si debemos preocuparnos:</p>
<pre class="language-bash "><code class="language-bash"><span class="token comment"># Creamos las carpetas src y subcarpetas</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> src/<span class="token punctuation">{</span>assets,js,css<span class="token punctuation">}</span>

<span class="token comment"># Creamos los ficheros HTML, CSS y Javascript</span>
<span class="token function">touch</span> src/index.html
<span class="token function">touch</span> src/js/index.js
<span class="token function">touch</span> src/css/index.css</code></pre>
<p>Una vez creados los archivos, faltaría crear un código HTML de base en el <code>index.html</code> y enlazar correctamente al archivo <code>index.css</code> en una etiqueta <code>&lt;link&gt;</code> y al archivo <code>index.js</code> en una etiqueta <code>&lt;script&gt;</code>.</p>
<h3 id="servidor-local-simple" tabindex="-1"><a class="header-anchor" href="#servidor-local-simple">Servidor local simple</a></h3>
<p>Para terminar, sería interesante contar con un <strong>servidor local de desarrollo</strong> que nos muestre como se va viendo la página según vamos escribiendo el código. Existen múltiples de estos servidores locales, veamos algunos de ellos:</p>
<table>
<thead>
<tr>
<th>Servidor local</th>
<th>Descripción</th>
<th>Tamaño<sup>*</sup></th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/lukejacksonn/servor">servor</a></td>
<td>Un servidor simple y sin dependencias.</td>
<td>🔄💾68KB</td>
</tr>
<tr>
<td><a href="https://github.com/tapio/live-server">live-server</a></td>
<td>Un servidor de desarrollo HTTP con actualización a tiempo real</td>
<td>🔄💾4.6MB</td>
</tr>
<tr>
<td><a href="https://github.com/johnpapa/lite-server">lite-server</a></td>
<td>Servidor local de desarrollo ligero para NodeJS. Usa <a href="https://www.browsersync.io/">BrowserSync</a>.</td>
<td>🔄💾35.9MB</td>
</tr>
<tr>
<td><a href="https://github.com/lukeed/sirv/tree/master/packages/sirv-cli">sirv-cli</a></td>
<td>Servidor local de desarrollo ligero con interfaz CLI para servir sitios estáticos</td>
<td>💾174KB</td>
</tr>
<tr>
<td><a href="https://github.com/lwsjs/local-web-server">local-web-server</a></td>
<td>Servidor local de desarrollo modular para desarrollos rápidos FullStack</td>
<td>💾4MB</td>
</tr>
<tr>
<td><a href="https://github.com/dkarmalita/http-serve">http-serve</a></td>
<td>Un servidor local en línea de comandos</td>
<td>💾4.8MB</td>
</tr>
</tbody>
</table>
<p><small>* Los tamaños están calculados con <a href="https://packagephobia.com/">PackagePhobia</a> y representan el tamaño total descargado e instalado en <code>node_modules</code>.</small></p>
<p>Es cosa nuestra decidir instalar el servidor de desarrollo <strong>asociado al proyecto</strong> o instalarlo de <strong>forma global</strong>. En este ejemplo instalaremos <code>live-server</code> de forma <strong>global</strong>, ya que en los próximos capítulos veremos como hacerlo en el proyecto, algo quizás más apropiado.</p>
<p>Lo utilizaremos para montar un servidor local y ver todo el contenido de la carpeta <code>src</code> en un navegador, con <strong>cambios en tiempo real</strong> a medida que vamos escribiendo código:</p>
<pre class="language-bash "><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> live-server

$ live-server src
Serving <span class="token string">"src"</span> at http://127.0.0.1:8080
Ready <span class="token keyword">for</span> changes</code></pre>
<p>Al hacer esto, y pulsar en la URL <code>http://127.0.0.1:8080</code>, debería aparecernos la página que tenemos en nuestro <code>index.html</code>.</p>
<h3 id="servidor-local-avanzado" tabindex="-1"><a class="header-anchor" href="#servidor-local-avanzado">Servidor local avanzado</a></h3>
<p>A medida que avancemos en nuestros desarrollos, los servidores locales de desarrollo anteriores se nos irán quedando pequeños, e iremos necesitando características más potentes. Por ejemplo, es muy común empezar a utilizar <strong>build tools</strong>, tanto en la parte de <strong>CSS</strong> (<em>LESS, Sass, PostCSS...</em>) como en la parte de <strong>Javascript</strong> (<em>Babel, TypeScript...</em>), por lo que las herramientas anteriores se nos quedarán cortas.</p>
<p>Los siguientes servidores locales de desarrollo están preparados para tareas más complejas y se adaptarán mejor a nuestros casos si comenzamos a utilizar estas herramientas:</p>
<ul>
<li><a href="https://vitejs.dev/">Vite</a>: Probablemente, uno de los mejores y más rápidos automatizadores actuales.</li>
<li><a href="https://v2.parceljs.org/">Parcel</a>: Automatizador moderno, orientado a build tools y preprocesamiento.</li>
<li><a href="https://www.npmjs.com/package/webpack-dev-server">Webpack DevServer</a>: El más popular, extendido y utilizado, pero también el más complejo.</li>
</ul>
<blockquote>
<p>Si los servidores locales se te quedan pequeños, quieres dar el salto y aprender más sobre <strong>automatizadores</strong> más potentes y con más características, te recomiendo echar un vistazo a la sección <a href="../../../automatizadores/introduccion/que-es-un-automatizador/index.htm">¿Qué es un automatizador?</a></p>
</blockquote>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../../introduccion/problemas-permisos-npm/index.htm" title="Problemas de permisos con NPM">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Problemas de permisos con NPM</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../instalar-paquetes-npm/index.htm" title="Instalar paquetes con NPM">
  <div>
    <span>Instalar paquetes con NPM</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/KE2xRDM4Amg" title="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
  <img loading="lazy" src="../../../vi/KE2xRDM4Amg/mqdefault.jpg" alt="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
</a><a href="https://youtu.be/A11eG1o611M" title="Creador de historias con Javascript y ChatGPT">
  <img loading="lazy" src="../../../vi/A11eG1o611M/mqdefault.jpg" alt="Creador de historias con Javascript y ChatGPT">
</a><a href="https://youtu.be/EiKYr5vjs48" title="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
  <img loading="lazy" src="../../../vi/EiKYr5vjs48/mqdefault.jpg" alt="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
</a><a href="https://youtu.be/sU4e6_i_ExU" title="Consejos y buenas prácticas (IV): Javascript + Imágenes">
  <img loading="lazy" src="../../../vi/sU4e6_i_ExU/mqdefault.jpg" alt="Consejos y buenas prácticas (IV): Javascript + Imágenes">
</a><a href="https://youtu.be/S0YA8BadVbM" title="Cambiar clases CSS desde Javascript con classList">
  <img loading="lazy" src="../../../vi/S0YA8BadVbM/mqdefault.jpg" alt="Cambiar clases CSS desde Javascript con classList">
</a><a href="https://youtu.be/Xi07tHFzqR8" title="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
  <img loading="lazy" src="../../../vi/Xi07tHFzqR8/mqdefault.jpg" alt="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../../javascript/index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../../webcomponents/index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../../vuejs/index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../../automatizadores/index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-6', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
