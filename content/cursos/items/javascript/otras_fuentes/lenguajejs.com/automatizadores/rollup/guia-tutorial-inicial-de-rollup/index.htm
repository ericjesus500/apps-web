<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#b59374">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Guía tutorial inicial de Rollup - Javascript en español - Lenguaje JS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Rollup es un bundler Javascript, una herramienta que procesa pequeñas piezas Javascript y genera un archivo final, orientado al navegador.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Guía tutorial inicial de Rollup - Javascript en español">
  <meta property="og:image" content="https://lenguajejs.com/automatizadores/rollup/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Rollup es un bundler Javascript, una herramienta que procesa pequeñas piezas Javascript y genera un archivo final, orientado al navegador.">
  <meta property="og:url" content="https://lenguajejs.com/automatizadores/rollup/guia-tutorial-inicial-de-rollup/">
  <meta property="twitter:url" content="https://lenguajejs.com/automatizadores/rollup/guia-tutorial-inicial-de-rollup/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Guía tutorial inicial de Rollup - Javascript en español">
  <meta property="twitter:description" content="Rollup es un bundler Javascript, una herramienta que procesa pequeñas piezas Javascript y genera un archivo final, orientado al navegador.">
  <meta property="twitter:image" content="https://lenguajejs.com/automatizadores/rollup/large-summary.jpg">

  </head>

<body class="js menu-open " style="--logo-color: #f0db4f"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje JS</h1>

    <a class="cover" title="Lenguaje JS (automatizadores)" href="../../index.htm" style="--image: url('../../../assets/automatizadores.jpg')"></a>

    <header>
      <a href="../../vite/guia-tutorial-inicial-de-vite/index.htm" title="Guía tutorial inicial de Vite">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../parcel/guia-tutorial-inicial-de-parcel/index.htm" title="Guía tutorial inicial de Parcel">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Rollup
      </span>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Guía tutorial inicial de Rollup
            </a>
            <a class="link" href="../servidor-desarrollo-con-rollup/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Servidor de desarrollo con Rollup
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#js"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeJS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/automatizadores.jpg')">
    <h1><a href="index.htm">Guía tutorial inicial de Rollup</a></h1><h2 class="typewriter">Empaquetador Javascript enfocado en ESM</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../../vite/guia-tutorial-inicial-de-vite/index.htm">Guía tutorial inicial de Vite</a>
    <a class="current" href="index.htm">Guía tutorial inicial de Rollup</a>
    <a href="../servidor-desarrollo-con-rollup/index.htm">Servidor de desarrollo con Rollup</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p><strong>Rollup</strong> es una herramienta Javascript orientada a unir todo el Javascript de nuestra aplicación (<em>generalmente dividido en diferentes ficheros</em>) en un único fichero <code>.js</code> (<em>lo que se conoce como bundler</em>), realizando por el camino ciertas transformaciones de código para mejorar algunos aspectos.</p>
<p>A diferencia de otros automatizadores como <a href="../../parcel/guia-tutorial-inicial-de-parcel/index.htm">Parcel</a> o <strong>Webpack</strong>, <strong>Rollup</strong> sigue más un enfoque de configuración manual, similar a <strong>Gulp</strong>, donde el desarrollador define exactamente lo que quiere conseguir. Esto puede ser algo más complejo para novatos, sin embargo, es mucho más potente y flexible para usuarios avanzados que quieren exactamente casos específicos que son más complicados de conseguir con otras herramientas con procesos más guiados.</p>
<h3 id="instalación-de-rollup" tabindex="-1"><a class="header-anchor" href="#instalación-de-rollup">Instalación de Rollup</a></h3>
<p>Para comenzar a utilizar <strong>Rollup</strong>, debemos crear una carpeta para nuestro proyecto, inicializarlo e instalar <strong>Rollup</strong>. Realicemos estos pasos desde una terminal para verlo detalladamente:</p>
<pre class="language-bash "><code class="language-bash"><span class="token comment"># Creamos la carpeta de nuestro proyecto (first-project)</span>
$ <span class="token function">mkdir</span> first-project

<span class="token comment"># Accedemos a ella</span>
$ <span class="token builtin class-name">cd</span> first-project

<span class="token comment"># Inicializamos un proyecto con los datos por defecto</span>
$ <span class="token function">npm</span> init <span class="token parameter variable">-y</span>

<span class="token comment"># Instalamos Rollup como dependencia de desarrollo</span>
$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> rollup

<span class="token comment"># Comprobamos que está correctamente instalado</span>
$ npx rollup <span class="token parameter variable">--version</span>
rollup v2.39.0</code></pre>
<p>Listo, ya tenemos <strong>Rollup</strong> instalado en nuestro proyecto, listo para comenzar. Se trata de una herramienta pequeña (<em>apenas unos ~3MB</em>) y muy rápida, por lo que el proceso de instalación será practicamente instantáneo.</p>
<blockquote>
<p>Como habrás observado, para utilizar <strong>Rollup</strong> necesitaremos tener instalado <a href="https://nodejs.org/en/">NodeJS</a>, ya que utilizaremos el gestor de paquetes y dependencias <a href="../../../npm/index.htm">NPM</a>. Si no lo tienes instalado, te recomiendo seguir la guía de instalación de <a href="../../../npm/introduccion/que-es/index.htm">Node/NPM</a>.</p>
</blockquote>
<h3 id="preparación-del-código" tabindex="-1"><a class="header-anchor" href="#preparación-del-código">Preparación del código</a></h3>
<p>Una vez instalado, lo habitual suele ser crear una estructura de carpetas para nuestro proyecto y colocar el esqueleto de la web. Podemos hacerlo así:</p>
<pre class="language-bash "><code class="language-bash"><span class="token comment"># Comprobamos que estamos en la carpeta raíz del proyecto</span>
$ <span class="token builtin class-name">pwd</span>
/home/manz/workspace/first-project

<span class="token comment"># Creamos la carpeta src/, que a su vez tendrá dentro assets/ y components/</span>
$ <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> src/<span class="token punctuation">{</span>assets,components<span class="token punctuation">}</span>

<span class="token comment"># Creamos los ficheros index.css e index.js en src/</span>
$ <span class="token function">touch</span> src/index.<span class="token punctuation">{</span>css,js<span class="token punctuation">}</span>

<span class="token comment"># Abrimos VSCode en la carpeta actual (raíz del proyecto)</span>
$ code <span class="token builtin class-name">.</span></code></pre>
<p>Observa que no hemos creado ningún fichero <code>index.html</code>. En <strong>Rollup</strong>, al igual que con <strong>Webpack</strong> (<em>y a diferencia de Parcel</em>), nuestro <strong>punto de entrada</strong> (<em>entrypoint</em>) no es un fichero <code>index.html</code>, sino un fichero <code>index.js</code>. Las aplicaciones web fuertemente basadas en Javascript, consideran que el punto de entrada es un fichero <code>.js</code>, mientras que el <code>index.html</code> lo consideran simplemente una plantilla externa que se puede copiar o generar.</p>
<p>Si el <code>index.html</code> es muy básico y pequeño, se suele autogenerar. Si va a ser algo más avanzado, se suele crear un fichero a modo de plantilla, y luego en la configuración del Rollup indicar que debe copiarse a la carpeta de destino.</p>
<h3 id="primeros-pasos-con-rollup" tabindex="-1"><a class="header-anchor" href="#primeros-pasos-con-rollup">Primeros pasos con Rollup</a></h3>
<p>Antes de comenzar a trabajar con <strong>Rollup</strong> debemos crear un fichero de configuración. Generalmente, se llama <code>rollup.config.js</code> y se coloca en la ruta raíz del proyecto. Dicho archivo de configuración debe tener al menos el siguiente contenido:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">"src/index.js"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">"dist/app.js"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">"es"</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span></code></pre>
<p>Vamos a explicar un poco los parámetros que estamos utilizando <code>input</code>, <code>output</code>, <code>file</code>, <code>format</code>, etc. Existen algunos otros parámetros, pero primero nos enfocaremos en estos:</p>
<table>
<thead>
<tr>
<th>Parámetro</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>input</code></td>
<td>Fichero de <strong>punto de entrada</strong>. Generalmente, suele ser <code>src/index.js</code>.</td>
</tr>
<tr>
<td><code>output</code></td>
<td>Un objeto con parámetros relacionados con el fichero generado de destino.</td>
</tr>
<tr>
<td><code>file</code></td>
<td>El fichero de destino a generar, que contendrá todo el javascript de la app.</td>
</tr>
<tr>
<td><code>dir</code></td>
<td>Alternativamente, se puede indicar una carpeta de destino, en lugar de un sólo fichero.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>El formato Javascript a generar. Puede ser <code>amd</code>, <code>cjs</code>, <code>es</code>, <code>iife</code>, <code>umd</code> o <code>system</code>.</td>
</tr>
<tr>
<td><code>plugins</code></td>
<td>Array con los plugins de Rollup a utilizar. De momento, vacío. Lo veremos más adelante.</td>
</tr>
</tbody>
</table>
<p>Con el mencionado ejemplo, le decimos a <strong>Rollup</strong> que queremos examinar el fichero <code>src/index.js</code>, e ir siguiendo los enlaces o referencias a otros archivos que se hagan en él. <strong>Rollup</strong> irá examinando todos los archivos e irá generando un Javascript de destino en el fichero <code>dist/app.js</code> (<em>indicado en <code>output</code> / <code>file</code></em>).</p>
<p>Por último, indicamos a <strong>Rollup</strong> que tipo de formato de código Javascript queremos generar. Las opciónes más comunes suelen ser <code>es</code> (<em><a href="../../../javascript/modulos/que-es-esm/index.htm">ESM</a>, estándar de Javascript</em>) o <code>cjs</code> (<em>CommonJS, sistema de NodeJS</em>), aunque otras opciones como <code>iife</code> o <code>umd</code> pueden ser útiles en algunas ocasiones. Otras opciones como <code>system</code> o <code>amd</code> son prácticamente legacy hoy en día. Tienes más información en <a href="../../introduccion/commonjs-vs-es-modules/index.htm">CommonJS vs ES Modules</a>.</p>
<p>Una vez hecho esto, podemos escribir en una terminal el comando <code>npx rollup -c</code>, con el que le decimos a rollup que busque un archivo de configuración y realice el proceso de generación, que recordemos que en nuestro caso es examinar el fichero <code>src/index.js</code> (<em>y todos los archivos que se enlacen desde ahí</em>), y generar un fichero <code>dist/app.js</code> final.</p>
<p>La salida de dicho comando debería ser algo parecido a esto:</p>
<pre class="language-bash "><code class="language-bash">$ npx rollup <span class="token parameter variable">-c</span>

src/index.js → dist/app.js<span class="token punctuation">..</span>.
<span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">)</span> Generated an empty chunk
index
created dist/app.js <span class="token keyword">in</span> 8ms</code></pre>
<p>El error <code>(!) Generated an empty chunk</code> aparece porque tenemos el fichero <code>src/index.js</code> sin contenido, y por lo tanto, está generando un <code>dist/app.js</code> de destino que también estará vacío. Esto ocurre porque <strong>Rollup</strong> por defecto no realiza ninguna tarea, la funcionalidad se suele dar en los <strong>plugins</strong> que activemos, que de momento no hay ninguno.</p>
<h3 id="generar-indexhtml-con-rollup" tabindex="-1"><a class="header-anchor" href="#generar-indexhtml-con-rollup">Generar index.html con Rollup</a></h3>
<p>Como hemos dicho, en aplicaciones web, lo habitual suele ser generar o utilizar un HTML como plantilla. Vamos a ver como realizar esto con <strong>Rollup</strong> y de paso vemos como añadir plugins, aunque profundizaremos en esto más adelante.</p>
<p>El primer paso para añadir plugins a <strong>Rollup</strong>, suele ser echar un vistazo a los <a href="https://github.com/rollup/plugins">plugins oficiales de Rollup</a>. Si no encontramos lo que buscamos, podemos echar un vistazo a la búsqueda <a href="https://www.npmjs.com/search?q=rollup%20plugin">rollup plugin en NPM</a>, donde también nos aparecerán plugins no oficiales.</p>
<p>Para crear la plantilla, nosotros vamos a utilizar el plugin oficial de Rollup llamado <a href="https://github.com/rollup/plugins/tree/master/packages/html">@rollup/plugin-html</a>. Para instalarlo, escribimos lo siguiente desde una terminal:</p>
<pre class="language-bash "><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> @rollup/plugin-html</code></pre>
<p>Esto instalará el paquete <code>@rollup/plugin-html</code> en la carpeta <code>node_modules</code> y lo añadirá al <code>package.json</code>. Una vez instalado, editamos el fichero <code>rollup.config.js</code> para añadir y configurar el plugin que acabamos de instalar. En la primera linea importamos la función <code>html</code> del plugin, y ejecutamos dicha función en el array de <code>plugins</code> de <strong>Rollup</strong>:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">import</span> html <span class="token keyword">from</span> <span class="token string">"@rollup/plugin-html"</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">"src/index.js"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">"dist/app.js"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">"es"</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span></code></pre>
<p>Entonces, si volvemos a ejecutar <strong>Rollup</strong> con <code>npx rollup -c</code>, observaremos que en la carpeta <code>dist</code> se nos autogenera un archivo <code>index.html</code> «de la nada», con una estructura básica de HTML y la etiqueta <code>&lt;script&gt;</code> que hace referencia al archivo de destino, en nuestro caso <code>app.js</code>:</p>
<pre class="language-html "><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Rollup Bundle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>
<p>Si nos agrada este <code>index.html</code> podemos dejarlo así. Pero si no nos gusta (<em>o queremos personalizarlo más</em>) podemos añadir un objeto de configuración a la función <code>html()</code> que tenemos en el array de plugins de <strong>Rollup</strong>. Veamos que personalizaciones podemos hacer:</p>
<table>
<thead>
<tr>
<th></th>
<th>Opción</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><badge-type class="object"></badge-type></td>
<td><code>attributes</code></td>
<td>Indica atributos adicionales para las etiquetas <code>&lt;html&gt;</code>, <a href="https://lenguajehtml.com/html/cabecera/etiquetas-html-de-relacion/"><code>&lt;link&gt;</code></a> y <a href="https://lenguajehtml.com/html/scripting/etiquetas-html-scripts/"><code>&lt;script&gt;</code></a>.</td>
</tr>
<tr>
<td><badge-type class="string"></badge-type></td>
<td><code>fileName</code></td>
<td>Indica el nombre del fichero generado. Por defecto, <code>index.html</code>.</td>
</tr>
<tr>
<td><badge-type class="array"></badge-type></td>
<td><code>meta</code></td>
<td>Indica una colección de objetos con las etiquetas <a href="https://lenguajehtml.com/html/cabecera/etiquetas-html-de-metadatos/"><code>&lt;meta&gt;</code></a> a insertar.</td>
</tr>
<tr>
<td><badge-type class="string"></badge-type></td>
<td><code>publicPath</code></td>
<td>Indica un prefijo para añadir a los assets (ficheros) del HTML. Por defecto, sin prefijo.</td>
</tr>
<tr>
<td><badge-type class="string"></badge-type></td>
<td><code>title</code></td>
<td>Indica el título del documento HTML. Por defecto, <code>Rollup Bundle</code>.</td>
</tr>
<tr>
<td><badge-type class="function"></badge-type></td>
<td><code>template</code></td>
<td>Utiliza una función para personalizar el HTML de la plantilla. Ver más adelante.</td>
</tr>
</tbody>
</table>
<p>Por defecto, si añadimos <code>html()</code> sin parámetro de opciones en el apartado <code>plugins</code> de Rollup, la configuración por defecto que toma sería similar a si hacemos lo siguiente:</p>
<pre class="language-js "><code class="language-js">  <span class="token comment">/* ... */</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">attributes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">lang</span><span class="token operator">:</span> <span class="token string">"en"</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">script</span><span class="token operator">:</span> <span class="token keyword">null</span>    <span class="token comment">/* Si usamos formato "es", se añade { type: "module" } */</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">fileName</span><span class="token operator">:</span> <span class="token string">"index.html"</span><span class="token punctuation">,</span>
      <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">charset</span><span class="token operator">:</span> <span class="token string">"utf-8"</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">publicPath</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"Rollup Bundle"</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
  <span class="token comment">/* ... */</span></code></pre>
<h4 id="función-template-rollup-html" tabindex="-1"><a class="header-anchor" href="#función-template-rollup-html">Función template (Rollup html)</a></h4>
<p>Por defecto, la función <code>template</code> de las opciones de <strong>Rollup</strong>, aunque no se especifique explícitamente, tiene el contenido que veremos a continuación. Se trata de una función que toma por parámetro un objeto, que contiene varias propiedades que son las que se utilizan para crear el <code>index.html</code> y definen la estructura del mismo:</p>
<pre class="language-js "><code class="language-js">  <span class="token comment">/* ... */</span>
  <span class="token function-variable function">template</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> attributes<span class="token punctuation">,</span> bundle<span class="token punctuation">,</span> files<span class="token punctuation">,</span> publicPath<span class="token punctuation">,</span> title <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">
    &lt;!DOCTYPE html>
    &lt;html </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>attributes<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">>
      &lt;head>
        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>metas<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
        &lt;title></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/title>
        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>links<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
      &lt;/head>
      &lt;body>
        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>scripts<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
      &lt;/body>
    &lt;/html>
  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
  <span class="token comment">/* ... */</span></code></pre>
<p>Nosotros podríamos modificar el contenido del <badge-type class="string"></badge-type> que devuelve esta función, para personalizarlo a nuestro gusto y definir como queremos la estructura del <code>index.html</code>.</p>
<h3 id="usar-plantilla-indexhtml-con-rollup" tabindex="-1"><a class="header-anchor" href="#usar-plantilla-indexhtml-con-rollup">Usar plantilla index.html con Rollup</a></h3>
<p>Si la modalidad anterior no te convence, siempre podremos ir a una estrategia más conservadora y en lugar de generar el <code>index.html</code>, crearlos nosotros mismos, y simplemente copiarlo a la carpeta de destino <code>dist</code>. En esta modalidad, lo único que debemos tener en cuenta es que tenemos que encargarnos personalmente de asegurarnos de que los nombres de los archivos enlazados sean correctos, porque recuerda que en algunos casos, los nombres definitivos suelen cambiar.</p>
<p>Si queremos realizar esta modalidad, en lugar del plugin <strong>@rollup/plugin-html</strong> que comentamos antes, instalaremos el plugin <a href="https://github.com/vladshcherbin/rollup-plugin-copy">rollup-plugin-copy</a>. Se trata de un plugin no oficial, pero bastante popular que hace copias de ficheros estáticos al destino que le indiquemos.</p>
<p>Para instalarlo, haremos lo siguiente desde una terminal:</p>
<pre class="language-bash "><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> rollup-plugin-copy</code></pre>
<p>Y modificaremos el fichero de configuración para hacerlo funcionar. Observa que en primer lugar, importaremos la función <code>copy</code> del plugin recién instalado, y luego lo utilizaremos en el <badge-type class="array"></badge-type> de <code>plugins</code>, pasándole un <badge-type class="object"></badge-type> de configuración por parámetro, donde indicaremos los ficheros o carpetas que vamos a copiar, y a donde:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">import</span> copy <span class="token keyword">from</span> <span class="token string">"rollup-plugin-copy"</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">"src/index.js"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">"dist/app.js"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">"es"</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">"src/index.html"</span><span class="token punctuation">,</span> <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">"dist"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">"src/assets/**/*"</span><span class="token punctuation">,</span> <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">"dist/assets"</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span></code></pre>
<p>En este ejemplo, copiamos el fichero <code>src/index.html</code> y lo guardamos en <code>dist/</code>, y además, también copiamos todos los archivos de la carpeta <code>src/assets</code>, y al indicar <code>/**/</code> nos referimos a que también haga lo mismo con todas sus subcarpetas, y los deposite en <code>dist/assets</code>.</p>
<blockquote>
<p>Recuerda que si utilizas esta modalidad, como desarrollador eres el responsable de mantener actualizados los nombres de los archivos en el fichero <code>index.html</code>, mientras que el plugin anterior lo hace todo automáticamente.</p>
</blockquote>
<p>Ten en cuenta que <strong>Rollup</strong> solo construye los ficheros Javascript que utilizaremos en la web final, y carece de un servidor local propio, por si queremos ir viendo los cambios en desarrollo antes de subirlos al servidor final. En el siguiente artículo veremos como preparar <strong>Rollup</strong> como un servidor de desarrollo.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../../vite/guia-tutorial-inicial-de-vite/index.htm" title="Guía tutorial inicial de Vite">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Guía tutorial inicial de Vite</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../servidor-desarrollo-con-rollup/index.htm" title="Servidor de desarrollo con Rollup">
  <div>
    <span>Servidor de desarrollo con Rollup</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/Xi07tHFzqR8" title="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
  <img loading="lazy" src="../../../vi/Xi07tHFzqR8/mqdefault.jpg" alt="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
</a><a href="https://youtu.be/UVauEId-jJ0" title="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
  <img loading="lazy" src="../../../vi/UVauEId-jJ0/mqdefault.jpg" alt="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
</a><a href="https://youtu.be/EiKYr5vjs48" title="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
  <img loading="lazy" src="../../../vi/EiKYr5vjs48/mqdefault.jpg" alt="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
</a><a href="https://youtu.be/S0YA8BadVbM" title="Cambiar clases CSS desde Javascript con classList">
  <img loading="lazy" src="../../../vi/S0YA8BadVbM/mqdefault.jpg" alt="Cambiar clases CSS desde Javascript con classList">
</a><a href="https://youtu.be/KE2xRDM4Amg" title="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
  <img loading="lazy" src="../../../vi/KE2xRDM4Amg/mqdefault.jpg" alt="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
</a><a href="https://youtu.be/A11eG1o611M" title="Creador de historias con Javascript y ChatGPT">
  <img loading="lazy" src="../../../vi/A11eG1o611M/mqdefault.jpg" alt="Creador de historias con Javascript y ChatGPT">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../../javascript/index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../../npm/index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../../webcomponents/index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../../vuejs/index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-6', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
