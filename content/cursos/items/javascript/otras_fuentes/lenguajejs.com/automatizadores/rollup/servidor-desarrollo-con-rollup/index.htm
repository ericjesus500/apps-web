<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#b59374">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Servidor de desarrollo con Rollup - Javascript en español - Lenguaje JS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Rollup no incluye un servidor local de desarrollo integrado, sin embargo, podemos utilizar herramientas externas para adaptarlos.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Servidor de desarrollo con Rollup - Javascript en español">
  <meta property="og:image" content="https://lenguajejs.com/automatizadores/rollup/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Rollup no incluye un servidor local de desarrollo integrado, sin embargo, podemos utilizar herramientas externas para adaptarlos.">
  <meta property="og:url" content="https://lenguajejs.com/automatizadores/rollup/servidor-desarrollo-con-rollup/">
  <meta property="twitter:url" content="https://lenguajejs.com/automatizadores/rollup/servidor-desarrollo-con-rollup/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Servidor de desarrollo con Rollup - Javascript en español">
  <meta property="twitter:description" content="Rollup no incluye un servidor local de desarrollo integrado, sin embargo, podemos utilizar herramientas externas para adaptarlos.">
  <meta property="twitter:image" content="https://lenguajejs.com/automatizadores/rollup/large-summary.jpg">

  </head>

<body class="js menu-open " style="--logo-color: #f0db4f"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje JS</h1>

    <a class="cover" title="Lenguaje JS (automatizadores)" href="../../index.htm" style="--image: url('../../../assets/automatizadores.jpg')"></a>

    <header>
      <a href="../../vite/guia-tutorial-inicial-de-vite/index.htm" title="Guía tutorial inicial de Vite">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../parcel/guia-tutorial-inicial-de-parcel/index.htm" title="Guía tutorial inicial de Parcel">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Rollup
      </span>
            <a class="link" href="../guia-tutorial-inicial-de-rollup/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Guía tutorial inicial de Rollup
            </a>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Servidor de desarrollo con Rollup
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#js"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeJS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/automatizadores.jpg')">
    <h1><a href="index.htm">Servidor de desarrollo con Rollup</a></h1><h2 class="typewriter">Añadiendo un servidor local de desarrollo a Rollup</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../guia-tutorial-inicial-de-rollup/index.htm">Guía tutorial inicial de Rollup</a>
    <a class="current" href="index.htm">Servidor de desarrollo con Rollup</a>
    <a href="../../parcel/guia-tutorial-inicial-de-parcel/index.htm">Guía tutorial inicial de Parcel</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p>La herramienta <strong>Rollup</strong> no incluye un servidor local de desarrollo, tal y como lo hacen <strong>Parcel</strong> o <strong>Webpack</strong>. Sin embargo, nosotros podemos crear una configuración adaptada a nuestro gusto, donde incluyamos un servidor local de desarrollo y utilizarlo conjuntamente a <strong>Rollup</strong>. ¡Veamos como hacerlo!</p>
<blockquote>
<p>Si eres nuevo con <strong>Rollup</strong>, o no sabes nada sobre él, echale un vistazo a los primeros capítulos donde sentamos las bases y explicamos como empezar con este automatizador.</p>
</blockquote>
<h3 id="configuración-inicial-de-rollup" tabindex="-1"><a class="header-anchor" href="#configuración-inicial-de-rollup">Configuración inicial de Rollup</a></h3>
<p>Vamos a partir de la <strong>configuración de Rollup</strong> del artículo anterior: <a href="../guia-tutorial-inicial-de-rollup/index.htm">Guía inicial de Rollup</a>, donde teníamos una estructura de carpetas y el siguiente archivo de configuración <code>rollup.config.js</code>:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">import</span> copy <span class="token keyword">from</span> <span class="token string">"rollup-plugin-copy"</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">"src/index.js"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">"dist/app.js"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">"es"</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">"src/index.html"</span><span class="token punctuation">,</span> <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">"dist"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">"src/assets/**/*"</span><span class="token punctuation">,</span> <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">"dist/assets"</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span></code></pre>
<p>Observa que lo que estamos indicando a <strong>Rollup</strong> es lo siguiente:</p>
<ul>
<li>Revisa nuestro <code>src/index.js</code> y genera el final en <code>dist/app.js</code> (en formato <a href="../../../javascript/modulos/que-es-esm/index.htm">ESM</a>).</li>
<li>A través del plugin <code>rollup-plugin-copy</code>, copia el archivo <code>src/index.html</code> a <code>dist</code>.</li>
<li>A través del mismo plugin, copia todo el contenido (<em>archivos y subcarpetas</em>) de <code>src/assets</code> en <code>dist/assets</code>.</li>
</ul>
<p>Ahora nos faltaría incluir los siguientes <a href="../../../npm/administracion/scripts-de-npm/index.htm">scripts de NPM</a> en nuestro archivo <code>package.json</code> para simplificar nuestras tareas:</p>
<pre class="language-js "><code class="language-js"><span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
  <span class="token string-property property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">"start"</span><span class="token operator">:</span> <span class="token string">"rollup -c -w"</span><span class="token punctuation">,</span>
    <span class="token string-property property">"build"</span><span class="token operator">:</span> <span class="token string">"rollup -c"</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span></code></pre>
<p>En el segundo de ellos, el script <code>build</code>, estamos utilizando el parámetro <code>-c</code> para que lea el archivo de configuración <code>rollup.config.js</code>. En el primero, además de esto, con el parámetro <code>-w</code> le indicamos que active el <strong>modo watch</strong>, una modalidad en la que cuando termine la tarea de compilación no finaliza el programa, sino que se queda vigilando los ficheros implicados para que, si detecta cambios, vuelva a generar la compilación.</p>
<h3 id="modo-watch-de-rollup" tabindex="-1"><a class="header-anchor" href="#modo-watch-de-rollup">Modo watch de Rollup</a></h3>
<p>El problema principal que vamos a tener con la configuración anterior, es que debemos tener claro cuál es el workflow que hemos creado con nuestro empaquetador <strong>Rollup</strong>:</p>
<pre class="language-bash "><code class="language-bash">---- index.js
      <span class="token operator">|</span>-- moduleA.js
      <span class="token operator">|</span>-- moduleB.js

---- index.html
---- assets
      <span class="token operator">|</span>-- image.jpg</code></pre>
<p>Por ejemplo, imaginemos que tenemos un <code>src/index.js</code> donde hacemos dos <code>import</code> a los ficheros <code>moduleA.js</code> y <code>moduleB.js</code>. Rollup estará vigilando estos tres archivos, porque son los que forman parte del workflow. Sin embargo, quizás de forma adicional nosotros queremos que cuando se modifiquen los ficheros <code>index.html</code> u otros también se dispare <strong>Rollup</strong> de nuevo y procese los cambios.</p>
<p>Recuerda que <code>index.html</code> y los enlaces que tengamos referenciados en este fichero, no forman parte del workflow principal, sino que se están copiando a la carpeta de destino mediante el plugin <code>copy</code> de Rollup. Podemos instalar y configurar el plugin <code>watch-assets</code>:</p>
<pre class="language-bash "><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> rollup-plugin-watch-assets</code></pre>
<p>Modificando también el fichero de configuración <code>rollup.config.js</code>, para añadir dicho plugin y su respectiva configuración. El fichero de configuración quedaría como podemos ver a continuación en las siguientes lineas:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">import</span> copy <span class="token keyword">from</span> <span class="token string">"rollup-plugin-copy"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> watch <span class="token keyword">from</span> <span class="token string">"rollup-plugin-watch-assets"</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">"src/index.js"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">"dist/app.js"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">"es"</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">"src/index.html"</span><span class="token punctuation">,</span> <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">"dist"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">"src/assets/**/*"</span><span class="token punctuation">,</span> <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">"dist/assets"</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">assets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src"</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span></code></pre>
<p>Observa que lo que hemos hecho es importar el plugin <code>rollup-plugin-watch-assets</code> y añadirlo al <badge-type class="array"></badge-type> de la lista de plugins, donde puedes ver que está <code>copy()</code> (<em>el que realiza las copias de los assets</em>) y <code>watch</code>, que es el nuevo plugin que hemos instalado. Observa que el <badge-type class="object"></badge-type> de configuración de dicho plugin se basa en una propiedad <code>assets</code> que contiene un <badge-type class="array"></badge-type> con las carpetas o ficheros que queremos vigilar. En nuestro caso he puesto <code>src</code>, que es donde tenemos todos los archivos originales.</p>
<p>De esta forma, al cambiar cualquier archivo que tengamos en <code>src</code>, se nos disparará <strong>Rollup</strong> para actualizar los cambios en <code>dist</code>.</p>
<h3 id="servidor-local-de-desarrollo" tabindex="-1"><a class="header-anchor" href="#servidor-local-de-desarrollo">Servidor local de desarrollo</a></h3>
<p>Como hemos dicho más atrás, <strong>Rollup</strong> no incorpora un servidor local de desarrollo propio, por lo que si queremos utilizar uno en nuestro workflow, debemos instalar uno externo para utilizar. Existen muchísimos, sin embargo, en este artículo voy a citar <a href="https://github.com/lukejacksonn/servor">servor</a>, de <a href="https://twitter.com/lukejacksonn">@lukejacksonn</a>, por varias razones principales:</p>
<ul>
<li>Es pequeño, rápido y ligero.</li>
<li>No tiene dependencias externas.</li>
<li>Posee capacidad de autorecarga.</li>
</ul>
<p>Para instalarlo, haremos lo siguiente:</p>
<pre class="language-bash "><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> servor</code></pre>
<p>Ahora, si ejecutamos <code>npx servor dist --reload</code> abriremos un servidor local que por defecto escucha en <code>http://localhost:8080</code>. Acto seguido, modificaremos el <code>package.json</code> para dejarlo como se ve a continuación:</p>
<pre class="language-js "><code class="language-js"><span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
  <span class="token string-property property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">"dev"</span><span class="token operator">:</span> <span class="token string">"servor dist --reload &amp; rollup -c -w"</span><span class="token punctuation">,</span>
    <span class="token string-property property">"build"</span><span class="token operator">:</span> <span class="token string">"rollup -c"</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span></code></pre>
<p>De este modo, cada vez que escribamos <code>npm run dev</code>, iniciamos el servidor local en <code>http://localhost:8080</code> y ponemos <strong>Rollup</strong> a vigilar cambios. Observa el script <code>dev</code>, que realiza las siguientes tareas:</p>
<ul>
<li>Monta un servidor local de desarrollo con <code>servor</code>, usando el contenido de la carpeta <code>dist</code>.</li>
<li>El parámetro <code>--reload</code> recarga la web en el navegador si detecta cambios.</li>
<li>Al utilizar <code>&amp;</code> (<em>ojo, no <code>&amp;&amp;</code></em>), le decimos que a la misma vez, ejecute el siguiente comando.</li>
<li>Con <code>rollup -c -w</code> leemos la configuración y lo ponemos en modo vigilar cambios.</li>
</ul>
<p><strong>Servor</strong> acepta los siguientes parámetros: <code>npx servor &lt;folder&gt; &lt;entrypoint&gt; &lt;port&gt;</code>, de modo que <code>npx servor dist main.html 1234 --reload</code> montaría un servidor con el contenido de la carpeta <code>dist</code> (<em>por defecto es la carpeta actual</em>), buscaría un fichero <code>main.html</code> (<em>por defecto es <code>index.html</code></em>) y el servidor escucharía en el puerto <code>1234</code> (<em>por defecto, usa el puerto 8080</em>). Además, posee otros parámetros interesantes:</p>
<table>
<thead>
<tr>
<th>Parámetro</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>--browse</code></td>
<td>Abre el navegador automáticamente.</td>
</tr>
<tr>
<td><code>--reload</code></td>
<td>Recarga el navegador cuando detecta cambios en ficheros.</td>
</tr>
<tr>
<td><code>--secure</code></td>
<td>Utiliza HTTPS con credenciales autogeneradas.</td>
</tr>
<tr>
<td><code>--silent</code></td>
<td>Modo silencioso. No muestra errores o logs en la terminal.</td>
</tr>
<tr>
<td><code>--module</code></td>
<td>Utiliza <code>&lt;script type=&quot;module&quot;&gt;</code> para utilizar <code>import</code> en navegador.</td>
</tr>
<tr>
<td><code>--static</code></td>
<td>Modo estático. Enruta index anidados si existen.</td>
</tr>
<tr>
<td><code>--editor</code></td>
<td>Abre el VSCode automáticamente.</td>
</tr>
</tbody>
</table>
<p>Recuerda que con <kbd>CTRL</kbd>+<kbd>C</kbd> puedes detener el script <code>npm run dev</code>, por lo que tanto el servidor local <code>servor</code> como <code>rollup</code> se interrumpirán y podrás volver a escribir en la terminal.</p>
<blockquote>
<p>Usar <strong>Servor</strong> es solo una decisión propia. Puedes utilizar cualquier otro servidor local. Por ejemplo, en el artículo <a href="https://lenguajejs.com/webcomponents/introduccion/web-dev-server/">Servidor local de desarrollo: Web Dev Server</a> explico como utilizar <strong>wds</strong>, un servidor moderno de nueva generación un poco más completo y orientado a ESM.</p>
</blockquote>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../guia-tutorial-inicial-de-rollup/index.htm" title="Guía tutorial inicial de Rollup">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Guía tutorial inicial de Rollup</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../../parcel/guia-tutorial-inicial-de-parcel/index.htm" title="Guía tutorial inicial de Parcel">
  <div>
    <span>Guía tutorial inicial de Parcel</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/Xi07tHFzqR8" title="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
  <img loading="lazy" src="../../../vi/Xi07tHFzqR8/mqdefault.jpg" alt="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
</a><a href="https://youtu.be/KE2xRDM4Amg" title="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
  <img loading="lazy" src="../../../vi/KE2xRDM4Amg/mqdefault.jpg" alt="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
</a><a href="https://youtu.be/UVauEId-jJ0" title="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
  <img loading="lazy" src="../../../vi/UVauEId-jJ0/mqdefault.jpg" alt="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
</a><a href="https://youtu.be/S0YA8BadVbM" title="Cambiar clases CSS desde Javascript con classList">
  <img loading="lazy" src="../../../vi/S0YA8BadVbM/mqdefault.jpg" alt="Cambiar clases CSS desde Javascript con classList">
</a><a href="https://youtu.be/sU4e6_i_ExU" title="Consejos y buenas prácticas (IV): Javascript + Imágenes">
  <img loading="lazy" src="../../../vi/sU4e6_i_ExU/mqdefault.jpg" alt="Consejos y buenas prácticas (IV): Javascript + Imágenes">
</a><a href="https://youtu.be/A11eG1o611M" title="Creador de historias con Javascript y ChatGPT">
  <img loading="lazy" src="../../../vi/A11eG1o611M/mqdefault.jpg" alt="Creador de historias con Javascript y ChatGPT">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../../javascript/index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../../npm/index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../../webcomponents/index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../../vuejs/index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-6', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
