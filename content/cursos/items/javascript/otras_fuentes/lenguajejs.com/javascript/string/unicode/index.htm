<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#ecc022">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>Contenido de texto Unicode - Javascript en español - Lenguaje JS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Unicode es un estándar de codificación para representar carácteres de una forma universal y organizada.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="Contenido de texto Unicode - Javascript en español">
  <meta property="og:image" content="https://lenguajejs.com/javascript/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Unicode es un estándar de codificación para representar carácteres de una forma universal y organizada.">
  <meta property="og:url" content="https://lenguajejs.com/javascript/string/unicode/">
  <meta property="twitter:url" content="https://lenguajejs.com/javascript/string/unicode/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Contenido de texto Unicode - Javascript en español">
  <meta property="twitter:description" content="Unicode es un estándar de codificación para representar carácteres de una forma universal y organizada.">
  <meta property="twitter:image" content="https://lenguajejs.com/javascript/large-summary.jpg">

  </head>

<body class="js menu-open " style="--logo-color: #f0db4f"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje JS</h1>

    <a class="cover" title="Lenguaje JS (javascript)" href="../../index.htm" style="--image: url('../../../assets/javascript.jpg')"></a>

    <header>
      <a href="../../number/variables-numericas/index.htm" title="¿Qué es un Number?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../objetos/que-son/index.htm" title="¿Qué son los objetos?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Strings
      </span>
            <a class="link" href="../variables-texto/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              ¿Qué es un String?
            </a>
            <a class="link" href="../substrings/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Posiciones y substrings
            </a>
            <a class="link" href="../buscar-y-reemplazar/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Buscar y reemplazar
            </a>
            <a class="link" href="../modificar/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Modificar cadenas de texto
            </a>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Contenido de texto Unicode
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#js"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeJS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/javascript.jpg')">
    <h1><a href="index.htm">Contenido de texto Unicode</a></h1><h2 class="typewriter">Utilizar símbolos, carácteres extendidos o emojis</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../modificar/index.htm">Modificar cadenas de texto</a>
    <a class="current" href="index.htm">Contenido de texto Unicode</a>
    <a href="../../objetos/que-son/index.htm">¿Qué son los objetos?</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p><strong>Unicode</strong> es el nombre por el que se conoce al sistema moderno de <strong>codificación de carácteres</strong> que se usa en informática. A grandes rasgos, cada carácter como podría ser la <code>A</code>, la <code>B</code> (<em>o cualquier otro</em>), tiene su representación <strong>Unicode</strong>, que se basa en un código o <strong>code point</strong>.</p>
<h3 id="qué-es-unicode" tabindex="-1"><a class="header-anchor" href="#qué-es-unicode">¿Qué es Unicode?</a></h3>
<p>Por ejemplo, tomemos como ejemplo el carácter <code>A</code> (<em>mayúsculas</em>). Este carácter corresponde al código Unicode <code>U+0041</code>, el cual se forma por el indicativo <code>U+</code> seguido del número hexadecimal, que en este caso es <code>0x0041</code>, o <code>65</code> si hablamos de números decimales. Con esto, podemos representar esos caracteres en HTML o en texto, pero para verlo más claro, observa la siguiente tabla con algunos ejemplos:</p>
<table>
<thead>
<tr>
<th>Carácter</th>
<th>Unicode</th>
<th>Decimal</th>
<th>Hexadecimal</th>
<th>Entidad HTML</th>
<th>Unicode</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>A</code></td>
<td><code>U+0041</code></td>
<td><code>65</code></td>
<td><code>0x0041</code></td>
<td><code>&amp;#65;</code></td>
<td><code>\u{0041}</code></td>
</tr>
<tr>
<td><code>M</code></td>
<td><code>U+004d</code></td>
<td><code>77</code></td>
<td><code>0x004d</code></td>
<td><code>&amp;#77;</code></td>
<td><code>\u{004d}</code></td>
</tr>
<tr>
<td><code>Z</code></td>
<td><code>U+005a</code></td>
<td><code>90</code></td>
<td><code>0x005a</code></td>
<td><code>&amp;#90;</code></td>
<td><code>\u{005a}</code></td>
</tr>
<tr>
<td><code>z</code></td>
<td><code>U+007a</code></td>
<td><code>122</code></td>
<td><code>0x007a</code></td>
<td><code>&amp;#122;</code></td>
<td><code>\u{007a}</code></td>
</tr>
</tbody>
</table>
<p>Si no lo ves claro, escribe en el código HTML la entidad <code>&amp;#122;</code> o en una consola Javascript del navegador lo siguiente:</p>
<pre class="language-js "><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"\u{007a}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// "z"</span></code></pre>
<p>Comprobarás que efectivamente, este código representa el símbolo o carácter que simboliza visualmente. Hay una gran cantidad de <strong>code points</strong>, que están en el rango de <code>U+0000</code> hasta <code>U+10FFFF</code>, de modo que cualquier símbolo existente tiene su su representación en <a href="https://www.unicode.org/charts/">Unicode</a>.</p>
<p>En Javascript, tenemos dos métodos interesantes relacionados con este tema:</p>
<table>
<thead>
<tr>
<th>Método</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><badge-type class="string"></badge-type> <code>\u{</code><badge-type class="number"></badge-type><code>number}</code></td>
<td>Devuelve el <strong>carácter unicode</strong> representado por el número hexadecimal <code>number</code>.</td>
</tr>
<tr>
<td><badge-type class="string"></badge-type> <code>String.fromCodePoint(number)</code></td>
<td>Devuelve el <strong>carácter</strong> representado por el número <badge-type class="number"></badge-type> <code>number</code>.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.codePointAt(pos)</code></td>
<td>Devuelve el <strong>valor decimal</strong> del carácter de la posición <code>pos</code> del texto.</td>
</tr>
</tbody>
</table>
<p>Vamos a verlo con varios ejemplos para entender su utilización.</p>
<h4 id="código-unicode-de-un-carácter" tabindex="-1"><a class="header-anchor" href="#código-unicode-de-un-carácter">Código Unicode de un carácter</a></h4>
<p>Desde Javascript es muy sencillo convertir un carácter a su <strong>representación en Unicode</strong>. Es tan sencillo como utilizar el método <code>.codePointAt()</code>, al que se le debe pasar la posición del carácter a analizar:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">const</span> letter <span class="token operator">=</span> <span class="token string">"Manz"</span><span class="token punctuation">;</span>

letter<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                            <span class="token comment">// "M" (En la posición 0 está la "M")</span>
letter<span class="token punctuation">.</span><span class="token function">codePointAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 77 (77 es el número decimal de la "M")</span>
letter<span class="token punctuation">.</span><span class="token function">codePointAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// "4d" (0x004d es el número hexadecimal de la "M")</span>

letter<span class="token punctuation">.</span><span class="token function">codePointAt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 122</span>
letter<span class="token punctuation">.</span><span class="token function">codePointAt</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// undefined (no hay carácter en esta posición)</span></code></pre>
<p>Si un carácter no existe, observa que devuelve <badge-type class="undefined"></badge-type>.</p>
<h4 id="carácter-de-un-código-unicode" tabindex="-1"><a class="header-anchor" href="#carácter-de-un-código-unicode">Carácter de un código Unicode</a></h4>
<p>Si queremos realizar el paso inverso, es decir, teniendo un número decimal o hexadecimal, obtener el carácter que representa, podemos hacerlo de la siguiente forma, utilizando el método estático <code>String.fromCodePoint()</code>, al que se le pasa el número en cuestión:</p>
<pre class="language-js "><code class="language-js">String<span class="token punctuation">.</span><span class="token function">fromCodePoint</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// "A"</span>
String<span class="token punctuation">.</span><span class="token function">fromCodePoint</span><span class="token punctuation">(</span><span class="token number">77</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// "M"</span>
String<span class="token punctuation">.</span><span class="token function">fromCodePoint</span><span class="token punctuation">(</span><span class="token number">0x004d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// "M"</span></code></pre>
<p>Observa que en el último caso, le pasamos el número en hexadecimal. Funciona perfectamente también, ya que <code>0x004d</code> y <code>77</code> son el mismo número, sólo que representado en otra base numérica.</p>
<h3 id="emojis-emoticonos" tabindex="-1"><a class="header-anchor" href="#emojis-emoticonos">Emojis (emoticonos)</a></h3>
<p>Una parte muy importante de <strong>Unicode</strong> es la representación de emojis, donde lo mencionado anteriormente se complica un poco. Antes de continuar, aclarar que un <strong>Emoji</strong> es una representación visual y gráfica de un concepto. Quizás, su forma más conocida son los <strong>emojis</strong> de WhatsApp, o los <strong>emojis</strong> de redes sociales, pero tienes que saber que el concepto es universal, sólo que las diferentes plataformas (<em>WhatsApp, Twitter...</em>) o sistemas operativos (<em>Windows, Linux, Mac, Android...</em>) pueden dibujarlos de diferente forma.</p>
<p>Siguiendo la misma explicación anterior, podemos encontrar que con los emojis ocurre lo mismo. Sin embargo hay algo que cabría destacar. Observa que aparece una última nueva columna, con los dos primeros emojis de ejemplo sin datos, pero con los últimos con dos bloques <code>\u{___}</code>:</p>
<table>
<thead>
<tr>
<th>Carácter</th>
<th>Unicode</th>
<th>Decimal</th>
<th>Hexadecimal</th>
<th>Entidad HTML</th>
<th>Unicode</th>
<th>Combinación</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>⚡</code></td>
<td><code>U+26a1</code></td>
<td><code>9889</code></td>
<td><code>0x26a1</code></td>
<td><code>&amp;#9889;</code></td>
<td><code>\u{26a1}</code></td>
<td>Es independiente</td>
</tr>
<tr>
<td><code>⛔</code></td>
<td><code>U+26d4</code></td>
<td><code>9940</code></td>
<td><code>0x26d4</code></td>
<td><code>&amp;#9940;</code></td>
<td><code>\u{26d4}</code></td>
<td>Es independiente</td>
</tr>
<tr>
<td><code>😀</code></td>
<td><code>U+1f600</code></td>
<td><code>128512</code></td>
<td><code>0x1f600</code></td>
<td><code>&amp;#128512;</code></td>
<td><code>\u{1f600}</code></td>
<td><code>\u{D83D}\u{DE00}</code></td>
</tr>
<tr>
<td><code>🚗</code></td>
<td><code>U+1f697</code></td>
<td><code>128663</code></td>
<td><code>0x1f697</code></td>
<td><code>&amp;#128663;</code></td>
<td><code>\u{1f697}</code></td>
<td><code>\u{D83D}\u{DE97}</code></td>
</tr>
</tbody>
</table>
<p>Esto ocurre porque los primeros emojis que se crearon funcionan exactamente como los caracteres o símbolos que explicamos anteriormente, sin embargo, a medida que comenzamos a necesitar más emojis y se fueron creando más, los siguientes empezaron a formarse a partir de varios códigos unicode.</p>
<p>Esto se puede ver muy fácilmente de la siguiente forma:</p>
<pre class="language-js "><code class="language-js"><span class="token string">"⚡"</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>     <span class="token comment">// 1</span>
<span class="token string">"⛔"</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>     <span class="token comment">// 1</span>
<span class="token string">"😀"</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>     <span class="token comment">// 2</span>
<span class="token string">"🚗"</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>     <span class="token comment">// 2</span></code></pre>
<p>Ahora, vamos a intentar separarlos utilizando el método <code>.split()</code> que aprendimos en temas anteriores. Te encontrarás con que los emojis «más antiguos» sólo tienen su propio elemento, mientras que los posteriores, los descompone en dos <strong>code points</strong> combinados.</p>
<pre class="language-js "><code class="language-js"><span class="token string">"⚡"</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// ["⚡"]</span>
<span class="token string">"⛔"</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// ["⛔"]</span>
<span class="token string">"😀"</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// ["\uD83D", "\uDE00"]</span>
<span class="token string">"🚗"</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// ["\uD83D", "\uDE97"]</span></code></pre>
<p>Esto permite que se puedan crear muchos más emojis realizando combinaciones, ya que observa que los dos últimos emojis, comparten el primer <strong>code point</strong> <code>\u{D83D}</code>, sin embargo, varía el último.</p>
<h4 id="emojis-combinados" tabindex="-1"><a class="header-anchor" href="#emojis-combinados">Emojis combinados</a></h4>
<p>Quizás no lo sepas, pero hay algún que otro giro de guión interesante con los <strong>emojis</strong>, más concretamente con los más recientes. Nada mejor que demostrarlo con un ejemplo de código, que luego explicaremos:</p>
<pre class="language-js "><code class="language-js"><span class="token string">"👨‍👩‍👧‍👦"</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>              <span class="token comment">// 11</span>

<span class="token keyword">const</span> paste <span class="token operator">=</span> <span class="token string">"\u{200d}"</span><span class="token punctuation">;</span>  <span class="token comment">// Code point de "pegamento"</span>
<span class="token string">"👨‍👩‍👧‍👦"</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>paste<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// ["👨", "👩", "👧", "👦"]</span>

<span class="token punctuation">[</span><span class="token string">"👨"</span><span class="token punctuation">,</span> <span class="token string">"👩"</span><span class="token punctuation">,</span> <span class="token string">"👧"</span><span class="token punctuation">,</span> <span class="token string">"👦"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// "👨👩👧👦"</span>
<span class="token punctuation">[</span><span class="token string">"👨"</span><span class="token punctuation">,</span> <span class="token string">"👩"</span><span class="token punctuation">,</span> <span class="token string">"👧"</span><span class="token punctuation">,</span> <span class="token string">"👦"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>paste<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// "👨‍👩‍👧‍👦"</span>
<span class="token punctuation">[</span><span class="token string">"👨"</span><span class="token punctuation">,</span> <span class="token string">"👨"</span><span class="token punctuation">,</span> <span class="token string">"👧"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>paste<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// "👨‍👨‍👧"</span>
<span class="token punctuation">[</span><span class="token string">"👩"</span><span class="token punctuation">,</span> <span class="token string">"👩"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>paste<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// "👩‍👩"</span></code></pre>
<p>En primer lugar, observa que el emoji de la familia nos dice que tiene un tamaño de <code>11</code>. Si investigamos un poco, y hacemos una <a href="../../arrays/desestructuracion-arrays/index.htm">desestructuración</a> con <code>[...&quot;👨‍👩‍👧‍👦&quot;]</code>, veremos que el truco es que está combinado por varios emojis individuales, que tienen mucho sentido al combinar.</p>
<p>Observa que si unimos los cuatro emojis individuales por una cadena vacía <code>&quot;&quot;</code>, obtenemos los cuatro emojis individuales unidos en un <badge-type class="string"></badge-type>, sin embargo, si utilizamos el code point <code>\u{200d}</code> como &quot;pegamento&quot;, esos emojis se unen formando un emoji individual que forma una familia. De hecho, podemos incluso ir cambiando los emojis individuales que lo forman, y veremos que se refleja en el resultado.</p>
<p>Existen varios emojis de este tipo, que permiten hacer combinaciones. Algunos ejemplos:</p>
<table>
<thead>
<tr>
<th>Emoji</th>
<th>Emojis miembros</th>
<th>Code Points Individuales</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>👩‍⚕️</code></td>
<td><code>👩</code> + <code>⚕️</code></td>
<td><code>&quot;\ud83d\udc69\u200d\u2695\ufe0f&quot;</code></td>
</tr>
<tr>
<td><code>👨‍🔧</code></td>
<td><code>👨</code> + <code>🔧</code></td>
<td><code>&quot;\ud83d\udc68\u200d\ud83d\udd27&quot;</code></td>
</tr>
<tr>
<td><code>👨‍💻</code></td>
<td><code>👨</code> + <code>💻</code></td>
<td><code>&quot;\ud83d\udc68\u200d\ud83d\udcbb&quot;</code></td>
</tr>
<tr>
<td><code>👩‍❤️‍💋‍👨</code></td>
<td><code>👩</code> + <code>❤️</code> + <code>💋</code> + <code>👨</code></td>
<td><code>&quot;\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68&quot;</code></td>
</tr>
<tr>
<td><code>🐕‍🦺</code></td>
<td><code>🐕</code> + <code>🦺</code></td>
<td><code>&quot;\ud83d\udc15\u200d\ud83e\uddba&quot;</code></td>
</tr>
<tr>
<td><code>🏴‍☠️</code></td>
<td><code>🏴</code> + <code>☠️</code></td>
<td><code>&quot;\ud83c\udff4\u200d\u2620\ufe0f&quot;</code></td>
</tr>
<tr>
<td><code>🐈‍⬛</code></td>
<td><code>🐈</code> + <code>⬛</code></td>
<td><code>&quot;\ud83d\udc08\u200d\u2b1b&quot;</code></td>
</tr>
</tbody>
</table>
<p>Recuerda que los carácteres <strong>Unicode</strong> se definen de forma universal, y hay <a href="https://unicode.org/emoji/charts/full-emoji-list.html">muchos y muy variados</a>, sin embargo, cada sistema operativo es la responsable de definirlos, y cada plataforma puede modificarlos o crear los suyos propios.</p>
<p>Con el tiempo, van surgiendo nuevos emojis, por lo que es posible que algunos emojis muy recientes no puedas verlo en un sistema <code>Mac</code> pero si en un sistema <code>Windows</code> (<em>o viceversa</em>). Con esta forma de crear emojis combinables, en el caso de que el emoji de la bandera <code>🏴‍☠️</code> no esté listo en tu sistema, siempre verías los anteriores <code>🏴☠️</code>, por lo que tienes un fallback interesante que te da a entender el concepto.</p>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../modificar/index.htm" title="Modificar cadenas de texto">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Modificar cadenas de texto</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../../objetos/que-son/index.htm" title="¿Qué son los objetos?">
  <div>
    <span>¿Qué son los objetos?</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/UVauEId-jJ0" title="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
  <img loading="lazy" src="../../../vi/UVauEId-jJ0/mqdefault.jpg" alt="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
</a><a href="https://youtu.be/KE2xRDM4Amg" title="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
  <img loading="lazy" src="../../../vi/KE2xRDM4Amg/mqdefault.jpg" alt="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
</a><a href="https://youtu.be/sU4e6_i_ExU" title="Consejos y buenas prácticas (IV): Javascript + Imágenes">
  <img loading="lazy" src="../../../vi/sU4e6_i_ExU/mqdefault.jpg" alt="Consejos y buenas prácticas (IV): Javascript + Imágenes">
</a><a href="https://youtu.be/A11eG1o611M" title="Creador de historias con Javascript y ChatGPT">
  <img loading="lazy" src="../../../vi/A11eG1o611M/mqdefault.jpg" alt="Creador de historias con Javascript y ChatGPT">
</a><a href="https://youtu.be/Xi07tHFzqR8" title="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
  <img loading="lazy" src="../../../vi/Xi07tHFzqR8/mqdefault.jpg" alt="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
</a><a href="https://youtu.be/EiKYr5vjs48" title="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
  <img loading="lazy" src="../../../vi/EiKYr5vjs48/mqdefault.jpg" alt="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../../npm/index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../../webcomponents/index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../../vuejs/index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../../automatizadores/index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-6', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
