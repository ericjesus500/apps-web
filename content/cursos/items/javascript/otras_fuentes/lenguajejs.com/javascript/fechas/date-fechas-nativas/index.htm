<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#ecc022">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>El tipo Date - Javascript en español - Lenguaje JS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Javascript incorpora un tipo de dato especial para guardar las fechas, que permite realizar tareas básicas relacionadas con estos datos.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="El tipo Date - Javascript en español">
  <meta property="og:image" content="https://lenguajejs.com/javascript/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Javascript incorpora un tipo de dato especial para guardar las fechas, que permite realizar tareas básicas relacionadas con estos datos.">
  <meta property="og:url" content="https://lenguajejs.com/javascript/fechas/date-fechas-nativas/">
  <meta property="twitter:url" content="https://lenguajejs.com/javascript/fechas/date-fechas-nativas/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="El tipo Date - Javascript en español">
  <meta property="twitter:description" content="Javascript incorpora un tipo de dato especial para guardar las fechas, que permite realizar tareas básicas relacionadas con estos datos.">
  <meta property="twitter:image" content="https://lenguajejs.com/javascript/large-summary.jpg">

  </head>

<body class="js menu-open " style="--logo-color: #f0db4f"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje JS</h1>

    <a class="cover" title="Lenguaje JS (javascript)" href="../../index.htm" style="--image: url('../../../assets/javascript.jpg')"></a>

    <header>
      <a href="../../eventos/que-son-eventos/index.htm" title="¿Qué son los eventos?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../regexp/expresiones-regulares/index.htm" title="¿Qué es una expresión regular?">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Fechas y horas
      </span>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              El tipo Date
            </a>
            <a class="link" href="../formatear-fechas-con-intl/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Formatear fechas con Intl
            </a>
            <a class="link" href="../fechas-relativas-con-intl/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Fechas relativas con Intl
            </a>
            <a class="link" href="../formatear-fechas-con-dayjs/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Formatear fechas con dayjs
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#js"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeJS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/javascript.jpg')">
    <h1><a href="index.htm">El tipo Date</a></h1><h2 class="typewriter">Fechas nativas en Javascript</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a href="../../eventos/propagacion-eventos/index.htm">Propagación de eventos</a>
    <a class="current" href="index.htm">El tipo Date</a>
    <a href="../formatear-fechas-con-intl/index.htm">Formatear fechas con Intl</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p>En muchas ocasiones necesitaremos guardar o trabajar con fechas en nuestros programas. Una fecha tiene datos mixtos: día, mes y año, pero también puede ser más precisa y tener hora, minutos y/o segundos. Además, la hora puede estar en varios y múltiples formatos.</p>
<p>En principio, toda esta información no sería cómodo guardarla en formato de texto, ya que posteriormente nos gustaría trabajar y realizar operaciones con ellas (<em>sumarle días, obtener el mes, obtener la hora, etc...</em>). Así pues, tenemos un objeto llamado <strong>Date</strong> que nos vendrá muy bien para operaciones relacionadas con fechas.</p>
<h3 id="qué-es-el-tipo-de-dato-date" tabindex="-1"><a class="header-anchor" href="#qué-es-el-tipo-de-dato-date">¿Qué es el tipo de dato Date?</a></h3>
<p>Javascript nos provee de un tipo de dato llamado <strong>Date</strong>, con el que podemos trabajar de forma fácil y práctica con fechas. Sin embargo, trabajar con fechas no es fácil y la primera vez que tenemos que hacerlo es muy sencillo equivocarse si no tenemos claros ciertos conceptos.</p>
<h4 id="crear-fechas-con-date" tabindex="-1"><a class="header-anchor" href="#crear-fechas-con-date">Crear fechas con Date</a></h4>
<p>Lo primero, vamos a ver los constructores para saber como podemos construir una variable de tipo <strong>Date</strong>:</p>
<table>
<thead>
<tr>
<th>Constructor</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><badge-type class="date"></badge-type> <code>new Date()</code></td>
<td>Obtiene la fecha del momento actual.</td>
</tr>
<tr>
<td><badge-type class="date"></badge-type> <code>new Date(str)</code></td>
<td>Convierte el texto con formato <code>YYYY/MM/DD HH:MM:SS</code> a una fecha.</td>
</tr>
<tr>
<td><badge-type class="date"></badge-type> <code>new Date(numero)</code></td>
<td>Convierte el <code>número</code> (en formato <strong>Tiempo UNIX</strong>) a una fecha UTC.</td>
</tr>
<tr>
<td><badge-type class="date"></badge-type> <code>new Date(y, m, d, h, min, s, ms)</code></td>
<td>Crea una fecha UTC a partir de componentes numéricos.</td>
</tr>
</tbody>
</table>
<p>Podemos utilizar estas cuatro formas para crear fechas en Javascript. Observa que en algunos casos se menciona <strong>fecha UTC</strong>. De momento, vamos a obviar esta parte y más adelante profundizaremos en ella. Veamos algunos ejemplos para crear fechas con estos 4 constructores:</p>
<pre class="language-js "><code class="language-js"><span class="token comment">// Obtenemos la fecha actual y la guardamos en la variable date</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Obtenemos la fecha 30 de Enero de 2018, a las 23h 30m 14seg</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2018/01/30 23:30:14"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Obtenemos la fecha del juicio final a partir de un timestamp o Tiempo UNIX</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">872817240000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Creamos una fecha pasando cada uno de sus componentes numéricos*</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<blockquote>
<blockquote>
<p><strong>OJO</strong>: Mucho cuidado con los <strong>«componentes numéricos»</strong> mencionados en el último ejemplo. Si utilizamos el formato <code>new Date(y, m, d, h, min, s, ms)</code>, hay que saber que, como mínimo, los parámetros <code>y</code> (<em>año</em>) y <code>m</code> (<em>mes</em>) son <strong>obligatorios</strong>, el resto son parámetros opcionales.</p>
</blockquote>
</blockquote>
<p>Además, si utilizamos este esquema, hay que tener en cuenta que hay ciertas características especiales:</p>
<ul>
<li>
<p>El parámetro <code>m</code> (<em>mes</em>) se proporciona con valores no reales que se recalcularán. Es decir, si indicamos un <code>1</code> nos referimos a <strong>febrero</strong> y no a <strong>enero</strong>. Si queremos referirnos a <strong>enero</strong> tenemos que indicar un <code>0</code>.</p>
</li>
<li>
<p>Si indicamos <strong>valores negativos</strong> contabilizamos hacia atrás. Por ejemplo, con <code>2018, -1</code> estaríamos indicando <strong>diciembre de 2017</strong>. De la misma forma, <code>2018, 12</code> haría referencia a <strong>enero de 2019</strong>. Lo mismo ocurre con otros parámetros; <code>2018, 0, 32</code> haría referencia al 1 de febrero de 2018.</p>
</li>
</ul>
<h4 id="fechas-con-unix-timestamp" tabindex="-1"><a class="header-anchor" href="#fechas-con-unix-timestamp">Fechas con UNIX Timestamp</a></h4>
<p>El <strong>Tiempo UNIX</strong> (<em>o UNIX timestamp</em>) es un formato numérico utilizado para calcular una fecha en UNIX. Es una forma poco práctica y legible para humanos, pero muy eficiente en términos informáticos. Se trata de un número que representa la cantidad de <strong>segundos</strong> transcurridos desde la fecha <code>1/1/1970, a las 00:00:00</code>.</p>
<p>Así pues, siendo números, resulta muy fácil trabajar y operar con ellos. Teniendo una fecha <code>A</code> y una fecha posterior <code>B</code>, si hacemos la operación <code>B - A</code> nos devuelve el número de segundos transcurridos entre ambas fechas, con lo que se podría sacar la diferencia de tiempo.</p>
<blockquote>
<p>No obstante, ten en cuenta que el <strong>Tiempo UNIX</strong> sirve para trabajar con fechas a bajo nivel. Si lo deseas, al final del tema encontrarás una tabla con librerías más cómodas y prácticas para trabajar con fechas en Javascript.</p>
</blockquote>
<p>Existen dos métodos que se pueden utilizar para crear fechas, al margen de los constructores anteriores, sólo que estos devuelven directamente el <code>Tiempo UNIX</code> de la fecha especificada:</p>
<table>
<thead>
<tr>
<th>Método</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><badge-type class="number"></badge-type> <code>Date.now()</code></td>
<td>Devuelve el <code>Tiempo UNIX</code> de la fecha actual. Equivalente a <code>+new Date()</code>.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>Date.parse(str)</code></td>
<td>Convierte un <badge-type class="string"></badge-type> de fecha a <code>Tiempo UNIX</code>. Equivalente a <code>+new Date(str)</code>.</td>
</tr>
</tbody>
</table>
<p>Veamos algunos ejemplos aplicados para entenderlos:</p>
<pre class="language-js "><code class="language-js"><span class="token comment">// Estas tres operaciones son equivalentes</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Estas tres operaciones son equivalentes</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"2018/10/30"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2018/10/30"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2018/10/30"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<ul>
<li>
<p>En el primer caso, utilizamos directamente los métodos estáticos <code>now()</code> y <code>parse()</code> para obtener el número con el <strong>tiempo Unix</strong>.</p>
</li>
<li>
<p>En el segundo caso, creamos un objeto Date con <code>new Date()</code>, lo que devuelve una fecha. Sin embargo, en Javascript, podemos preceder a esa fecha con el símbolo <code>+</code>, obligándolo a evaluarlo de forma numérica, lo que hace que obtenga el <strong>tiempo Unix</strong> a partir de la fecha.</p>
</li>
<li>
<p>En el tercer caso, escribimos en una línea dos acciones: crear la variable de fecha con <code>new Date()</code> y posteriormente, sobre esa fecha, hacemos un <code>getTime()</code>, que nos devuelve el <strong>tiempo Unix</strong> de un Date, como veremos más adelante.</p>
</li>
</ul>
<h4 id="getters-obtener-fechas" tabindex="-1"><a class="header-anchor" href="#getters-obtener-fechas">Getters: Obtener fechas</a></h4>
<p>Una vez hemos creado una fecha y tenemos el objeto <badge-type class="date"></badge-type>, podemos trabajar muy facilmente con estas variables a través de sus sencillos métodos. Los siguientes son una lista de <strong>getters</strong>, funciones para obtener información, sobre la fecha almacenada:</p>
<table>
<thead>
<tr>
<th>Método</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><badge-type class="number"></badge-type> <code>.getDay()</code></td>
<td>Devuelve el día de la semana: <strong>OJO:</strong> <code>0</code> Domingo, <code>6</code> Sábado.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.getFullYear()</code></td>
<td>Devuelve el año con 4 cifras.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.getMonth()</code></td>
<td>Devuelve la representación interna del mes. <strong>OJO:</strong> <code>0</code> Enero - <code>11</code> Diciembre.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.getDate()</code></td>
<td>Devuelve el día del mes.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.getHours()</code></td>
<td>Devuelve la hora. <strong>OJO:</strong> Formato militar; <code>23</code> en lugar de <code>11</code>.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.getMinutes()</code></td>
<td>Devuelve los minutos.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.getSeconds()</code></td>
<td>Devuelve los segundos.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.getMilliseconds()</code></td>
<td>Devuelve los milisegundos.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.getTime()</code></td>
<td>Devuelve el <a href="https://es.wikipedia.org/wiki/Tiempo_Unix">UNIX Timestamp</a>: segundos transcurridos desde <code>1/1/1970</code>.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.getTimezoneOffset()</code></td>
<td>Diferencia horaria (<em>en min</em>) de la hora local respecto a UTC (ver más adelante).</td>
</tr>
</tbody>
</table>
<p>Algunos ejemplos del uso de estos métodos serían los siguientes:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2018/01/30 15:30:10.999"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 2 (Martes)</span>
date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 30</span>
date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 0 (Enero)</span>
date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// 2018</span>
date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 15</span>
date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 30</span>
date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 10</span>
date<span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 999</span>
date<span class="token punctuation">.</span><span class="token function">getTimezoneOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 1517326210999 (Tiempo Unix)</span></code></pre>
<p>Observa que Javascript no tiene forma de devolver, por ejemplo, el día de la semana o el mes en formato de texto. Sin embargo, ello se puede hacer de forma muy <strong>sencilla</strong> utilizando un array:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">const</span> <span class="token constant">MESES</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">"Enero"</span><span class="token punctuation">,</span> <span class="token string">"Febrero"</span><span class="token punctuation">,</span> <span class="token string">"Marzo"</span><span class="token punctuation">,</span> <span class="token string">"Abril"</span><span class="token punctuation">,</span> <span class="token string">"Mayo"</span><span class="token punctuation">,</span> <span class="token string">"Junio"</span><span class="token punctuation">,</span> <span class="token string">"Julio"</span><span class="token punctuation">,</span>
  <span class="token string">"Agosto"</span><span class="token punctuation">,</span> <span class="token string">"Septiembre"</span><span class="token punctuation">,</span> <span class="token string">"Octubre"</span><span class="token punctuation">,</span> <span class="token string">"Noviembre"</span><span class="token punctuation">,</span> <span class="token string">"Diciembre"</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">MESES</span><span class="token punctuation">[</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Devuelve el mes actual en formato de texto</span></code></pre>
<blockquote>
<blockquote>
<p><strong>Curiosidad</strong>: El método <code>getYear()</code> se utilizaba para devolver la fecha con formato de 2 cifras. Se dejó de usar debido a la llegada del <a href="https://es.wikipedia.org/wiki/Problema_del_a%C3%B1o_2000">efecto 2000</a>, reemplazándose por el método <code>getFullYear()</code> que usa el formato de 4 cifras.</p>
</blockquote>
</blockquote>
<h4 id="setters-cambiar-fechas" tabindex="-1"><a class="header-anchor" href="#setters-cambiar-fechas">Setters: Cambiar fechas</a></h4>
<p>De la misma forma que en el apartado anterior podemos obtener fechas específicas, con los <strong>setters</strong> podemos modificarlas o alterarlas.</p>
<table>
<thead>
<tr>
<th>Método</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><badge-type class="number"></badge-type> <code>.setFullYear(year)</code></td>
<td>Altera el año de la fecha, cambiándolo por <code>year</code>. Formato de 4 dígitos.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setMonth(month)</code></td>
<td>Altera el mes de la fecha, cambiándolo por <code>month</code>. <strong>Ojo</strong>: <code>0-11</code> (Ene-Dic).</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setDate(day)</code></td>
<td>Altera el día de la fecha, cambiándolo por <code>day</code>.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setHour(hour)</code></td>
<td>Altera la hora de la fecha, cambiándola por <code>hour</code>.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setMinutes(min)</code></td>
<td>Altera los minutos de la fecha, cambiándolos por <code>min</code>.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setSeconds(sec)</code></td>
<td>Altera los segundos de la fecha, cambiándolos por <code>sec</code>.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setMilliseconds(ms)</code></td>
<td>Altera los milisegundos de la fecha, cambiándolos por <code>ms</code>.</td>
</tr>
</tbody>
</table>
<blockquote>
<blockquote>
<blockquote>
<p><strong>Nota</strong>: Además de cambiar la fecha del objeto <badge-type class="date"></badge-type> en cuestión, estos métodos devuelven un <badge-type class="number"></badge-type> en <strong>tiempo Unix</strong> de la fecha modificada.</p>
</blockquote>
</blockquote>
</blockquote>
<p>De la misma forma que mencionamos anteriormente, hay que tener en cuenta que los valores pasados a estos métodos pueden recalcular fechas: <code>setMonth(0)</code> implica <code>Enero</code>, <code>setDate(0)</code> implica último día del mes anterior, <code>setDate(-1)</code> implica penúltimo día del mes anterior, etc...</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2018/01/30 15:30:10.999"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

date<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// Cambia a 15/01/2018 15:30:10.999 (Devuelve 1516030210999)</span>
date<span class="token punctuation">.</span><span class="token function">setMonth</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// Cambia a 15/02/2018 15:30:10.999 (Devuelve 1518708610999)</span>
date<span class="token punctuation">.</span><span class="token function">setFullYear</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// Cambia a 15/02/2020 15:30:10.999 (Devuelve 1581780610999)</span>
date<span class="token punctuation">.</span><span class="token function">setHours</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// Cambia a 15/02/2020 21:30:10.999 (Devuelve 1581802210999)</span>
date<span class="token punctuation">.</span><span class="token function">setMinutes</span><span class="token punctuation">(</span><span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Cambia a 15/02/2020 21:00:10.999 (Devuelve 1581800410999)</span>
date<span class="token punctuation">.</span><span class="token function">setSeconds</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// Cambia a 15/02/2020 21:00:03.999 (Devuelve 1581800403999)</span>
date<span class="token punctuation">.</span><span class="token function">setMilliseconds</span><span class="token punctuation">(</span><span class="token number">79</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Cambia a 15/02/2020 21:00:03.079 (Devuelve 1581800403079)</span>
date<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span><span class="token number">872817240000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Cambia a 29/08/1997 02:14:00.000 (Devuelve 872817240000)</span></code></pre>
<p>Ten en cuenta que los mismos métodos anteriores, soportan varios parámetros, para hacer más cómodo su utilización y no tener que estar usándolos uno por uno. Así por ejemplo, se puede usar <code>setFullYear()</code> para cambiar año, año y mes, o año, mes y día:</p>
<table>
<thead>
<tr>
<th>Método</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><badge-type class="number"></badge-type> <code>.setFullYear(y, m, d)</code></td>
<td>Altera el año, mes y día de una fecha.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setMonth(m, d)</code></td>
<td>Altera el mes y día de una fecha.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setHour(h, m, s, ms)</code></td>
<td>Altera la hora, minutos, segundos y milisegundos.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setMinutes(m, s, ms)</code></td>
<td>Altera los minutos, segundos y milisegundos.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setSeconds(s, ms)</code></td>
<td>Altera los segundos y milisegundos.</td>
</tr>
<tr>
<td><badge-type class="number"></badge-type> <code>.setTime(ts)</code></td>
<td>Establece una fecha a partir del <strong>tiempo Unix</strong> <code>ts</code>.</td>
</tr>
</tbody>
</table>
<p>Por último, también tenemos a nuestra disposición el método setter <code>setTime(ts)</code>, que nos permite establecer una fecha a partir de un <strong>tiempo Unix</strong> <code>ts</code>. Es el equivalente a hacer un <code>new Date(ts)</code>.</p>
<h3 id="representación-de-fechas" tabindex="-1"><a class="header-anchor" href="#representación-de-fechas">Representación de fechas</a></h3>
<p>Otro detalle más delicado dentro del trabajo con fechas es a la hora de mostrar una fecha en un formato específico. Podemos utilizar el formato por defecto que nos ofrece Javascript, pero lo más habitual es que queramos hacerlo en otro diferente, utilizando nuestra configuración horaria, abreviaturas u otros detalles. En Javascript tenemos varios métodos (<em>muy limitados, eso sí</em>) para representar las fechas:</p>
<table>
<thead>
<tr>
<th>Método</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Formato por defecto</strong></td>
<td><code>Fri Aug 24 2018 00:23:31 GMT+0100</code></td>
</tr>
<tr>
<td><badge-type class="string"></badge-type> <code>.toDateString()</code></td>
<td>Devuelve formato sólo de fecha: <code>Fri Aug 24 2018</code></td>
</tr>
<tr>
<td><badge-type class="string"></badge-type> <code>.toLocaleDateString()</code></td>
<td>Idem al anterior, pero en el formato regional actual: <code>24/8/2018</code></td>
</tr>
<tr>
<td><badge-type class="string"></badge-type> <code>.toTimeString()</code></td>
<td>Devuelve formato sólo de hora: <code>00:23:24 GMT+0100</code> ...</td>
</tr>
<tr>
<td><badge-type class="string"></badge-type> <code>.toLocaleTimeString()</code></td>
<td>Idem al anterior, pero en el formato regional actual: <code>0:26:37</code></td>
</tr>
<tr>
<td><badge-type class="string"></badge-type> <code>.toISOString()</code></td>
<td>Devuelve la fecha en el formato <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a>: <code>2018-08-23T23:27:29.380Z</code></td>
</tr>
<tr>
<td><badge-type class="string"></badge-type> <code>.toJSON()</code></td>
<td>Idem al anterior, pero asegurándose que será compatible con JSON.</td>
</tr>
<tr>
<td><badge-type class="string"></badge-type> <code>.toUTCString()</code></td>
<td>Devuelve la fecha, utilizando UTC (<em>ver más adelante</em>).</td>
</tr>
</tbody>
</table>
<blockquote>
<p>El método <code>toISOString()</code> devuelve un formato que intenta ser el estándar a la hora de manejar fechas en Internet o documentos en general. Básicamente, una regla mnemotécnica es pensar que se escriben desde magnitudes más altas (<em>año</em>) hasta las magnitudes más bajas (<em>milisegundos</em>). La fecha y la hora se separa con una <code>T</code> y cada componente con un <code>-</code> o un <code>:</code> dependiendo de si es fecha o es hora. Los milisegundos se separan siempre con <code>.</code>. La <code>Z</code> del final indica que es una fecha <code>UTC</code>.</p>
</blockquote>
<p>Existen algunas librerías interesantes que permiten trabajar muy fácilmente con la representación de fechas o incluso otros detalles. Lo comentaremos un poco más adelante.</p>
<h3 id="utc-y-zonas-horarias" tabindex="-1"><a class="header-anchor" href="#utc-y-zonas-horarias">UTC y zonas horarias</a></h3>
<p>Para facilitar las cosas, hasta ahora hemos obviado un tema bastante importante: las <strong>zonas horarias</strong>. Probablemente te habrás percatado de que podría ser necesario trabajar y manejar <strong>diferencias horarias</strong>, porque por ejemplo necesitamos utilizar diferentes horas locales de distintos lugares del planeta. Para manejar esto, Javascript permite indicar también la diferencia horaria respecto al <a href="https://es.wikipedia.org/wiki/Meridiano_de_Greenwich">meridiano Greenwich</a>, indicada como <code>GMT</code>.</p>
<p>Por ejemplo, podemos tener una fecha A <code>2018/01/01 15:30:00 GMT+0000</code>, y una fecha B <code>2018/01/02 18:30:00 GMT+0200</code>. La fecha A no tiene diferencia horaria (GMT+0000), sin embargo, la fecha B si la tiene (GMT+0200), por lo que en Javascript al hacer un <code>new Date(str)</code> de dicha fecha, se recalcula automáticamente y se guarda la fecha modificada y sin diferencia horaria. En este caso, se le restan 2 horas a la fecha B.</p>
<p>Es importante darse cuenta que, en Javascript, cuando usamos <code>new Date()</code> sin parámetros, obtendremos una fecha que <strong>puede</strong> incluir diferencias horarias:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Mon Aug 27 2018 01:39:21 GMT+0100</span>
date<span class="token punctuation">.</span><span class="token function">getTimezoneOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// -60 (1 hora menos)</span></code></pre>
<p>Sin embargo, si hacemos uso de <code>new Date(str)</code>, pasándole una fecha como parámetro de texto, automáticamente se recalcula la diferencia horaria, sumando/restando las horas, y se obtiene finalmente la fecha con diferencia horaria <strong>cero</strong>:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2018/01/30 23:15:30 GMT+0100"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
date<span class="token punctuation">;</span>   <span class="token comment">// Tue Jan 30 2018 22:15:30 GMT+0000</span></code></pre>
<p>En este caso, al recalcular y guardar la fecha/hora sin diferencias horarias, decimos que estamos utilizando el <strong>Tiempo Universal Coordinado</strong> o <a href="https://es.wikipedia.org/wiki/Tiempo_universal_coordinado">UTC</a>. También podemos utilizar el método estático <code>Date.UTC()</code> donde le podemos pasar los parámetros de los componentes numéricos de la fecha, tal cómo lo hacemos en el constructor <code>new Date(y, m, d, h, min, s, ms)</code> anteriormente mencionado.</p>
<blockquote>
<p>Además de lo anterior, recuerda que también tenemos todos los métodos <strong>Getters</strong> y <strong>Setters</strong> mencionados en su versión UTC. Por ejemplo, en el caso de <code>getHours()</code> tenemos una versión <code>getUTCHours()</code> que devuelve las horas de acuerdo al <strong>UTC</strong> (<em>Tiempo Universal Coordinado</em>).</p>
</blockquote>
<h3 id="librerías-para-fechas" tabindex="-1"><a class="header-anchor" href="#librerías-para-fechas">Librerías para fechas</a></h3>
<p>En muchos casos, el objeto <badge-type class="date"></badge-type> de Javascript puede quedarse corto para el usuario, que echa mucho de menos algunas funciones específicas, mayor comodidad al trabajar con fechas, o que simplemente necesita un mayor control.</p>
<p>Existen múltiples librerías alternativas para trabajar con fechas, citamos algunas de ellas:</p>
<table>
<thead>
<tr>
<th>Librería</th>
<th>Descripción</th>
<th>GitHub</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://day.js.org/">Day.js</a></td>
<td>Librería inmutable (2KB) para manejar fechas. <a href="../formatear-fechas-con-dayjs/index.htm">Ver explicación de day.js</a></td>
<td><a href="https://github.com/iamkun/dayjs">iamkun/dayjs</a></td>
</tr>
<tr>
<td><a href="https://date-fns.org/">date-fns</a></td>
<td>Moderna librería de fechas.</td>
<td><a href="https://github.com/date-fns/date-fns">date-fns/date-fns</a></td>
</tr>
<tr>
<td><a href="https://moment.github.io/luxon/">Luxon</a></td>
<td>Librería moderna y potente para fechas.</td>
<td><a href="https://github.com/moment/luxon">moment/luxon</a></td>
</tr>
<tr>
<td><a href="https://js-joda.github.io/js-joda/">js-joda</a></td>
<td>Librería inmutable de fechas para JS.</td>
<td><a href="https://github.com/js-joda/js-joda">js-joda/js-joda</a></td>
</tr>
<tr>
<td><a href="http://www.datejs.com/">Datejs</a></td>
<td>Librería alternativa para trabajar con fechas.</td>
<td><a href="https://github.com/datejs/Datejs">datejs/Datejs</a></td>
</tr>
<tr>
<td>fecha</td>
<td>Librería ligera para formatear y parsear fechas.</td>
<td><a href="https://github.com/taylorhakes/fecha">taylorhakes/fecha</a></td>
</tr>
</tbody>
</table>
<p>Con ellas, podrás trabajar con mayor comodidad o profundidad con fechas y horas en Javascript.</p>
<blockquote>
<blockquote>
<blockquote>
<p><strong>OJO</strong>: Ten en cuenta que la librería <a href="https://momentjs.com/">Moment.js</a> está actualmente <strong>desaconsejada</strong> por los desarrolladores, ya que no va a seguir manteniéndose. Recomiendan utilizar una librería más moderna como <a href="https://moment.github.io/luxon/">Luxon</a>.</p>
</blockquote>
</blockquote>
</blockquote>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    <a class="btn prev" href="../../eventos/propagacion-eventos/index.htm" title="Propagación de eventos">
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-8-8l8-8l1.425 1.4l-5.6 5.6H20v2H7.825l5.6 5.6L12 20Z"></path>
  </svg>
  <div>
    <span>Propagación de eventos</span>
    <small>Capítulo anterior</small>
  </div>
</a>
    <a class="btn next" href="../formatear-fechas-con-intl/index.htm" title="Formatear fechas con Intl">
  <div>
    <span>Formatear fechas con Intl</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/UVauEId-jJ0" title="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
  <img loading="lazy" src="../../../vi/UVauEId-jJ0/mqdefault.jpg" alt="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
</a><a href="https://youtu.be/sU4e6_i_ExU" title="Consejos y buenas prácticas (IV): Javascript + Imágenes">
  <img loading="lazy" src="../../../vi/sU4e6_i_ExU/mqdefault.jpg" alt="Consejos y buenas prácticas (IV): Javascript + Imágenes">
</a><a href="https://youtu.be/KE2xRDM4Amg" title="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
  <img loading="lazy" src="../../../vi/KE2xRDM4Amg/mqdefault.jpg" alt="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
</a><a href="https://youtu.be/S0YA8BadVbM" title="Cambiar clases CSS desde Javascript con classList">
  <img loading="lazy" src="../../../vi/S0YA8BadVbM/mqdefault.jpg" alt="Cambiar clases CSS desde Javascript con classList">
</a><a href="https://youtu.be/EiKYr5vjs48" title="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
  <img loading="lazy" src="../../../vi/EiKYr5vjs48/mqdefault.jpg" alt="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
</a><a href="https://youtu.be/Xi07tHFzqR8" title="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
  <img loading="lazy" src="../../../vi/Xi07tHFzqR8/mqdefault.jpg" alt="Cómo CLONAR objetos en Javascript correctamente (structuredClone)">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../../npm/index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../../webcomponents/index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../../vuejs/index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../../automatizadores/index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-6', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
