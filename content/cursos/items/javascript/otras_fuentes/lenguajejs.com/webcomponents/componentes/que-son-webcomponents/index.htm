<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#ecc022">
  <link rel="shortcut icon" href="../../../favicon.ico">
  <title>¿Qué son los WebComponents? - Javascript en español - Lenguaje JS</title>
  <link rel="preload" href="../../../assets/fonts/jost-vf.woff2" as="font" crossorigin="">
  <meta name="description" content="Los WebComponents son un conjunto de características de HTML, CSS y Javascript que hacen posible un modelo estándar de componentes web.">
  <meta name="view-transition" content="same-origin">
  <link rel="stylesheet" href="../../../home.css">
  <script type="module" src="../../../index.js"></script>
<link rel="canonical" href="index.htm">
  <meta property="og:title" content="¿Qué son los WebComponents? - Javascript en español">
  <meta property="og:image" content="https://lenguajejs.com/webcomponents/componentes/que-son-webcomponents/custom-elements-templates-shadow-dom-es-modules.png">
  <meta property="og:type" content="article">
  <meta property="og:description" content="Los WebComponents son un conjunto de características de HTML, CSS y Javascript que hacen posible un modelo estándar de componentes web.">
  <meta property="og:url" content="https://lenguajejs.com/webcomponents/componentes/que-son-webcomponents/">
  <meta property="twitter:url" content="https://lenguajejs.com/webcomponents/componentes/que-son-webcomponents/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="¿Qué son los WebComponents? - Javascript en español">
  <meta property="twitter:description" content="Los WebComponents son un conjunto de características de HTML, CSS y Javascript que hacen posible un modelo estándar de componentes web.">
  <meta property="twitter:image" content="https://lenguajejs.com/webcomponents/componentes/que-son-webcomponents/custom-elements-templates-shadow-dom-es-modules.png">

  </head>

<body class="js menu-open " style="--logo-color: #d4ecff"><script>
    matchMedia("(width <= 1180px)").matches && document.body.classList.toggle("menu-open");
  </script>
  








<section class="menubar">
  <div class="menubar-content">
    <h1>Lenguaje JS</h1>

    <a class="cover" title="Lenguaje JS (webcomponents)" href="../../index.htm" style="--image: url('../../../assets/webcomponents.jpg')"></a>

    <header>
      <a href="../../../npm/administracion/crear-nuevo-proyecto/index.htm" title="Crear nuevo proyecto con NPM">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"></path></svg>
      </a>
      <a href="../../index.htm" title="Volver al índice">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 256 256"><path fill="#888888" d="M240 210h-18v-94.45a14.06 14.06 0 0 0-4.53-10.32l-80-75.49l-.09-.08a13.94 13.94 0 0 0-18.83 0l-.09.08l-80 75.5A14 14 0 0 0 34 115.55V210H16a6 6 0 0 0 0 12h224a6 6 0 0 0 0-12ZM46 115.55a2 2 0 0 1 .65-1.48l.09-.08l79.94-75.48a2 2 0 0 1 2.63 0L209.26 114l.08.08a2 2 0 0 1 .66 1.48V210h-52v-50a14 14 0 0 0-14-14h-32a14 14 0 0 0-14 14v50H46ZM146 210h-36v-50a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Z"></path></svg>
      </a>
      <a href="../../funcionalidad/clase-webcomponent/index.htm" title="Clase de un WebComponent">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 32 32"><path fill="#888888" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"></path></svg>
      </a>
    </header>

    <div style="display:none">
      <svg id="link-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 256 256"><g fill="#888888"><path d="M208 88h-56V32Z" opacity=".2"></path><path d="m213.66 82.34l-56-56A8 8 0 0 0 152 24H56a16 16 0 0 0-16 16v176a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V88a8 8 0 0 0-2.34-5.66ZM160 51.31L188.69 80H160ZM200 216H56V40h88v48a8 8 0 0 0 8 8h48v120Z"></path></g></svg>
      <svg id="anchor-icon" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="#888888" d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 0 1 0-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></svg>
    </div>

    <div class="links">
      <span class="folder">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 512 512"><path fill="#888888" d="M41 73v304.563L88.697 151H423v-30H185.514l-16-48H41zm62.303 96L43.092 455h381.605l60.211-286H103.303z"></path></svg>
        Bases de los componentes
      </span>
            <a class="link active" href="index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              ¿Qué son los WebComponents?
            </a>
            <a class="link" href="../custom-elements/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Etiquetas HTML personalizadas
            </a>
            <a class="link" href="../estructura-componente/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Estructura de archivos
            </a>
            <a class="link" href="../atributos-webcomponent/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Atributos de un WebComponent
            </a>
            <a class="link" href="../plantillas-html-webcomponents/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              Plantillas y HTML en componentes
            </a>
            <a class="link" href="../css-en-custom-elements/index.htm">
              <svg viewbox="0 0 32 32"><use href="#link-icon"></use></svg>
              CSS en Custom Elements
            </a>
    </div>
  </div>

  <div class="sidebox">
    <svg class="close-menu" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24"><path fill="none" stroke="#888888" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 19V5m10 1l-6 6l6 6m-6-6h14"></path></svg>
    <div class="socials">
      <a class="twitch" href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
      <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
      <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
      <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
    </div>
  </div>
</section>

<script type="module">
  const toggleMenu = () => (document.body.classList.toggle("menu-open"));
  document.querySelector(".close-menu").addEventListener("click", toggleMenu);

  matchMedia("(width <= 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());
  matchMedia("(width > 1180px)").addEventListener("change", (ev) => ev.matches && toggleMenu());

  const activeLink = document.querySelector(".links .active");
  const icon = /* svg */`<svg viewBox="0 0 24 24"><use href="#anchor-icon" /></svg>`;
  const headers = [...document.querySelectorAll(".contents h3")].map(link => ({ text: link.textContent, id: link.id }));
  const links = [];
  headers.reverse().forEach(({ text, id }) => {
    const link = document.createElement("a");
    link.classList.add("anchor");
    link.href = "#" + id;
    link.insertAdjacentHTML("beforeend", icon);
    link.insertAdjacentText("beforeend", ` ${text}`);
    activeLink.after(link);
  });
</script>

  <div class="post page">
    <header class="hero">

  <div class="top-search">
    <a class="sitelogo" href="../../../index.htm">
  <svg><use href="../../../assets/logos.svg#js"></use></svg>
  <img class="manzdev" src="../../../assets/logos/manzdev-logo.webp" alt="ManzDev">
  <div class="sitelogo-text">
    <div class="text">MANZ.DEV</div>
    <div class="subtext">LenguajeJS.com</div>
  </div>
</a>

    <search class="search-container">
  <form class="search" action="https://www.google.com/search">
    <label>
      <input type="search" name="q" placeholder="flex, grid..." autocomplete="off" spellcheck="false">
      <svg xmlns="http://www.w3.org/2000/svg" class="search-icon" viewbox="0 0 256 256"><path fill="var(--color, #fff)" d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg>
    </label>
    <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev">
    <div class="results"></div>
    <div class="sources">
      <label><input type="radio" name="source" value="posts" checked=""> Posts</label>
      <label><input type="radio" name="source" value="youtube"> Youtube</label>
    </div>
  </form>

  <script type="module">
    import { debounce } from "/modules.js";
    import { searchText } from "/modules.js";

    const searchInput = document.querySelector("form.search input[type=search]");
    searchInput.addEventListener("input", debounce(searchText, 400));
  </script>
</search>

  </div>

  <div class="mega" style="--cover-image: url('../../../assets/webcomponents.jpg')">
    <h1><a href="index.htm">¿Qué son los WebComponents?</a></h1><h2 class="typewriter">Características principales de un WebComponent</h2>
    <hr></div>

  

<nav class="navpages">
  <div class="top">
    
    <a href="../../index.htm" title="Volver al índice"></a>
  </div>
  <div class="prev-next">
    <a class="current" href="index.htm">¿Qué son los WebComponents?</a>
    <a href="../custom-elements/index.htm">Etiquetas HTML personalizadas</a>
    </div>
</nav>
<div class="mini-social">
  ——
  <a href="https://twitch.tv/ManzDev" title="Twitch"><svg><use href="../../../assets/icons/social.svg#twitch"></use></svg></a>
  <a href="https://youtube.com/@ManzDev" title="YouTube"><svg><use href="../../../assets/icons/social.svg#youtube"></use></svg></a>
  <a href="https://tiktok.com/@manz.dev" title="TikTok"><svg><use href="../../../assets/icons/social.svg#tiktok"></use></svg></a>
  <a href="https://instagram.com/manz.dev" title="Instagram"><svg><use href="../../../assets/icons/social.svg#instagram"></use></svg></a>
  <a href="https://twitter.com/manz" title="Twitter"><svg><use href="../../../assets/icons/social.svg#twitter"></use></svg></a>
  ——
</div>



</header>

<script type="module">
  import { typewriter } from "/modules.js";

  typewriter("header.hero h2.typewriter");
</script>



    <div class="post-container">
  <div class="contents">
    
    <p><strong>WebComponents</strong> es el nombre por el que se conoce a un conjunto de características relacionadas con <a href="https://lenguajehtml.com/">HTML</a>, <a href="https://lenguajecss.com/">CSS</a> y <a href="../../../index.htm">Javascript</a>, mediante las cuales se pueden crear elementos mantenibles, reutilizables y encapsulados llamados <strong>componentes</strong>, sin que sea necesario utilizar herramientas externas, librerías o frameworks.</p>
<p><img src="que-son-webcomponents.png" alt="¿Qué son los WebComponents?" width="2368" height="809" loading="lazy"></p>
<blockquote>
<p><strong>Nota</strong>: En contexto web, cuando hablamos de un <strong>componente</strong> nos referimos a una forma de unir el marcado (<em>HTML</em>), estilo (<em>CSS</em>) y funcionalidad (<em>Javascript</em>) con una determinada <strong>finalidad</strong>.</p>
</blockquote>
<h3 id="por-qué-usar-webcomponents" tabindex="-1"><a class="header-anchor" href="#por-qué-usar-webcomponents">¿Por qué usar WebComponents?</a></h3>
<p>Los <strong>WebComponents</strong> persiguen varios objetivos, entre los que se encuentran los siguientes:</p>
<ul>
<li>
<p><strong>Ser fáciles de reutilizar</strong>: A menudo, creamos elementos o partes que se repiten en nuestra web. Los <strong>WebComponents</strong> nos permiten reutilizar ciertas partes e incluirlas mediante una <strong>etiqueta HTML personalizada</strong>. Una forma cómoda y sencilla de reutilizar elementos web.</p>
</li>
<li>
<p><strong>Encapsulación</strong>: Necesitamos una forma de crear elementos <strong>aislados</strong> de otros. Por varias razones. Evitar cambiar su contenido por error, evitar colisiones de CSS de elementos que se llaman igual, etc. Se trata de traer una característica muy popular y deseada en el mundo de la programación, que facilita la labor de los desarrolladores y hace más fácil la reutilización en aplicaciones muy grandes.</p>
</li>
<li>
<p><strong>Interoperabilidad</strong>: Facilitar la posibilidad de <strong>intercambiar información</strong> entre sistemas diferentes, utilizando tecnologías abiertas y estándares, que aseguran que van a funcionar en diferentes dispositivos y con las que no dependemos de tecnologías de empresas particulares y sus decisiones de negocio privadas.</p>
</li>
<li>
<p><strong>Ser fáciles de mantener</strong>: A medida que escribimos código en una web, la cantidad de líneas de código se hace mayor y cada vez es más complicado con un enfoque global. Necesitamos una forma de poder enfocarnos en una característica concreta, que sólo tenga HTML, CSS y Javascript que influya a dicha característica específica.</p>
</li>
</ul>
<p>Por estas (<em>y muchas otras razones</em>) es muy interesante conocer y saber utilizar los <strong>WebComponents</strong>.</p>
<h3 id="características" tabindex="-1"><a class="header-anchor" href="#características">Características</a></h3>
<p>Como hemos dicho anteriormente, los <strong>WebComponents</strong> son un conjunto de características nativas que hacen posible la creación de <strong>componentes webs</strong> sin necesitar librerías o frameworks particulares, sino haciendo uso únicamente de HTML, CSS y Javascript. Veamos de que características estamos hablando:</p>
<p><img src="custom-elements-templates-shadow-dom-es-modules.png" alt="WebComponents: Custom Elements, Templates, Shadow DOM y ES Modules" width="1024" height="400" loading="lazy"></p>
<h4 id="custom-elements" tabindex="-1"><a class="header-anchor" href="#custom-elements">Custom Elements</a></h4>
<p>Los <a href="../custom-elements/index.htm"><strong>custom elements</strong></a> (<em>elementos personalizados</em>) son una de las características principales que forman los WebComponents. Con ellos, se nos permite crear nuestras propias <strong>etiquetas HTML</strong>, pudiendo dotarlas de su propia funcionalidad, marcado HTML o estilo CSS.</p>
<pre class="language-html "><code class="language-html"><span class="token comment">&lt;!-- Card con etiquetas HTML normales --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>manzdev.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ManzDev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>ManzDev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>ManzDev es un streamer de código.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>En este primer ejemplo, se puede ver el marcado HTML completo de una <strong>card</strong> de usuario. Sin embargo, en el ejemplo que muestro a continuación, utilizamos una etiqueta personalizada llamada <code>&lt;user-card&gt;</code>:</p>
<pre class="language-html "><code class="language-html"><span class="token comment">&lt;!-- Card utilizando un custom element --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user-card</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ManzDev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user-card</span><span class="token punctuation">></span></span></code></pre>
<p>Al crear un WebComponent le indicamos al navegador que al leer esa etiqueta, debe interpretar en su lugar el código anterior. De esta forma, cada vez que escribamos <code>&lt;user-card&gt;</code> sería como escribir todo el código anterior, mostrándolo visualmente.</p>
<blockquote>
<p>La forma rápida de diferenciar <strong>etiquetas personalizadas</strong> de las <strong>etiquetas nativas de HTML</strong> es observando que las primeras deben incluir en su nombre al menos un guión. Toda etiqueta HTML que tenga un guión en su nombre, es una etiqueta personalizada. La funcionalidad de dicho <strong>Custom Element</strong> se implementará desde Javascript, extendiendo de la clase <code>HTMLElement</code> como veremos más adelante.</p>
</blockquote>
<p>► <a href="../custom-elements/index.htm">Más sobre Custom Elements</a></p>
<h4 id="templates" tabindex="-1"><a class="header-anchor" href="#templates">Templates</a></h4>
<p>Otra característica interesante de WebComponents son los <a href="../plantillas-html-webcomponents/index.htm"><strong>templates</strong></a> (<em>plantillas</em>). Se trata de una etiqueta nativa de HTML que nos permite crear <strong>contenido inerte</strong> en una página, esto es, contenido HTML que no se procesará por el navegador, y que permanecerá «muerto» hasta que lo clonemos mediante Javascript, y creemos nuevos elementos a partir de él.</p>
<pre class="language-html "><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user-template<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Username<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user-image.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://website.com/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>URL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre>
<p>Todos los elementos que existen en el interior de la plantilla (<em>imágenes, scripts, etc...</em>) no serán procesados durante la carga de la página, por lo tanto, el navegador <strong>no invertirá recursos en su procesamiento</strong>. Esto nos puede interesar para preparar contenido reutilizable y que solo consuma recursos cuando lo clonemos desde Javascript.</p>
<p>► <a href="../plantillas-html-webcomponents/index.htm">Más sobre Templates HTML</a></p>
<h4 id="shadow-dom" tabindex="-1"><a class="header-anchor" href="#shadow-dom">Shadow DOM</a></h4>
<p>Probablemente, una de las características más interesantes (<em>y complejas</em>) de WebComponents sea el <a href="../../shadow-dom/que-es-shadow-dom/index.htm"><strong>Shadow DOM</strong></a>. Esta característica opcional se basa en crear un <strong>DOM</strong> (<em>estructura de elementos HTML</em>) particular en un elemento HTML. De esta forma, además del DOM global del documento que normalmente utilizamos, tenemos uno particular.</p>
<p>Así pues, un elemento HTML con <strong>Shadow DOM</strong> se podría ver de esta forma:</p>
<pre class="language-html "><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  #shadow-root
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inner-element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>En el ejemplo anterior, el elemento <code>&lt;div class=&quot;element&quot;&gt;</code> forma parte del DOM global del documento. Es un elemento vacío, sólo que en este ejemplo contiene un <code>#shadow-root</code>, que es el DOM particular (<em>Shadow DOM</em>). En el interior de ese <strong>DOM particular</strong> del elemento, existe una etiqueta <code>&lt;div class=&quot;inner-element&quot;&gt;</code>. Dicha etiqueta HTML forma parte del <strong>Shadow DOM</strong> del elemento <code>&lt;div class=&quot;element&quot;&gt;</code>.</p>
<blockquote>
<p><strong>Nota</strong>: Aunque sirve para muchas cosas más, la misión del <strong>Shadow DOM</strong> es crear una estructura aislada. Es una excelente forma de crear estructuras con estilos CSS locales, que sólo repercutan en dicha estructura, y en la que nuestro CSS no afecte al CSS exterior, ni desde el CSS exterior afecta al CSS interior, algo que los desarrolladores llevan buscando años de forma nativa.</p>
</blockquote>
<p>► <a href="../../shadow-dom/que-es-shadow-dom/index.htm">Más sobre Shadow DOM</a></p>
<h4 id="módulos-es-esm" tabindex="-1"><a class="header-anchor" href="#módulos-es-esm">Módulos ES (ESM)</a></h4>
<p>Los <a href="../../../javascript/modulos/que-es-esm/index.htm"><strong>módulos ECMAScript</strong></a> (<em>ESModules o ESM</em>) son otra de las características que hace posible que existan los WebComponents. Se trata de un estándar de Javascript, que permite organizar elementos de nuestro código Javascript (<em>constantes, funciones, clases, etc...</em>) en módulos y exportarlos, para ponerlos a disposición de otro archivo Javascript que quiera importarlos.</p>
<p>Estos <code>import</code>/<code>export</code> se pueden hacer directamente desde Javascript a través de los <strong>Módulos ESM</strong> o incluso desde HTML, utilizando el atributo <code>type</code> establecido al valor <code>module</code>:</p>
<pre class="language-html "><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fichero.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>Este tipo de importación de módulos es equivalente al <code>import &quot;./fichero.js&quot;;</code> que podemos realizar desde Javascript y nos puede servir para cargar WebComponents directamente desde HTML.</p>
<p>► <a href="../../../javascript/modulos/que-es-esm/index.htm">Más sobre Módulos ESM</a></p>
<blockquote>
<blockquote>
<blockquote>
<p><strong>Nota</strong>: En alguna ocasión es posible que nos encontremos una característica llamada <strong>Imports HTML</strong>. En algún momento llegó a formar parte de WebComponents, pero finalmente fue descartada y marcada como obsoleta, a favor de los <strong>Módulos ESM</strong>, una característica más moderna y potente.</p>
</blockquote>
</blockquote>
</blockquote>
<h4 id="htmljsoncss-modules" tabindex="-1"><a class="header-anchor" href="#htmljsoncss-modules">HTML/JSON/CSS Modules</a></h4>
<p>Los módulos ESM anteriormente mencionados, son la forma nativa de importar ficheros <code>.js</code> desde Javascript o HTML. Sin embargo, sería genial poder hacer lo mismo con ficheros <code>.json</code>, <code>.css</code> o incluso <code>.html</code>. Esa es la idea de <strong>JSON Modules</strong>, <strong>CSS Modules</strong> y <strong>HTML Modules</strong>, que permitirán importar en objetos Javascript, objetos <code>CSSStyleSheet</code> y elementos del DOM, respectivamente.</p>
<p>Por ejemplo, observa la siguiente línea de código:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">import</span> songs <span class="token keyword">from</span> <span class="token string">"./songs.json"</span> <span class="token keyword">with</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"json"</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>
<p>Esta sería la forma de importar, de forma estática un fichero JSON desde Javascript. Ten en cuenta que se añade una terminación <code>with</code> mediante la cuál se le indica el tipo de dato importado, que en nuestro caso es un fichero <code>.json</code>. De la misma forma, podríamos hacerlo con un import dinámico:</p>
<pre class="language-js "><code class="language-js"><span class="token keyword">const</span> songs <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"songs.json"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token keyword">with</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"json"</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>De la misma forma, <strong>HTML Modules</strong> y <strong>CSS Modules</strong> (<em>ojo, no confundir con <a href="https://github.com/css-modules/css-modules">CSS Modules</a></em>) serán implementaciones nativas del navegador para permitir importar archivos HTML o CSS, al igual que el ejemplo de JSON anterior.</p>
<p>Estas especificaciones aún están en fase experimental, pero van soportándose poco a poco:</p>
<ul>
<li><a href="https://chromestatus.com/feature/5749863620804608">JSON modules</a> está soportado desde <strong>Chrome 91+</strong></li>
<li><a href="https://chromestatus.com/feature/5948572598009856">CSS modules</a> está soportado desde <strong>Chrome 93+</strong></li>
<li><a href="https://chromestatus.com/feature/4854408103854080">HTML modules</a> aún <strong>no</strong> está soportado en Chrome</li>
</ul>
<h4 id="css-scopes-shadow-parts" tabindex="-1"><a class="header-anchor" href="#css-scopes-shadow-parts">CSS Scopes / Shadow Parts</a></h4>
<p>Los <strong>CSS Scopes</strong> forman parte de las características que surgen a raíz del <a href="../../shadow-dom/css-webcomponents/index.htm"><strong>CSS en los WebComponents</strong></a>, donde podemos dar estilo a partes que sólo tienen sentido en el contexto de WebComponents: <strong>Shadow DOM</strong>, <strong>Custom Elements</strong>, <strong>slots</strong>, etc...</p>
<p>Tenemos las siguientes pseudoclases y pseudoelementos CSS:</p>
<ul>
<li>Pseudoclase <code>:host</code></li>
<li>Pseudoclase funcional <code>:host()</code></li>
<li>Pseudoclase funcional <code>:host-context()</code></li>
<li>Pseudoelemento funcional <code>::slotted()</code></li>
<li>Pseudoelemento <code>::part()</code></li>
</ul>
<p>Este último pseudoelemento forma parte de las denominadas <strong>CSS Shadow Parts</strong>, una especificación que nos provee una forma de exponer partes de un componente para poder darle estilo desde su exterior.</p>
<ul>
<li><a href="../../shadow-dom/css-scoping/index.htm">Aprender más sobre CSS Scoping</a></li>
<li><a href="../../shadow-dom/css-parts/index.htm">Aprender más sobre CSS Parts</a></li>
</ul>
<blockquote>
<p>Estas son las características principales que forman parte de los llamados <strong>WebComponents</strong>. Cada una de ellas es una característica independiente, no obligatoria en un WebComponent. Sin embargo, la verdadera potencia de todas ellas es la posibilidad de unirlas y utilizarlas combinadas para crear potentes <strong>componentes web</strong>, como iremos viendo más adelante.</p>
</blockquote>

  </div>
</div>

<script>
  const keystrokes = [...document.querySelectorAll(".post .contents kbd")];
  const hasKeys = keystrokes.length > 0;
  let keySound;
  keystrokes.forEach(key => key.addEventListener("click", () => {
    if (hasKeys && !keySound) {
      keySound = new Audio("/assets/sounds/kbd.ogg");
    }
    keySound.currentTime = 0;
    keySound.play();
  }));
</script>

    
    <div id="comentarios" class="buttons">
  <div class="wrapper">
    <a class="btn" href="../../index.htm">
      <svg viewbox="0 0 512 512">
        <path d="M100 97a37 37 0 0 1 0-54c7-7 16-11 27-11h312V0H127C88 0 57 31 57 70v372c0 39 31 70 70 70h328V108H127c-11 0-20-5-27-11zm65 43h258v340H165V140z"></path>
        <path d="M144 56a14 14 0 0 0 0 28h311V56H144z"></path>
      </svg>
      <div>
        <span>Volver</span>
        <small>Al índice</small>
      </div>
    </a>
    
    <a class="btn next" href="../custom-elements/index.htm" title="Etiquetas HTML personalizadas">
  <div>
    <span>Etiquetas HTML personalizadas</span>
    <small>Capítulo siguiente</small>
  </div>
  <svg viewbox="0 0 24 24">
    <path fill="currentColor" d="m12 20l-1.425-1.4l5.6-5.6H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8Z"></path>
  </svg>
</a>
    <a class="btn" href="https://discord.manz.dev/">
      <svg viewbox="0 0 24 24">
        <path fill="currentColor" stroke-width="0" d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"></path>
      </svg>
      <div>
        <span>Acceder a Discord</span>
        <small>Comunidad de Manz.dev</small>
      </div>
    </a>
  </div>
</div>


<section class="bg dark related">
  <div class="wrapper column">
    <h2>Relacionados</h2>
    <p>En mi canal de <a href="https://youtube.com/@ManzDev?sub_confirmation=1">Youtube</a>, tienes varios videos que podrían interesarte...</p>

    <div class="list"><a href="https://youtu.be/sU4e6_i_ExU" title="Consejos y buenas prácticas (IV): Javascript + Imágenes">
  <img loading="lazy" src="../../../vi/sU4e6_i_ExU/mqdefault.jpg" alt="Consejos y buenas prácticas (IV): Javascript + Imágenes">
</a><a href="https://youtu.be/A11eG1o611M" title="Creador de historias con Javascript y ChatGPT">
  <img loading="lazy" src="../../../vi/A11eG1o611M/mqdefault.jpg" alt="Creador de historias con Javascript y ChatGPT">
</a><a href="https://youtu.be/S0YA8BadVbM" title="Cambiar clases CSS desde Javascript con classList">
  <img loading="lazy" src="../../../vi/S0YA8BadVbM/mqdefault.jpg" alt="Cambiar clases CSS desde Javascript con classList">
</a><a href="https://youtu.be/UVauEId-jJ0" title="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
  <img loading="lazy" src="../../../vi/UVauEId-jJ0/mqdefault.jpg" alt="¡Crea código HTML REUTILIZABLE con la etiqueta TEMPLATE! ¡Sin librerías!">
</a><a href="https://youtu.be/EiKYr5vjs48" title="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
  <img loading="lazy" src="../../../vi/EiKYr5vjs48/mqdefault.jpg" alt="Diferencias entre getElementById vs querySelector (y otros métodos del DOM)">
</a><a href="https://youtu.be/KE2xRDM4Amg" title="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
  <img loading="lazy" src="../../../vi/KE2xRDM4Amg/mqdefault.jpg" alt="¡Crea tus PROPIAS ETIQUETAS HTML sin FRAMEWORKS!">
</a></div>
  </div>
</section>

    

<section class="featured">

  <div class="wrapper column">
    <h2>Aprender más</h2>
    <p>Si lo prefieres, puedes aprender también sobre estas temáticas:</p>

    <div class="list"><a class="topic" href="https://lenguajehtml.com/html/" title="HTML5">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#html"></use>
  </svg>
</a><a class="topic" href="https://lenguajehtml.com/svg/" title="SVG">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#svg"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/css/" title="CSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#css"></use>
  </svg>
</a><a class="topic" href="https://lenguajecss.com/postcss/" title="PostCSS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#postcss"></use>
  </svg>
</a><a class="topic" href="../../../fundamentos/index.htm" title="Fundamentos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#blueprint"></use>
  </svg>
</a><a class="topic" href="../../../javascript/index.htm" title="Javascript">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#js"></use>
  </svg>
</a><a class="topic" href="../../../npm/index.htm" title="NPM">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#npm"></use>
  </svg>
</a><a class="topic" href="../../index.htm" title="WebComponents">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#webcomponents"></use>
  </svg>
</a><a class="topic" href="https://terminaldelinux.com/terminal/" title="Terminal">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#terminal"></use>
  </svg>
</a><a class="topic" href="../../../vuejs/index.htm" title="VueJS">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#vuejs"></use>
  </svg>
</a><a class="topic" href="../../../automatizadores/index.htm" title="Automatizadores">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#bundler"></use>
  </svg>
</a><a class="topic" href="../../../retos/index.htm" title="Retos">
  <svg class="logo">
    <use href="../../../assets/icons/logos.svg#retos"></use>
  </svg>
</a></div>
  </div>

</section>

    <section class="about">
  <div class="wrapper column">
    <h2>¿Quién soy yo?</h2>

    <div class="about-container">
      <div class="avatar"></div>
      <div>
        <p>Soy Manz, vivo en Tenerife (España) y soy streamer partner en Twitch <svg width="20" height="20" viewbox="0 0 20 20">
          <path fill="#a970ff" d="M10 2l6 2 2 6-2 6-6 2-6-2-2-6 2-6 6-2zM8.889 13.636l5.43-5.429-1.415-1.414-4.015 4.015-2.015-2.015-1.414 1.414 3.429 3.43z"></path>
          </svg> y profesor. Me apasiona el universo de la programación web, el diseño y desarrollo web y la tecnología en general.
          Aunque soy full-stack, mi pasión es el front-end, la terminal y crear cosas divertidas y locas.
        </p>
      </div>
    </div>
    <p>Puedes encontrar más sobre mi en <a href="https://manz.dev/">Manz.dev</a></p>
  </div>
</section>

<script>
  const avatar = document.querySelector(".about .avatar");
  let honk;
  avatar.addEventListener("mousedown", () => {
    if (!honk)
      honk = new Audio("/assets/sounds/toy.ogg");
    honk.currentTime = 0;
    honk.play();
  });
</script>

    

<footer class="main">

  <div class="wrapper">
    <div class="social">

      <div class="group">
        <a class="btn" href="https://twitch.tv/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#twitch"></use>
  </svg>
  <span>Twitch</span>
</a>
        <a class="btn" href="https://youtube.com/@ManzDev?sub_confirmation=1">
  <svg>
    <use href="../../../assets/icons/social.svg#youtube"></use>
  </svg>
  <span>Youtube</span>
</a>
        <a class="btn" href="https://twitter.com/Manz">
  <svg>
    <use href="../../../assets/icons/social.svg#twitter"></use>
  </svg>
  <span>Twitter</span>
</a>
        <a class="btn" href="https://instagram.com/manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#instagram"></use>
  </svg>
  <span>Instagram</span>
</a>
        <a class="btn" href="https://tiktok.com/@manz.dev">
  <svg>
    <use href="../../../assets/icons/social.svg#tiktok"></use>
  </svg>
  <span>Tiktok</span>
</a>
        <a class="btn" href="https://linkedin.com/in/joseromanhdez">
  <svg>
    <use href="../../../assets/icons/social.svg#linkedin"></use>
  </svg>
  <span>Linkedin</span>
</a>
        <a class="btn" href="https://discord.manz.dev/">
  <svg>
    <use href="../../../assets/icons/social.svg#discord"></use>
  </svg>
  <span>Discord</span>
</a>
        <a class="btn" href="https://github.com/ManzDev">
  <svg>
    <use href="../../../assets/icons/social.svg#github"></use>
  </svg>
  <span>GitHub</span>
</a>
      </div>

      <div class="group last column">
        <p>Creado por Manz con <span title="<3">❤</span> · Alojado en <a href="https://manz.dev/digitalocean">DigitalOcean</a>.</p>
        <p>&copy; Todos los derechos reservados. Los izquierdos también.</p>
      </div>
    </div>
  </div>

</footer>


<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-6', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics.js'></script>


<script>
  const heart = document.querySelector("footer.main span[title='<3']");
  let beat;
  heart.addEventListener("mousedown", () => {
    if (!beat)
      beat = new Audio("/assets/sounds/beat.ogg");
    beat.currentTime = 0;
    beat.play();
  });
</script>

  </div></body>

</html>
